(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{107:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"b",(function(){return getCellAddressFromPosition})),__webpack_require__.d(__webpack_exports__,"c",(function(){return getFontBlockEditorState})),__webpack_require__.d(__webpack_exports__,"a",(function(){return createEditorStateFromCell}));__webpack_require__(48),__webpack_require__(86);var draft_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(28),_text__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(69),_constants_types__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(12),_style__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(47),_conversion__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(99),changeActiveCell=function changeActiveCell(position){return position},getCellAddressFromPosition=function getCellAddressFromPosition(_a){var x=_a.x,y=_a.y;return""+Object(_conversion__WEBPACK_IMPORTED_MODULE_6__.a)(x)+y},getFontBlockEditorState=function getFontBlockEditorState(blockEditorState,style){return Object(_style__WEBPACK_IMPORTED_MODULE_5__.a)(style)&&(blockEditorState=draft_js__WEBPACK_IMPORTED_MODULE_2__.RichUtils.toggleInlineStyle(blockEditorState,"BOLD")),Object(_style__WEBPACK_IMPORTED_MODULE_5__.d)(style)&&(blockEditorState=draft_js__WEBPACK_IMPORTED_MODULE_2__.RichUtils.toggleInlineStyle(blockEditorState,"UNDERLINE")),Object(_style__WEBPACK_IMPORTED_MODULE_5__.c)(style)&&(blockEditorState=draft_js__WEBPACK_IMPORTED_MODULE_2__.RichUtils.toggleInlineStyle(blockEditorState,"STRIKETHROUGH")),Object(_style__WEBPACK_IMPORTED_MODULE_5__.b)(style)&&(blockEditorState=draft_js__WEBPACK_IMPORTED_MODULE_2__.RichUtils.toggleInlineStyle(blockEditorState,"ITALIC")),blockEditorState},createEditorStateFromCell=function createEditorStateFromCell(cell,focusEnd){void 0===focusEnd&&(focusEnd=!1);var editorState=null;if(cell){if(void 0!==cell.value)switch(cell.type){case _constants_types__WEBPACK_IMPORTED_MODULE_4__.a:editorState=Object(_text__WEBPACK_IMPORTED_MODULE_3__.b)("="+cell.value);break;case _constants_types__WEBPACK_IMPORTED_MODULE_4__.d:editorState=Object(_text__WEBPACK_IMPORTED_MODULE_3__.a)(cell.value);break;case _constants_types__WEBPACK_IMPORTED_MODULE_4__.c:editorState=Object(_text__WEBPACK_IMPORTED_MODULE_3__.b)(cell.value.toString());break;case _constants_types__WEBPACK_IMPORTED_MODULE_4__.e:default:editorState=Object(_text__WEBPACK_IMPORTED_MODULE_3__.b)(cell.value)}if(cell.style&&cell.style.font){var blockEditorState=draft_js__WEBPACK_IMPORTED_MODULE_2__.EditorState.moveFocusToEnd(editorState||Object(_text__WEBPACK_IMPORTED_MODULE_3__.c)());editorState=getFontBlockEditorState(draft_js__WEBPACK_IMPORTED_MODULE_2__.EditorState.acceptSelection(blockEditorState,Object(_style__WEBPACK_IMPORTED_MODULE_5__.f)(blockEditorState)),cell.style.font)}}return editorState=editorState||Object(_text__WEBPACK_IMPORTED_MODULE_3__.c)(),focusEnd&&(editorState=draft_js__WEBPACK_IMPORTED_MODULE_2__.EditorState.moveFocusToEnd(editorState)),editorState};try{changeActiveCell.displayName="changeActiveCell",changeActiveCell.__docgenInfo={description:"",displayName:"changeActiveCell",props:{x:{defaultValue:null,description:"",name:"x",required:!0,type:{name:"number"}},y:{defaultValue:null,description:"",name:"y",required:!0,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/cell.ts#changeActiveCell"]={docgenInfo:changeActiveCell.__docgenInfo,name:"changeActiveCell",path:"src/tools/cell.ts#changeActiveCell"})}catch(__react_docgen_typescript_loader_error){}try{getCellAddressFromPosition.displayName="getCellAddressFromPosition",getCellAddressFromPosition.__docgenInfo={description:"",displayName:"getCellAddressFromPosition",props:{x:{defaultValue:null,description:"",name:"x",required:!0,type:{name:"number"}},y:{defaultValue:null,description:"",name:"y",required:!0,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/cell.ts#getCellAddressFromPosition"]={docgenInfo:getCellAddressFromPosition.__docgenInfo,name:"getCellAddressFromPosition",path:"src/tools/cell.ts#getCellAddressFromPosition"})}catch(__react_docgen_typescript_loader_error){}},109:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return getScrollbarSize}));var size,getScrollbarSize=(size=-1,function(recalculate){return void 0===recalculate&&(recalculate=!1),(-1===size||recalculate)&&(size=22),size});try{getScrollbarSize.displayName="getScrollbarSize",getScrollbarSize.__docgenInfo={description:"",displayName:"getScrollbarSize",props:{valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/misc.ts#getScrollbarSize"]={docgenInfo:getScrollbarSize.__docgenInfo,name:"getScrollbarSize",path:"src/tools/misc.ts#getScrollbarSize"})}catch(__react_docgen_typescript_loader_error){}},1095:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(171),_NonRoute_stories__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(358),_Formula_stories__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(357),__STORY__=(__webpack_require__(1096),"import { storiesOf } from '@storybook/react'\r\nimport NonRoute from './NonRoute.stories'\r\nimport Formulas from './Formula.stories'\r\nimport './index.css'\r\n\r\nstoriesOf('Formulas', module).add('Formula', Formulas)\r\n// .addParameters({ info: { inline: true } })\r\n\r\nstoriesOf('Router', module).add('No Route', NonRoute)\r\n// .addParameters({ info: { inline: true } })\r\n"),__LOCATIONS_MAP__={formula:{startLoc:{col:34,line:6},endLoc:{col:53,line:6},startBody:{col:45,line:6},endBody:{col:53,line:6}},"no-route":{startLoc:{col:32,line:9},endLoc:{col:52,line:9},startBody:{col:44,line:9},endBody:{col:52,line:9}}};Object(_storybook_react__WEBPACK_IMPORTED_MODULE_0__.storiesOf)("Formulas",module).addParameters({storySource:{source:__STORY__,locationsMap:__LOCATIONS_MAP__}}).add("Formula",_Formula_stories__WEBPACK_IMPORTED_MODULE_2__.default),Object(_storybook_react__WEBPACK_IMPORTED_MODULE_0__.storiesOf)("Router",module).addParameters({storySource:{source:__STORY__,locationsMap:__LOCATIONS_MAP__}}).add("No Route",_NonRoute_stories__WEBPACK_IMPORTED_MODULE_1__.default)}.call(this,__webpack_require__(340)(module))},1096:function(module,exports,__webpack_require__){var api=__webpack_require__(1097),content=__webpack_require__(1098);"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};api(content,options);module.exports=content.locals||{}},1098:function(module,exports,__webpack_require__){(exports=__webpack_require__(1099)(!1)).push([module.i,"body {\r\n  margin: 0 !important;\r\n  padding: 0 !important;\r\n}",""]),module.exports=exports},146:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"d",(function(){return computeActiveCellBottomLeftStyle})),__webpack_require__.d(__webpack_exports__,"e",(function(){return computeSelectionAreaBottomLeftStyle})),__webpack_require__.d(__webpack_exports__,"b",(function(){return checkIsAreaInBottomLeftPane})),__webpack_require__.d(__webpack_exports__,"a",(function(){return checkIsActiveCellInBottomLeftPane})),__webpack_require__.d(__webpack_exports__,"c",(function(){return checkIsDragRowOffsetInBottomLeftPane}));var ___WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(17),_constants_styles__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(5),_redux_tools_merge__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(63),computeActiveCellBottomLeftStyle=function computeActiveCellBottomLeftStyle(position,columnWidths,columnOffsets,rowHeights,rowOffsets,freezeRowCount,data){var height,width,left,top,mergeData=data[position.y]&&data[position.y][position.x]?data[position.y][position.x].merged:void 0;if(mergeData){var _a=Object(_redux_tools_merge__WEBPACK_IMPORTED_MODULE_2__.a)(data,mergeData),start=_a.start,end=_a.end;height=rowOffsets[end.y]+Object(___WEBPACK_IMPORTED_MODULE_0__.k)(rowHeights[end.y])-rowOffsets[start.y],width=columnOffsets[end.x]+Object(___WEBPACK_IMPORTED_MODULE_0__.i)(columnWidths[end.x])-columnOffsets[start.x],top=rowOffsets[start.y],left=columnOffsets[start.x]}else height=Object(___WEBPACK_IMPORTED_MODULE_0__.l)(position.y,rowHeights),width=Object(___WEBPACK_IMPORTED_MODULE_0__.j)(position.x,columnWidths),top=rowOffsets[position.y],left=columnOffsets[position.x];var activeCellStyle={top:top-1,left:left-1,height:height,width:width},topFreeze=rowOffsets[freezeRowCount],heightFreeze=Object(___WEBPACK_IMPORTED_MODULE_0__.l)(freezeRowCount,rowHeights);return activeCellStyle.top=activeCellStyle.top-topFreeze-heightFreeze,activeCellStyle},computeSelectionAreaBottomLeftStyle=function computeSelectionAreaBottomLeftStyle(columnWidths,columnOffsets,rowHeights,rowOffsets,freezeColumnCount,freezeRowCount,selectionArea){if(!selectionArea)return{};var selectionAreaWidth,selectionAreaHeight,top,start=selectionArea.start,end=selectionArea.end,customSelectionStyle={borderLeftWidth:_constants_styles__WEBPACK_IMPORTED_MODULE_1__.l,borderLeftColor:_constants_styles__WEBPACK_IMPORTED_MODULE_1__.j,borderLeftStyle:_constants_styles__WEBPACK_IMPORTED_MODULE_1__.k,borderBottomWidth:_constants_styles__WEBPACK_IMPORTED_MODULE_1__.l,borderBottomColor:_constants_styles__WEBPACK_IMPORTED_MODULE_1__.j,borderBottomStyle:_constants_styles__WEBPACK_IMPORTED_MODULE_1__.k},topStart=rowOffsets[start.y],leftStart=columnOffsets[start.x],widthStart=Object(___WEBPACK_IMPORTED_MODULE_0__.j)(start.x,columnWidths),heightStart=Object(___WEBPACK_IMPORTED_MODULE_0__.l)(start.y,rowHeights),topEnd=rowOffsets[end.y],leftEnd=columnOffsets[end.x],widthEnd=Object(___WEBPACK_IMPORTED_MODULE_0__.j)(end.x,columnWidths),heightEnd=Object(___WEBPACK_IMPORTED_MODULE_0__.l)(end.y,rowHeights),topFrozenEnd=rowOffsets[freezeRowCount],leftFrozenEnd=columnOffsets[freezeColumnCount],widthFrozenEnd=Object(___WEBPACK_IMPORTED_MODULE_0__.j)(freezeColumnCount,columnWidths),heightFrozenEnd=Object(___WEBPACK_IMPORTED_MODULE_0__.l)(freezeRowCount,rowHeights),minLeft=start.x<end.x?leftStart:leftEnd,left=minLeft;return start.x>freezeColumnCount||end.x>freezeColumnCount?selectionAreaWidth=leftFrozenEnd+widthFrozenEnd-minLeft:(selectionAreaWidth=start.x<end.x?leftEnd+widthEnd-minLeft:leftStart+widthStart-minLeft,customSelectionStyle.borderRightWidth=_constants_styles__WEBPACK_IMPORTED_MODULE_1__.l,customSelectionStyle.borderRightColor=_constants_styles__WEBPACK_IMPORTED_MODULE_1__.j,customSelectionStyle.borderRightStyle=_constants_styles__WEBPACK_IMPORTED_MODULE_1__.k),freezeRowCount&&(start.y<=freezeRowCount||end.y<=freezeRowCount)?(top=0,selectionAreaHeight=start.y<end.y?topEnd+heightEnd-topFrozenEnd-heightFrozenEnd:topStart+heightStart-topFrozenEnd-heightFrozenEnd):(start.y<end.y?(top=topStart-topFrozenEnd-heightFrozenEnd,selectionAreaHeight=topEnd+heightEnd-topStart):(top=topEnd-topFrozenEnd-heightFrozenEnd,selectionAreaHeight=topStart+heightStart-topEnd),customSelectionStyle.borderTopWidth=_constants_styles__WEBPACK_IMPORTED_MODULE_1__.l,customSelectionStyle.borderTopColor=_constants_styles__WEBPACK_IMPORTED_MODULE_1__.j,customSelectionStyle.borderTopStyle=_constants_styles__WEBPACK_IMPORTED_MODULE_1__.k),customSelectionStyle.left=left,customSelectionStyle.top=top,customSelectionStyle.width=selectionAreaWidth,customSelectionStyle.height=selectionAreaHeight,customSelectionStyle},checkIsAreaInBottomLeftPane=function checkIsAreaInBottomLeftPane(freezeColumnCount,freezeRowCount,area){return(area.start.x<=freezeColumnCount||area.end.x<=freezeColumnCount)&&(area.start.y>freezeRowCount||area.end.y>freezeRowCount)},checkIsActiveCellInBottomLeftPane=function checkIsActiveCellInBottomLeftPane(position,freezeColumnCount,freezeRowCount){return position.x<=freezeColumnCount&&position.y>freezeRowCount},checkIsDragRowOffsetInBottomLeftPane=function checkIsDragRowOffsetInBottomLeftPane(_freezeColumnCount,freezeRowCount,offset,rowOffsets,getRowHeight,scrollOffsetY){var freezeRowLength=rowOffsets[freezeRowCount]+getRowHeight(freezeRowCount);return freezeRowLength<=offset&&offset>freezeRowLength&&offset-scrollOffsetY>freezeRowLength}},147:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"e",(function(){return computeSelectionAreaTopLeftStyle})),__webpack_require__.d(__webpack_exports__,"b",(function(){return checkIsAreaInTopLeftPane})),__webpack_require__.d(__webpack_exports__,"a",(function(){return checkIsActiveCellInTopLeftPane})),__webpack_require__.d(__webpack_exports__,"c",(function(){return checkIsDragColumnOffsetInTopLeftPane})),__webpack_require__.d(__webpack_exports__,"d",(function(){return checkIsDragRowOffsetInTopLeftPane}));var _constants_styles__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(5),___WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(17),computeSelectionAreaTopLeftStyle=function computeSelectionAreaTopLeftStyle(columnWidths,columnOffsets,rowHeights,rowOffsets,freezeColumnCount,freezeRowCount,selectionArea){if(!selectionArea)return{};var selectionAreaWidth,selectionAreaHeight,start=selectionArea.start,end=selectionArea.end,customSelectionStyle={borderLeftWidth:_constants_styles__WEBPACK_IMPORTED_MODULE_0__.l,borderLeftColor:_constants_styles__WEBPACK_IMPORTED_MODULE_0__.j,borderLeftStyle:_constants_styles__WEBPACK_IMPORTED_MODULE_0__.k,borderTopWidth:_constants_styles__WEBPACK_IMPORTED_MODULE_0__.l,borderTopColor:_constants_styles__WEBPACK_IMPORTED_MODULE_0__.j,borderTopStyle:_constants_styles__WEBPACK_IMPORTED_MODULE_0__.k},topStart=rowOffsets[start.y],leftStart=columnOffsets[start.x],widthStart=Object(___WEBPACK_IMPORTED_MODULE_1__.j)(start.x,columnWidths),heightStart=Object(___WEBPACK_IMPORTED_MODULE_1__.l)(start.y,rowHeights),topEnd=rowOffsets[end.y],leftEnd=columnOffsets[end.x],widthEnd=Object(___WEBPACK_IMPORTED_MODULE_1__.j)(end.x,columnWidths),heightEnd=Object(___WEBPACK_IMPORTED_MODULE_1__.l)(end.y,rowHeights),topFrozenEnd=rowOffsets[freezeRowCount],leftFrozenEnd=columnOffsets[freezeColumnCount],widthFrozenEnd=Object(___WEBPACK_IMPORTED_MODULE_1__.j)(freezeColumnCount,columnWidths),heightFrozenEnd=Object(___WEBPACK_IMPORTED_MODULE_1__.l)(freezeRowCount,rowHeights),minLeft=start.x<end.x?leftStart:leftEnd,left=minLeft;start.x>freezeColumnCount||end.x>freezeColumnCount?selectionAreaWidth=leftFrozenEnd+widthFrozenEnd-minLeft:(selectionAreaWidth=start.x<end.x?leftEnd+widthEnd-minLeft:leftStart+widthStart-minLeft,customSelectionStyle.borderRightWidth=_constants_styles__WEBPACK_IMPORTED_MODULE_0__.l,customSelectionStyle.borderRightColor=_constants_styles__WEBPACK_IMPORTED_MODULE_0__.j,customSelectionStyle.borderRightStyle=_constants_styles__WEBPACK_IMPORTED_MODULE_0__.k);var minTop=start.y<end.y?topStart:topEnd,top=minTop;return start.y>freezeRowCount||end.y>freezeRowCount?selectionAreaHeight=(start.y,end.y,topFrozenEnd+heightFrozenEnd-minTop):(selectionAreaHeight=start.y<end.y?topEnd+heightEnd-minTop:topStart+heightStart-minTop,customSelectionStyle.borderBottomWidth=_constants_styles__WEBPACK_IMPORTED_MODULE_0__.l,customSelectionStyle.borderBottomColor=_constants_styles__WEBPACK_IMPORTED_MODULE_0__.j,customSelectionStyle.borderBottomStyle=_constants_styles__WEBPACK_IMPORTED_MODULE_0__.k),customSelectionStyle.left=left,customSelectionStyle.top=top,customSelectionStyle.width=selectionAreaWidth,customSelectionStyle.height=selectionAreaHeight,customSelectionStyle},checkIsAreaInTopLeftPane=function checkIsAreaInTopLeftPane(freezeColumnCount,freezeRowCount,area){return(area.start.x<=freezeColumnCount||area.end.x<=freezeColumnCount)&&(area.start.y<=freezeRowCount||area.end.y<=freezeRowCount)},checkIsActiveCellInTopLeftPane=function checkIsActiveCellInTopLeftPane(position,freezeColumnCount,freezeRowCount){return position.x<=freezeColumnCount&&position.y<=freezeRowCount},checkIsDragColumnOffsetInTopLeftPane=function checkIsDragColumnOffsetInTopLeftPane(freezeColumnCount,freezeRowCount,offset,columnOffsets,getColumnWidth,scrollOffsetX){var freezeColumnLength=columnOffsets[freezeColumnCount]+getColumnWidth(freezeColumnCount);return freezeRowCount&&freezeColumnCount&&freezeColumnLength>offset||offset>freezeColumnLength&&offset-scrollOffsetX<=freezeColumnLength},checkIsDragRowOffsetInTopLeftPane=function checkIsDragRowOffsetInTopLeftPane(freezeColumnCount,freezeRowCount,offset,rowOffsets,getRowHeight,scrollOffsetY){var freezeRowLength=rowOffsets[freezeRowCount]+getRowHeight(freezeRowCount);return freezeColumnCount&&freezeRowCount&&freezeRowLength>offset||offset>freezeRowLength&&offset-scrollOffsetY<=freezeRowLength}},160:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"d",(function(){return computeSelectionAreaTopRightStyle})),__webpack_require__.d(__webpack_exports__,"b",(function(){return checkIsAreaInTopRightPane})),__webpack_require__.d(__webpack_exports__,"a",(function(){return checkIsActiveCellInTopRightPane})),__webpack_require__.d(__webpack_exports__,"c",(function(){return checkIsDragColumnOffsetInTopRightPane}));var _constants_styles__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(5),___WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(17),computeSelectionAreaTopRightStyle=function computeSelectionAreaTopRightStyle(columnWidths,columnOffsets,rowHeights,rowOffsets,freezeColumnCount,freezeRowCount,selectionArea){if(!selectionArea)return{};var selectionAreaWidth,selectionAreaHeight,left,start=selectionArea.start,end=selectionArea.end,customSelectionStyle={borderRightWidth:_constants_styles__WEBPACK_IMPORTED_MODULE_0__.l,borderRightColor:_constants_styles__WEBPACK_IMPORTED_MODULE_0__.j,borderRightStyle:_constants_styles__WEBPACK_IMPORTED_MODULE_0__.k,borderTopWidth:_constants_styles__WEBPACK_IMPORTED_MODULE_0__.l,borderTopColor:_constants_styles__WEBPACK_IMPORTED_MODULE_0__.j,borderTopStyle:_constants_styles__WEBPACK_IMPORTED_MODULE_0__.k},topStart=rowOffsets[start.y],leftStart=columnOffsets[start.x],widthStart=Object(___WEBPACK_IMPORTED_MODULE_1__.j)(start.x,columnWidths),heightStart=Object(___WEBPACK_IMPORTED_MODULE_1__.l)(start.y,rowHeights),topEnd=rowOffsets[end.y],leftEnd=columnOffsets[end.x],widthEnd=Object(___WEBPACK_IMPORTED_MODULE_1__.j)(end.x,columnWidths),heightEnd=Object(___WEBPACK_IMPORTED_MODULE_1__.l)(end.y,rowHeights),topFrozenEnd=rowOffsets[freezeRowCount],leftFrozenEnd=columnOffsets[freezeColumnCount],widthFrozenEnd=Object(___WEBPACK_IMPORTED_MODULE_1__.j)(freezeColumnCount,columnWidths),heightFrozenEnd=Object(___WEBPACK_IMPORTED_MODULE_1__.l)(freezeRowCount,rowHeights);freezeColumnCount&&(start.x<=freezeColumnCount||end.x<=freezeColumnCount)?(left=leftFrozenEnd+widthFrozenEnd,selectionAreaWidth=start.x<end.x?leftEnd+widthEnd-left:leftStart+widthStart-left):(start.x<end.x?(selectionAreaWidth=leftEnd+widthEnd-leftStart,left=leftStart):(selectionAreaWidth=leftStart+widthStart-leftEnd,left=leftEnd),customSelectionStyle.borderLeftWidth=_constants_styles__WEBPACK_IMPORTED_MODULE_0__.l,customSelectionStyle.borderLeftColor=_constants_styles__WEBPACK_IMPORTED_MODULE_0__.j,customSelectionStyle.borderLeftStyle=_constants_styles__WEBPACK_IMPORTED_MODULE_0__.k);var top=start.y<end.y?topStart:topEnd;return start.y>freezeRowCount||end.y>freezeRowCount?selectionAreaHeight=topFrozenEnd+heightFrozenEnd-top:(selectionAreaHeight=start.y<end.y?topEnd+heightEnd-topStart:topStart+heightStart-topEnd,customSelectionStyle.borderBottomWidth=_constants_styles__WEBPACK_IMPORTED_MODULE_0__.l,customSelectionStyle.borderBottomColor=_constants_styles__WEBPACK_IMPORTED_MODULE_0__.j,customSelectionStyle.borderBottomStyle=_constants_styles__WEBPACK_IMPORTED_MODULE_0__.k),customSelectionStyle.left=left,customSelectionStyle.top=top,customSelectionStyle.width=selectionAreaWidth,customSelectionStyle.height=selectionAreaHeight,customSelectionStyle},checkIsAreaInTopRightPane=function checkIsAreaInTopRightPane(freezeColumnCount,freezeRowCount,area){return(area.start.x>freezeColumnCount||area.end.x>freezeColumnCount)&&(area.start.y<=freezeRowCount||area.end.y<=freezeRowCount)},checkIsActiveCellInTopRightPane=function checkIsActiveCellInTopRightPane(position,freezeColumnCount,freezeRowCount){return position.x>freezeColumnCount&&position.y<=freezeRowCount},checkIsDragColumnOffsetInTopRightPane=function checkIsDragColumnOffsetInTopRightPane(freezeColumnCount,_freezeRowCount,offset,columnOffsets,getColumnWidth,scrollOffsetX){var freezeColumnLength=columnOffsets[freezeColumnCount]+getColumnWidth(freezeColumnCount);return freezeColumnLength<=offset&&offset>freezeColumnLength&&offset-scrollOffsetX>freezeColumnLength}},17:function(module,__webpack_exports__,__webpack_require__){"use strict";var _area__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(42);__webpack_require__.d(__webpack_exports__,"a",(function(){return _area__WEBPACK_IMPORTED_MODULE_0__.b})),__webpack_require__.d(__webpack_exports__,"b",(function(){return _area__WEBPACK_IMPORTED_MODULE_0__.c})),__webpack_require__.d(__webpack_exports__,"e",(function(){return _area__WEBPACK_IMPORTED_MODULE_0__.j}));__webpack_require__(107),__webpack_require__(265);var _dimensions__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(26);__webpack_require__.d(__webpack_exports__,"c",(function(){return _dimensions__WEBPACK_IMPORTED_MODULE_3__.a})),__webpack_require__.d(__webpack_exports__,"d",(function(){return _dimensions__WEBPACK_IMPORTED_MODULE_3__.b})),__webpack_require__.d(__webpack_exports__,"f",(function(){return _dimensions__WEBPACK_IMPORTED_MODULE_3__.i})),__webpack_require__.d(__webpack_exports__,"g",(function(){return _dimensions__WEBPACK_IMPORTED_MODULE_3__.j})),__webpack_require__.d(__webpack_exports__,"h",(function(){return _dimensions__WEBPACK_IMPORTED_MODULE_3__.k})),__webpack_require__.d(__webpack_exports__,"i",(function(){return _dimensions__WEBPACK_IMPORTED_MODULE_3__.l})),__webpack_require__.d(__webpack_exports__,"j",(function(){return _dimensions__WEBPACK_IMPORTED_MODULE_3__.m})),__webpack_require__.d(__webpack_exports__,"k",(function(){return _dimensions__WEBPACK_IMPORTED_MODULE_3__.n})),__webpack_require__.d(__webpack_exports__,"l",(function(){return _dimensions__WEBPACK_IMPORTED_MODULE_3__.o}));__webpack_require__(174),__webpack_require__(263),__webpack_require__(208),__webpack_require__(97),__webpack_require__(266),__webpack_require__(207),__webpack_require__(69),__webpack_require__(264);try{getMinPositionFromArea.displayName="getMinPositionFromArea",getMinPositionFromArea.__docgenInfo={description:"",displayName:"getMinPositionFromArea",props:{start:{defaultValue:null,description:"",name:"start",required:!0,type:{name:"IPosition"}},end:{defaultValue:null,description:"",name:"end",required:!0,type:{name:"IPosition"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#getMinPositionFromArea"]={docgenInfo:getMinPositionFromArea.__docgenInfo,name:"getMinPositionFromArea",path:"src/tools/index.ts#getMinPositionFromArea"})}catch(__react_docgen_typescript_loader_error){}try{getMaxPositionFromArea.displayName="getMaxPositionFromArea",getMaxPositionFromArea.__docgenInfo={description:"",displayName:"getMaxPositionFromArea",props:{start:{defaultValue:null,description:"",name:"start",required:!0,type:{name:"IPosition"}},end:{defaultValue:null,description:"",name:"end",required:!0,type:{name:"IPosition"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#getMaxPositionFromArea"]={docgenInfo:getMaxPositionFromArea.__docgenInfo,name:"getMaxPositionFromArea",path:"src/tools/index.ts#getMaxPositionFromArea"})}catch(__react_docgen_typescript_loader_error){}try{getAreaRangesFromOrderedArea.displayName="getAreaRangesFromOrderedArea",getAreaRangesFromOrderedArea.__docgenInfo={description:"",displayName:"getAreaRangesFromOrderedArea",props:{start:{defaultValue:null,description:"",name:"start",required:!0,type:{name:"IPosition"}},end:{defaultValue:null,description:"",name:"end",required:!0,type:{name:"IPosition"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#getAreaRangesFromOrderedArea"]={docgenInfo:getAreaRangesFromOrderedArea.__docgenInfo,name:"getAreaRangesFromOrderedArea",path:"src/tools/index.ts#getAreaRangesFromOrderedArea"})}catch(__react_docgen_typescript_loader_error){}try{getAreaFromPosition.displayName="getAreaFromPosition",getAreaFromPosition.__docgenInfo={description:"",displayName:"getAreaFromPosition",props:{x:{defaultValue:null,description:"",name:"x",required:!0,type:{name:"number"}},y:{defaultValue:null,description:"",name:"y",required:!0,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#getAreaFromPosition"]={docgenInfo:getAreaFromPosition.__docgenInfo,name:"getAreaFromPosition",path:"src/tools/index.ts#getAreaFromPosition"})}catch(__react_docgen_typescript_loader_error){}try{checkIsAreaEqualPosition.displayName="checkIsAreaEqualPosition",checkIsAreaEqualPosition.__docgenInfo={description:"",displayName:"checkIsAreaEqualPosition",props:{start:{defaultValue:null,description:"",name:"start",required:!0,type:{name:"IPosition"}},end:{defaultValue:null,description:"",name:"end",required:!0,type:{name:"IPosition"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#checkIsAreaEqualPosition"]={docgenInfo:checkIsAreaEqualPosition.__docgenInfo,name:"checkIsAreaEqualPosition",path:"src/tools/index.ts#checkIsAreaEqualPosition"})}catch(__react_docgen_typescript_loader_error){}try{getOrderedAreaFromArea.displayName="getOrderedAreaFromArea",getOrderedAreaFromArea.__docgenInfo={description:"",displayName:"getOrderedAreaFromArea",props:{start:{defaultValue:null,description:"",name:"start",required:!0,type:{name:"IPosition"}},end:{defaultValue:null,description:"",name:"end",required:!0,type:{name:"IPosition"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#getOrderedAreaFromArea"]={docgenInfo:getOrderedAreaFromArea.__docgenInfo,name:"getOrderedAreaFromArea",path:"src/tools/index.ts#getOrderedAreaFromArea"})}catch(__react_docgen_typescript_loader_error){}try{getAreaRanges.displayName="getAreaRanges",getAreaRanges.__docgenInfo={description:"",displayName:"getAreaRanges",props:{start:{defaultValue:null,description:"",name:"start",required:!0,type:{name:"IPosition"}},end:{defaultValue:null,description:"",name:"end",required:!0,type:{name:"IPosition"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#getAreaRanges"]={docgenInfo:getAreaRanges.__docgenInfo,name:"getAreaRanges",path:"src/tools/index.ts#getAreaRanges"})}catch(__react_docgen_typescript_loader_error){}try{getFirstSuperAreaIndex.displayName="getFirstSuperAreaIndex",getFirstSuperAreaIndex.__docgenInfo={description:"Finds the index of the first superset of area",displayName:"getFirstSuperAreaIndex",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#getFirstSuperAreaIndex"]={docgenInfo:getFirstSuperAreaIndex.__docgenInfo,name:"getFirstSuperAreaIndex",path:"src/tools/index.ts#getFirstSuperAreaIndex"})}catch(__react_docgen_typescript_loader_error){}try{getCellMapSetFromAreas.displayName="getCellMapSetFromAreas",getCellMapSetFromAreas.__docgenInfo={description:"",displayName:"getCellMapSetFromAreas",props:{length:{defaultValue:null,description:"Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.",name:"length",required:!0,type:{name:"number"}},toString:{defaultValue:null,description:"Returns a string representation of an array.",name:"toString",required:!1,type:{name:"() => string"}},toLocaleString:{defaultValue:null,description:"Returns a string representation of an array. The elements are converted to string using their toLocalString methods.",name:"toLocaleString",required:!1,type:{name:"() => string"}},pop:{defaultValue:null,description:"Removes the last element from an array and returns it.",name:"pop",required:!0,type:{name:"() => IArea"}},push:{defaultValue:null,description:"Appends new elements to an array, and returns the new length of the array.\n@param items New elements of the Array.",name:"push",required:!0,type:{name:"(...items: IArea[]) => number"}},concat:{defaultValue:null,description:"Combines two or more arrays.\nCombines two or more arrays.\n@param items Additional items to add to the end of array1.\n@param items Additional items to add to the end of array1.",name:"concat",required:!0,type:{name:"{ (...items: ConcatArray<IArea>[]): IArea[]; (...items: (IArea | ConcatArray<IArea>)[]): IArea[]; }"}},join:{defaultValue:null,description:"Adds all the elements of an array separated by the specified separator string.\n@param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.",name:"join",required:!0,type:{name:"(separator?: string) => string"}},reverse:{defaultValue:null,description:"Reverses the elements in an Array.",name:"reverse",required:!0,type:{name:"() => IArea[]"}},shift:{defaultValue:null,description:"Removes the first element from an array and returns it.",name:"shift",required:!0,type:{name:"() => IArea"}},slice:{defaultValue:null,description:"Returns a section of an array.\n@param start The beginning of the specified portion of the array.\n@param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => IArea[]"}},sort:{defaultValue:null,description:"Sorts an array.\n@param compareFn Function used to determine the order of the elements. It is expected to return\ra negative value if first argument is less than second argument, zero if they're equal and a positive\rvalue otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\r```ts\r[11,2,22,1].sort((a, b) => a - b)\r```",name:"sort",required:!0,type:{name:"(compareFn?: (a: IArea, b: IArea) => number) => IArea[]"}},splice:{defaultValue:null,description:"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\nRemoves elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\n@param start The zero-based location in the array from which to start removing elements.\n@param deleteCount The number of elements to remove.\n@param start The zero-based location in the array from which to start removing elements.\n@param deleteCount The number of elements to remove.\n@param items Elements to insert into the array in place of the deleted elements.",name:"splice",required:!0,type:{name:"{ (start: number, deleteCount?: number): IArea[]; (start: number, deleteCount: number, ...items: IArea[]): IArea[]; }"}},unshift:{defaultValue:null,description:"Inserts new elements at the start of an array.\n@param items Elements to insert at the start of the Array.",name:"unshift",required:!0,type:{name:"(...items: IArea[]) => number"}},indexOf:{defaultValue:null,description:"Returns the index of the first occurrence of a value in an array.\n@param searchElement The value to locate in the array.\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.",name:"indexOf",required:!0,type:{name:"(searchElement: IArea, fromIndex?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the index of the last occurrence of a specified value in an array.\n@param searchElement The value to locate in the array.\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.",name:"lastIndexOf",required:!0,type:{name:"(searchElement: IArea, fromIndex?: number) => number"}},every:{defaultValue:null,description:"Determines whether all the members of an array satisfy the specified test.\n@param callbackfn A function that accepts up to three arguments. The every method calls\rthe callbackfn function for each element in the array until the callbackfn returns a value\rwhich is coercible to the Boolean value false, or until the end of the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.",name:"every",required:!0,type:{name:"(callbackfn: (value: IArea, index: number, array: IArea[]) => unknown, thisArg?: any) => boolean"}},some:{defaultValue:null,description:"Determines whether the specified callback function returns true for any element of an array.\n@param callbackfn A function that accepts up to three arguments. The some method calls\rthe callbackfn function for each element in the array until the callbackfn returns a value\rwhich is coercible to the Boolean value true, or until the end of the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.",name:"some",required:!0,type:{name:"(callbackfn: (value: IArea, index: number, array: IArea[]) => unknown, thisArg?: any) => boolean"}},forEach:{defaultValue:null,description:"Performs the specified action for each element in an array.\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"forEach",required:!0,type:{name:"(callbackfn: (value: IArea, index: number, array: IArea[]) => void, thisArg?: any) => void"}},map:{defaultValue:null,description:"Calls a defined callback function on each element of an array, and returns an array that contains the results.\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"map",required:!0,type:{name:"<U>(callbackfn: (value: IArea, index: number, array: IArea[]) => U, thisArg?: any) => U[]"}},filter:{defaultValue:null,description:"Returns the elements of an array that meet the condition specified in a callback function.\nReturns the elements of an array that meet the condition specified in a callback function.\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"filter",required:!0,type:{name:"{ <S extends IArea>(callbackfn: (value: IArea, index: number, array: IArea[]) => value is S, thisArg?: any): S[]; (callbackfn: (value: IArea, index: number, array: IArea[]) => unknown, thisArg?: any): IArea[]; }"}},reduce:{defaultValue:null,description:"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",name:"reduce",required:!0,type:{name:"{ (callbackfn: (previousValue: IArea, currentValue: IArea, currentIndex: number, array: IArea[]) => IArea): IArea; (callbackfn: (previousValue: IArea, currentValue: IArea, currentIndex: number, array: IArea[]) => IArea, initialValue: IArea): IArea; <U>(callbackfn: (previousValue: U, currentValue: IArea, currentIndex..."}},reduceRight:{defaultValue:null,description:"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",name:"reduceRight",required:!0,type:{name:"{ (callbackfn: (previousValue: IArea, currentValue: IArea, currentIndex: number, array: IArea[]) => IArea): IArea; (callbackfn: (previousValue: IArea, currentValue: IArea, currentIndex: number, array: IArea[]) => IArea, initialValue: IArea): IArea; <U>(callbackfn: (previousValue: U, currentValue: IArea, currentIndex..."}},find:{defaultValue:null,description:"Returns the value of the first element in the array where predicate is true, and undefined\notherwise.\n@param predicate find calls predicate once for each element of the array, in ascending\rorder, until it finds one where predicate returns true. If such an element is found, find\rimmediately returns that element value. Otherwise, find returns undefined.\n@param thisArg If provided, it will be used as the this value for each invocation of\rpredicate. If it is not provided, undefined is used instead.",name:"find",required:!0,type:{name:"{ <S extends IArea>(predicate: (this: void, value: IArea, index: number, obj: IArea[]) => value is S, thisArg?: any): S; (predicate: (value: IArea, index: number, obj: IArea[]) => unknown, thisArg?: any): IArea; }"}},findIndex:{defaultValue:null,description:"Returns the index of the first element in the array where predicate is true, and -1\notherwise.\n@param predicate find calls predicate once for each element of the array, in ascending\rorder, until it finds one where predicate returns true. If such an element is found,\rfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\n@param thisArg If provided, it will be used as the this value for each invocation of\rpredicate. If it is not provided, undefined is used instead.",name:"findIndex",required:!0,type:{name:"(predicate: (value: IArea, index: number, obj: IArea[]) => unknown, thisArg?: any) => number"}},fill:{defaultValue:null,description:"Returns the this object after filling the section identified by start and end with value\n@param value value to fill array section with\n@param start index to start filling the array at. If start is negative, it is treated as\rlength+start where length is the length of the array.\n@param end index to stop filling the array at. If end is negative, it is treated as\rlength+end.",name:"fill",required:!0,type:{name:"(value: IArea, start?: number, end?: number) => IArea[]"}},copyWithin:{defaultValue:null,description:"Returns the this object after copying a section of the array identified by start and end\nto the same array starting at position target\n@param target If target is negative, it is treated as length+target where length is the\rlength of the array.\n@param start If start is negative, it is treated as length+start. If end is negative, it\ris treated as length+end.\n@param end If not specified, length of the this object is used as its default value.",name:"copyWithin",required:!0,type:{name:"(target: number, start: number, end?: number) => IArea[]"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<IArea>"}},entries:{defaultValue:null,description:"Returns an iterable of key, value pairs for every entry in the array",name:"entries",required:!0,type:{name:"() => IterableIterator<[number, IArea]>"}},keys:{defaultValue:null,description:"Returns an iterable of keys in the array",name:"keys",required:!0,type:{name:"() => IterableIterator<number>"}},values:{defaultValue:null,description:"Returns an iterable of values in the array",name:"values",required:!0,type:{name:"() => IterableIterator<IArea>"}},"__@unscopables":{defaultValue:null,description:"Returns an object whose properties have the value 'true'\nwhen they will be absent when used in a 'with' statement.",name:"__@unscopables",required:!0,type:{name:"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }"}},includes:{defaultValue:null,description:"Determines whether an array includes a certain element, returning true or false as appropriate.\n@param searchElement The element to search for.\n@param fromIndex The position in this array at which to begin searching for searchElement.",name:"includes",required:!0,type:{name:"(searchElement: IArea, fromIndex?: number) => boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#getCellMapSetFromAreas"]={docgenInfo:getCellMapSetFromAreas.__docgenInfo,name:"getCellMapSetFromAreas",path:"src/tools/index.ts#getCellMapSetFromAreas"})}catch(__react_docgen_typescript_loader_error){}try{changeActiveCell.displayName="changeActiveCell",changeActiveCell.__docgenInfo={description:"",displayName:"changeActiveCell",props:{x:{defaultValue:null,description:"",name:"x",required:!0,type:{name:"number"}},y:{defaultValue:null,description:"",name:"y",required:!0,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#changeActiveCell"]={docgenInfo:changeActiveCell.__docgenInfo,name:"changeActiveCell",path:"src/tools/index.ts#changeActiveCell"})}catch(__react_docgen_typescript_loader_error){}try{getCellAddressFromPosition.displayName="getCellAddressFromPosition",getCellAddressFromPosition.__docgenInfo={description:"",displayName:"getCellAddressFromPosition",props:{x:{defaultValue:null,description:"",name:"x",required:!0,type:{name:"number"}},y:{defaultValue:null,description:"",name:"y",required:!0,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#getCellAddressFromPosition"]={docgenInfo:getCellAddressFromPosition.__docgenInfo,name:"getCellAddressFromPosition",path:"src/tools/index.ts#getCellAddressFromPosition"})}catch(__react_docgen_typescript_loader_error){}try{normalizeRowHeight.displayName="normalizeRowHeight",normalizeRowHeight.__docgenInfo={description:"",displayName:"normalizeRowHeight",props:{toString:{defaultValue:null,description:"Returns a string representation of an object.\n@param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.",name:"toString",required:!1,type:{name:"(radix?: number) => string"}},toFixed:{defaultValue:null,description:"Returns a string representing a number in fixed-point notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toFixed",required:!0,type:{name:"(fractionDigits?: number) => string"}},toExponential:{defaultValue:null,description:"Returns a string containing a number represented in exponential notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toExponential",required:!0,type:{name:"(fractionDigits?: number) => string"}},toPrecision:{defaultValue:null,description:"Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.\n@param precision Number of significant digits. Must be in the range 1 - 21, inclusive.",name:"toPrecision",required:!0,type:{name:"(precision?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => number"}},toLocaleString:{defaultValue:null,description:"Converts a number to a string by using the current or specified locale.\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n@param options An object that contains one or more properties that specify comparison options.",name:"toLocaleString",required:!1,type:{name:"(locales?: string | string[], options?: NumberFormatOptions) => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#normalizeRowHeight"]={docgenInfo:normalizeRowHeight.__docgenInfo,name:"normalizeRowHeight",path:"src/tools/index.ts#normalizeRowHeight"})}catch(__react_docgen_typescript_loader_error){}try{normalizeColumnWidth.displayName="normalizeColumnWidth",normalizeColumnWidth.__docgenInfo={description:"",displayName:"normalizeColumnWidth",props:{toString:{defaultValue:null,description:"Returns a string representation of an object.\n@param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.",name:"toString",required:!1,type:{name:"(radix?: number) => string"}},toFixed:{defaultValue:null,description:"Returns a string representing a number in fixed-point notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toFixed",required:!0,type:{name:"(fractionDigits?: number) => string"}},toExponential:{defaultValue:null,description:"Returns a string containing a number represented in exponential notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toExponential",required:!0,type:{name:"(fractionDigits?: number) => string"}},toPrecision:{defaultValue:null,description:"Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.\n@param precision Number of significant digits. Must be in the range 1 - 21, inclusive.",name:"toPrecision",required:!0,type:{name:"(precision?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => number"}},toLocaleString:{defaultValue:null,description:"Converts a number to a string by using the current or specified locale.\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n@param options An object that contains one or more properties that specify comparison options.",name:"toLocaleString",required:!1,type:{name:"(locales?: string | string[], options?: NumberFormatOptions) => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#normalizeColumnWidth"]={docgenInfo:normalizeColumnWidth.__docgenInfo,name:"normalizeColumnWidth",path:"src/tools/index.ts#normalizeColumnWidth"})}catch(__react_docgen_typescript_loader_error){}try{denormalizeRowHeight.displayName="denormalizeRowHeight",denormalizeRowHeight.__docgenInfo={description:"",displayName:"denormalizeRowHeight",props:{toString:{defaultValue:null,description:"Returns a string representation of an object.\n@param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.",name:"toString",required:!1,type:{name:"(radix?: number) => string"}},toFixed:{defaultValue:null,description:"Returns a string representing a number in fixed-point notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toFixed",required:!0,type:{name:"(fractionDigits?: number) => string"}},toExponential:{defaultValue:null,description:"Returns a string containing a number represented in exponential notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toExponential",required:!0,type:{name:"(fractionDigits?: number) => string"}},toPrecision:{defaultValue:null,description:"Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.\n@param precision Number of significant digits. Must be in the range 1 - 21, inclusive.",name:"toPrecision",required:!0,type:{name:"(precision?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => number"}},toLocaleString:{defaultValue:null,description:"Converts a number to a string by using the current or specified locale.\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n@param options An object that contains one or more properties that specify comparison options.",name:"toLocaleString",required:!1,type:{name:"(locales?: string | string[], options?: NumberFormatOptions) => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#denormalizeRowHeight"]={docgenInfo:denormalizeRowHeight.__docgenInfo,name:"denormalizeRowHeight",path:"src/tools/index.ts#denormalizeRowHeight"})}catch(__react_docgen_typescript_loader_error){}try{denormalizeColumnWidth.displayName="denormalizeColumnWidth",denormalizeColumnWidth.__docgenInfo={description:"",displayName:"denormalizeColumnWidth",props:{toString:{defaultValue:null,description:"Returns a string representation of an object.\n@param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.",name:"toString",required:!1,type:{name:"(radix?: number) => string"}},toFixed:{defaultValue:null,description:"Returns a string representing a number in fixed-point notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toFixed",required:!0,type:{name:"(fractionDigits?: number) => string"}},toExponential:{defaultValue:null,description:"Returns a string containing a number represented in exponential notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toExponential",required:!0,type:{name:"(fractionDigits?: number) => string"}},toPrecision:{defaultValue:null,description:"Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.\n@param precision Number of significant digits. Must be in the range 1 - 21, inclusive.",name:"toPrecision",required:!0,type:{name:"(precision?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => number"}},toLocaleString:{defaultValue:null,description:"Converts a number to a string by using the current or specified locale.\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n@param options An object that contains one or more properties that specify comparison options.",name:"toLocaleString",required:!1,type:{name:"(locales?: string | string[], options?: NumberFormatOptions) => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#denormalizeColumnWidth"]={docgenInfo:denormalizeColumnWidth.__docgenInfo,name:"denormalizeColumnWidth",path:"src/tools/index.ts#denormalizeColumnWidth"})}catch(__react_docgen_typescript_loader_error){}try{normalizeRowHeightFromArray.displayName="normalizeRowHeightFromArray",normalizeRowHeightFromArray.__docgenInfo={description:"Converts Excel scaled row height unit to normal scaled unit",displayName:"normalizeRowHeightFromArray",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#normalizeRowHeightFromArray"]={docgenInfo:normalizeRowHeightFromArray.__docgenInfo,name:"normalizeRowHeightFromArray",path:"src/tools/index.ts#normalizeRowHeightFromArray"})}catch(__react_docgen_typescript_loader_error){}try{normalizeColumnWidthFromArray.displayName="normalizeColumnWidthFromArray",normalizeColumnWidthFromArray.__docgenInfo={description:"Converts Excel scaled column width unit to normal scaled unit",displayName:"normalizeColumnWidthFromArray",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#normalizeColumnWidthFromArray"]={docgenInfo:normalizeColumnWidthFromArray.__docgenInfo,name:"normalizeColumnWidthFromArray",path:"src/tools/index.ts#normalizeColumnWidthFromArray"})}catch(__react_docgen_typescript_loader_error){}try{getColumnOffsets.displayName="getColumnOffsets",getColumnOffsets.__docgenInfo={description:"Creates an offset list of the column widths",displayName:"getColumnOffsets",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#getColumnOffsets"]={docgenInfo:getColumnOffsets.__docgenInfo,name:"getColumnOffsets",path:"src/tools/index.ts#getColumnOffsets"})}catch(__react_docgen_typescript_loader_error){}try{getRowOffsets.displayName="getRowOffsets",getRowOffsets.__docgenInfo={description:"Creates an offset list of the row heights",displayName:"getRowOffsets",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#getRowOffsets"]={docgenInfo:getRowOffsets.__docgenInfo,name:"getRowOffsets",path:"src/tools/index.ts#getRowOffsets"})}catch(__react_docgen_typescript_loader_error){}try{getEndDimension.displayName="getEndDimension",getEndDimension.__docgenInfo={description:"Gets the final dimension that's viewable",displayName:"getEndDimension",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#getEndDimension"]={docgenInfo:getEndDimension.__docgenInfo,name:"getEndDimension",path:"src/tools/index.ts#getEndDimension"})}catch(__react_docgen_typescript_loader_error){}try{getEntireSuperArea.displayName="getEntireSuperArea",getEntireSuperArea.__docgenInfo={description:"Gets the maximum area which contains the overlapping area expansion, starting from ordered area.\n\nOrdered area represents an area which is ordered: start represents min values, end represents max values",displayName:"getEntireSuperArea",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#getEntireSuperArea"]={docgenInfo:getEntireSuperArea.__docgenInfo,name:"getEntireSuperArea",path:"src/tools/index.ts#getEntireSuperArea"})}catch(__react_docgen_typescript_loader_error){}try{getStylesFromCell.displayName="getStylesFromCell",getStylesFromCell.__docgenInfo={description:"",displayName:"getStylesFromCell",props:{worksheet:{defaultValue:null,description:"",name:"worksheet",required:!0,type:{name:"Worksheet"}},workbook:{defaultValue:null,description:"",name:"workbook",required:!0,type:{name:"Workbook"}},effectiveType:{defaultValue:null,description:"",name:"effectiveType",required:!0,type:{name:"ValueType"}},isMerged:{defaultValue:null,description:"",name:"isMerged",required:!0,type:{name:"boolean"}},master:{defaultValue:null,description:"",name:"master",required:!0,type:{name:"Cell"}},isHyperlink:{defaultValue:null,description:"",name:"isHyperlink",required:!0,type:{name:"boolean"}},hyperlink:{defaultValue:null,description:"",name:"hyperlink",required:!0,type:{name:"string"}},text:{defaultValue:null,description:"",name:"text",required:!0,type:{name:"string"}},fullAddress:{defaultValue:null,description:"",name:"fullAddress",required:!0,type:{name:"{ sheetName: string; address: string; row: string; col: string; }"}},model:{defaultValue:null,description:"",name:"model",required:!0,type:{name:"CellModel"}},name:{defaultValue:null,description:"Assign (or get) a name for a cell (will overwrite any other names that cell had)",name:"name",required:!0,type:{name:"string"}},names:{defaultValue:null,description:"Assign (or get) an array of names for a cell (cells can have more than one name)",name:"names",required:!0,type:{name:"string[]"}},dataValidation:{defaultValue:null,description:"Cells can define what values are valid or not and provide\nprompting to the user to help guide them.",name:"dataValidation",required:!0,type:{name:"DataValidation"}},value:{defaultValue:null,description:"Value of the cell",name:"value",required:!0,type:{name:"CellValue"}},note:{defaultValue:null,description:"comment of the cell",name:"note",required:!0,type:{name:"string | Comment"}},formula:{defaultValue:null,description:"convenience getter to access the formula",name:"formula",required:!0,type:{name:"string"}},result:{defaultValue:null,description:"convenience getter to access the formula result",name:"result",required:!0,type:{name:"string | number | Date"}},type:{defaultValue:null,description:"The type of the cell's value",name:"type",required:!0,type:{name:"ValueType"}},formulaType:{defaultValue:null,description:"The type of the cell's formula",name:"formulaType",required:!0,type:{name:"FormulaType"}},style:{defaultValue:null,description:"The styles of the cell",name:"style",required:!0,type:{name:"Partial<Style>"}},addName:{defaultValue:null,description:"",name:"addName",required:!0,type:{name:"(name: string) => void"}},removeName:{defaultValue:null,description:"Remove a name from a cell",name:"removeName",required:!0,type:{name:"(name: string) => void"}},removeAllNames:{defaultValue:null,description:"",name:"removeAllNames",required:!0,type:{name:"() => void"}},destroy:{defaultValue:null,description:"",name:"destroy",required:!0,type:{name:"() => void"}},toCsvString:{defaultValue:null,description:"",name:"toCsvString",required:!0,type:{name:"() => string"}},release:{defaultValue:null,description:"",name:"release",required:!0,type:{name:"() => void"}},addMergeRef:{defaultValue:null,description:"",name:"addMergeRef",required:!0,type:{name:"() => void"}},releaseMergeRef:{defaultValue:null,description:"",name:"releaseMergeRef",required:!0,type:{name:"() => void"}},merge:{defaultValue:null,description:"",name:"merge",required:!0,type:{name:"(master: Cell, ignoreStyle?: boolean) => void"}},unmerge:{defaultValue:null,description:"",name:"unmerge",required:!0,type:{name:"() => void"}},isMergedTo:{defaultValue:null,description:"",name:"isMergedTo",required:!0,type:{name:"(master: Cell) => boolean"}},toString:{defaultValue:null,description:"Returns a string representation of an object.",name:"toString",required:!1,type:{name:"() => string"}},numFmt:{defaultValue:null,description:"",name:"numFmt",required:!0,type:{name:"string"}},font:{defaultValue:null,description:"",name:"font",required:!0,type:{name:"Partial<Font>"}},alignment:{defaultValue:null,description:"",name:"alignment",required:!0,type:{name:"Partial<Alignment>"}},protection:{defaultValue:null,description:"",name:"protection",required:!0,type:{name:"Partial<Protection>"}},border:{defaultValue:null,description:"",name:"border",required:!0,type:{name:"Partial<Borders>"}},fill:{defaultValue:null,description:"",name:"fill",required:!0,type:{name:"Fill"}},sheetName:{defaultValue:null,description:"",name:"sheetName",required:!1,type:{name:"string"}},address:{defaultValue:null,description:"",name:"address",required:!0,type:{name:"string"}},col:{defaultValue:null,description:"",name:"col",required:!0,type:{name:"string"}},row:{defaultValue:null,description:"",name:"row",required:!0,type:{name:"string"}},$col$row:{defaultValue:null,description:"",name:"$col$row",required:!0,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#getStylesFromCell"]={docgenInfo:getStylesFromCell.__docgenInfo,name:"getStylesFromCell",path:"src/tools/index.ts#getStylesFromCell"})}catch(__react_docgen_typescript_loader_error){}try{getRichTextFromCellValue.displayName="getRichTextFromCellValue",getRichTextFromCellValue.__docgenInfo={description:"",displayName:"getRichTextFromCellValue",props:{richText:{defaultValue:null,description:"",name:"richText",required:!0,type:{name:"RichText[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#getRichTextFromCellValue"]={docgenInfo:getRichTextFromCellValue.__docgenInfo,name:"getRichTextFromCellValue",path:"src/tools/index.ts#getRichTextFromCellValue"})}catch(__react_docgen_typescript_loader_error){}try{getBoundedRow.displayName="getBoundedRow",getBoundedRow.__docgenInfo={description:"",displayName:"getBoundedRow",props:{toString:{defaultValue:null,description:"Returns a string representation of an object.\n@param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.",name:"toString",required:!1,type:{name:"(radix?: number) => string"}},toFixed:{defaultValue:null,description:"Returns a string representing a number in fixed-point notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toFixed",required:!0,type:{name:"(fractionDigits?: number) => string"}},toExponential:{defaultValue:null,description:"Returns a string containing a number represented in exponential notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toExponential",required:!0,type:{name:"(fractionDigits?: number) => string"}},toPrecision:{defaultValue:null,description:"Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.\n@param precision Number of significant digits. Must be in the range 1 - 21, inclusive.",name:"toPrecision",required:!0,type:{name:"(precision?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => number"}},toLocaleString:{defaultValue:null,description:"Converts a number to a string by using the current or specified locale.\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n@param options An object that contains one or more properties that specify comparison options.",name:"toLocaleString",required:!1,type:{name:"(locales?: string | string[], options?: NumberFormatOptions) => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#getBoundedRow"]={docgenInfo:getBoundedRow.__docgenInfo,name:"getBoundedRow",path:"src/tools/index.ts#getBoundedRow"})}catch(__react_docgen_typescript_loader_error){}try{getBoundedColumn.displayName="getBoundedColumn",getBoundedColumn.__docgenInfo={description:"",displayName:"getBoundedColumn",props:{toString:{defaultValue:null,description:"Returns a string representation of an object.\n@param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.",name:"toString",required:!1,type:{name:"(radix?: number) => string"}},toFixed:{defaultValue:null,description:"Returns a string representing a number in fixed-point notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toFixed",required:!0,type:{name:"(fractionDigits?: number) => string"}},toExponential:{defaultValue:null,description:"Returns a string containing a number represented in exponential notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toExponential",required:!0,type:{name:"(fractionDigits?: number) => string"}},toPrecision:{defaultValue:null,description:"Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.\n@param precision Number of significant digits. Must be in the range 1 - 21, inclusive.",name:"toPrecision",required:!0,type:{name:"(precision?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => number"}},toLocaleString:{defaultValue:null,description:"Converts a number to a string by using the current or specified locale.\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n@param options An object that contains one or more properties that specify comparison options.",name:"toLocaleString",required:!1,type:{name:"(locales?: string | string[], options?: NumberFormatOptions) => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#getBoundedColumn"]={docgenInfo:getBoundedColumn.__docgenInfo,name:"getBoundedColumn",path:"src/tools/index.ts#getBoundedColumn"})}catch(__react_docgen_typescript_loader_error){}try{getSheetDataFromSheet.displayName="getSheetDataFromSheet",getSheetDataFromSheet.__docgenInfo={description:"",displayName:"getSheetDataFromSheet",props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"number"}},name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string"}},workbook:{defaultValue:null,description:"",name:"workbook",required:!0,type:{name:"Workbook"}},hasMerges:{defaultValue:null,description:"",name:"hasMerges",required:!0,type:{name:"boolean"}},dimensions:{defaultValue:null,description:"",name:"dimensions",required:!0,type:{name:"Range"}},pageSetup:{defaultValue:null,description:"Contains information related to how a worksheet is printed",name:"pageSetup",required:!0,type:{name:"Partial<PageSetup>"}},headerFooter:{defaultValue:null,description:"Worksheet Header and Footer",name:"headerFooter",required:!0,type:{name:"Partial<HeaderFooter>"}},state:{defaultValue:null,description:"Worksheet State",name:"state",required:!0,type:{name:"WorksheetState"}},properties:{defaultValue:null,description:"Worksheet Properties",name:"properties",required:!0,type:{name:"WorksheetProperties"}},views:{defaultValue:null,description:"Open panes representing the sheet",name:"views",required:!0,type:{name:"(Partial<WorksheetViewCommon & WorksheetViewNormal> | Partial<WorksheetViewCommon & WorksheetViewFrozen> | Partial<...>)[]"}},autoFilter:{defaultValue:null,description:"Apply an auto filter to your worksheet.",name:"autoFilter",required:!1,type:{name:"AutoFilter"}},destroy:{defaultValue:null,description:"",name:"destroy",required:!0,type:{name:"() => void"}},actualRowCount:{defaultValue:null,description:"A count of the number of rows that have values. If a mid-document row is empty, it will not be included in the count.",name:"actualRowCount",required:!0,type:{name:"number"}},columnCount:{defaultValue:null,description:"The total column size of the document. Equal to the maximum cell count from all of the rows",name:"columnCount",required:!0,type:{name:"number"}},actualColumnCount:{defaultValue:null,description:"A count of the number of columns that have values.",name:"actualColumnCount",required:!0,type:{name:"number"}},getColumnKey:{defaultValue:null,description:"",name:"getColumnKey",required:!0,type:{name:"(key: string) => Partial<Column>"}},setColumnKey:{defaultValue:null,description:"",name:"setColumnKey",required:!0,type:{name:"(key: string, value: Partial<Column>) => void"}},deleteColumnKey:{defaultValue:null,description:"",name:"deleteColumnKey",required:!0,type:{name:"(key: string) => void"}},eachColumnKey:{defaultValue:null,description:"",name:"eachColumnKey",required:!0,type:{name:"(callback: (col: Partial<Column>, index: number) => void) => void"}},getColumn:{defaultValue:null,description:"Access an individual columns by key, letter and 1-based column number",name:"getColumn",required:!0,type:{name:"(indexOrKey: string | number) => Partial<Column>"}},spliceColumns:{defaultValue:null,description:"Cut one or more columns (columns to the right are shifted left)\nand optionally insert more\r\n\r\nIf column properties have been definde, they will be cut or moved accordingly\r\n\r\nKnown Issue: If a splice causes any merged cells to move, the results may be unpredictable\r\n\r\nAlso: If the worksheet has more rows than values in the colulmn inserts,\r\nthe rows will still be shifted as if the values existed",name:"spliceColumns",required:!0,type:{name:"(start: number, count: number, ...insert: any[][]) => void"}},columns:{defaultValue:null,description:"Add column headers and define column keys and widths.\n\r\nNote: these column structures are a workbook-building convenience only,\r\napart from the column width, they will not be fully persisted.",name:"columns",required:!0,type:{name:"Partial<Column>[]"}},rowCount:{defaultValue:null,description:"The total row size of the document. Equal to the row number of the last row that has values.",name:"rowCount",required:!0,type:{name:"number"}},lastRow:{defaultValue:null,description:"Get the last editable row in a worksheet (or undefined if there are none)",name:"lastRow",required:!0,type:{name:"Row"}},findRow:{defaultValue:null,description:"",name:"findRow",required:!0,type:{name:"(row: number) => Row"}},spliceRows:{defaultValue:null,description:"Cut one or more rows (rows below are shifted up)\nand optionally insert more\r\n\r\nKnown Issue: If a splice causes any merged cells to move, the results may be unpredictable",name:"spliceRows",required:!0,type:{name:"(start: number, count: number, ...insert: any[][]) => void"}},addRow:{defaultValue:null,description:"Add a couple of Rows by key-value, after the last current row, using the column keys,\nor add a row by contiguous Array (assign to columns A, B & C)",name:"addRow",required:!0,type:{name:"(data: any, styleOption?: string) => Row"}},addRows:{defaultValue:null,description:"Add multiple rows by providing an array of arrays or key-value pairs",name:"addRows",required:!0,type:{name:"(rows: any[], styleOption?: string) => void"}},insertRow:{defaultValue:null,description:"Insert a Row by key-value, at the pos (shifiting down all rows from pos),\nusing the column keys, or add a row by contiguous Array (assign to columns A, B & C)",name:"insertRow",required:!0,type:{name:"(pos: number, value: any, styleOption?: string) => Row"}},insertRows:{defaultValue:null,description:"Insert multiple rows at pos (shifiting down all rows from pos)\nby providing an array of arrays or key-value pairs",name:"insertRows",required:!0,type:{name:"(pos: number, values: any[], styleOption?: string) => void"}},duplicateRow:{defaultValue:null,description:"Duplicate rows and insert new rows",name:"duplicateRow",required:!0,type:{name:"(rowNum: number, count: number, insert: boolean) => void"}},getRow:{defaultValue:null,description:"Get or create row by 1-based index",name:"getRow",required:!0,type:{name:"(index: number) => Row"}},eachRow:{defaultValue:null,description:"Iterate over all rows that have values in a worksheet\nIterate over all rows (including empty rows) in a worksheet",name:"eachRow",required:!0,type:{name:"{ (callback: (row: Row, rowNumber: number) => void): void; (opt: { includeEmpty: boolean; }, callback: (row: Row, rowNumber: number) => void): void; }"}},getSheetValues:{defaultValue:null,description:"return all rows as sparse array",name:"getSheetValues",required:!0,type:{name:"() => Row[]"}},findCell:{defaultValue:null,description:"returns the cell at [r,c] or address given by r. If not found, return undefined",name:"findCell",required:!0,type:{name:"(r: string | number, c: string | number) => Cell"}},getCell:{defaultValue:null,description:"Get or create cell",name:"getCell",required:!0,type:{name:"(r: string | number, c?: string | number) => Cell"}},mergeCells:{defaultValue:null,description:"Merge cells, either:\n\r\ntlbr string, e.g. `'A4:B5'`\r\n\r\ntl string, br string, e.g. `'G10', 'H11'`\r\n\r\nt, l, b, r numbers, e.g. `10,11,12,13`",name:"mergeCells",required:!0,type:{name:"{ (): void; (v: Range): void; (v: string): void; (v: Location): void; (top: number, left: number, bottom: number, right: number, sheetName?: string): void; (tl: string, br: string, sheetName?: string): void; (v: [...]): void; (v: [...]): void; (v: [...]): void; (v: [...]): void; }"}},mergeCellsWithoutStyle:{defaultValue:null,description:"",name:"mergeCellsWithoutStyle",required:!0,type:{name:"{ (): void; (v: Range): void; (v: string): void; (v: Location): void; (top: number, left: number, bottom: number, right: number, sheetName?: string): void; (tl: string, br: string, sheetName?: string): void; (v: [...]): void; (v: [...]): void; (v: [...]): void; (v: [...]): void; }"}},unMergeCells:{defaultValue:null,description:"unmerging the cells breaks the style links",name:"unMergeCells",required:!0,type:{name:"{ (): void; (v: Range): void; (v: string): void; (v: Location): void; (top: number, left: number, bottom: number, right: number, sheetName?: string): void; (tl: string, br: string, sheetName?: string): void; (v: [...]): void; (v: [...]): void; (v: [...]): void; (v: [...]): void; }"}},fillFormula:{defaultValue:null,description:"",name:"fillFormula",required:!0,type:{name:"(range: string | Range | Location, formula: string, results?: number[] | ((r: number, c: number) => string | number) | number[][]) => void"}},addBackgroundImage:{defaultValue:null,description:"Using the image id from `Workbook.addImage`, set the background to the worksheet",name:"addBackgroundImage",required:!0,type:{name:"(imageId: number) => void"}},getBackgroundImageId:{defaultValue:null,description:"",name:"getBackgroundImageId",required:!0,type:{name:"() => string"}},addImage:{defaultValue:null,description:"Using the image id from `Workbook.addImage`,\nembed an image within the worksheet to cover a range",name:"addImage",required:!0,type:{name:"(imageId: number, range: string | ({ editAs?: string; } & ImageRange & { hyperlinks?: ImageHyperlinkValue; }) | ({ editAs?: string; } & ImagePosition & { ...; })) => void"}},getImages:{defaultValue:null,description:"",name:"getImages",required:!0,type:{name:'() => { type: "image"; imageId: string; range: ImageRange; }[]'}},commit:{defaultValue:null,description:"",name:"commit",required:!0,type:{name:"() => void"}},model:{defaultValue:null,description:"",name:"model",required:!0,type:{name:"WorksheetModel"}},protect:{defaultValue:null,description:"Worksheet protection",name:"protect",required:!0,type:{name:"(password: string, options: Partial<WorksheetProtection>) => Promise<void>"}},unprotect:{defaultValue:null,description:"",name:"unprotect",required:!0,type:{name:"() => void"}},addTable:{defaultValue:null,description:"Add a new table and return a reference to it",name:"addTable",required:!0,type:{name:"(tableProperties: TableProperties) => Table"}},getTable:{defaultValue:null,description:"fetch table by name or id",name:"getTable",required:!0,type:{name:"(name: string) => Table"}},removeTable:{defaultValue:null,description:"delete table by name or id",name:"removeTable",required:!0,type:{name:"(name: string) => void"}},getTables:{defaultValue:null,description:"fetch table",name:"getTables",required:!0,type:{name:"() => [Table, void][]"}},addConditionalFormatting:{defaultValue:null,description:"add conditionalFormattingOptions",name:"addConditionalFormatting",required:!0,type:{name:"(cf: ConditionalFormattingOptions) => void"}},removeConditionalFormatting:{defaultValue:null,description:"delete conditionalFormattingOptions",name:"removeConditionalFormatting",required:!0,type:{name:"(filter: any) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#getSheetDataFromSheet"]={docgenInfo:getSheetDataFromSheet.__docgenInfo,name:"getSheetDataFromSheet",path:"src/tools/index.ts#getSheetDataFromSheet"})}catch(__react_docgen_typescript_loader_error){}try{getColumnDataFromColumns.displayName="getColumnDataFromColumns",getColumnDataFromColumns.__docgenInfo={description:"",displayName:"getColumnDataFromColumns",props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"number"}},name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string"}},workbook:{defaultValue:null,description:"",name:"workbook",required:!0,type:{name:"Workbook"}},hasMerges:{defaultValue:null,description:"",name:"hasMerges",required:!0,type:{name:"boolean"}},dimensions:{defaultValue:null,description:"",name:"dimensions",required:!0,type:{name:"Range"}},pageSetup:{defaultValue:null,description:"Contains information related to how a worksheet is printed",name:"pageSetup",required:!0,type:{name:"Partial<PageSetup>"}},headerFooter:{defaultValue:null,description:"Worksheet Header and Footer",name:"headerFooter",required:!0,type:{name:"Partial<HeaderFooter>"}},state:{defaultValue:null,description:"Worksheet State",name:"state",required:!0,type:{name:"WorksheetState"}},properties:{defaultValue:null,description:"Worksheet Properties",name:"properties",required:!0,type:{name:"WorksheetProperties"}},views:{defaultValue:null,description:"Open panes representing the sheet",name:"views",required:!0,type:{name:"(Partial<WorksheetViewCommon & WorksheetViewNormal> | Partial<WorksheetViewCommon & WorksheetViewFrozen> | Partial<...>)[]"}},autoFilter:{defaultValue:null,description:"Apply an auto filter to your worksheet.",name:"autoFilter",required:!1,type:{name:"AutoFilter"}},destroy:{defaultValue:null,description:"",name:"destroy",required:!0,type:{name:"() => void"}},actualRowCount:{defaultValue:null,description:"A count of the number of rows that have values. If a mid-document row is empty, it will not be included in the count.",name:"actualRowCount",required:!0,type:{name:"number"}},columnCount:{defaultValue:null,description:"The total column size of the document. Equal to the maximum cell count from all of the rows",name:"columnCount",required:!0,type:{name:"number"}},actualColumnCount:{defaultValue:null,description:"A count of the number of columns that have values.",name:"actualColumnCount",required:!0,type:{name:"number"}},getColumnKey:{defaultValue:null,description:"",name:"getColumnKey",required:!0,type:{name:"(key: string) => Partial<Column>"}},setColumnKey:{defaultValue:null,description:"",name:"setColumnKey",required:!0,type:{name:"(key: string, value: Partial<Column>) => void"}},deleteColumnKey:{defaultValue:null,description:"",name:"deleteColumnKey",required:!0,type:{name:"(key: string) => void"}},eachColumnKey:{defaultValue:null,description:"",name:"eachColumnKey",required:!0,type:{name:"(callback: (col: Partial<Column>, index: number) => void) => void"}},getColumn:{defaultValue:null,description:"Access an individual columns by key, letter and 1-based column number",name:"getColumn",required:!0,type:{name:"(indexOrKey: string | number) => Partial<Column>"}},spliceColumns:{defaultValue:null,description:"Cut one or more columns (columns to the right are shifted left)\nand optionally insert more\r\n\r\nIf column properties have been definde, they will be cut or moved accordingly\r\n\r\nKnown Issue: If a splice causes any merged cells to move, the results may be unpredictable\r\n\r\nAlso: If the worksheet has more rows than values in the colulmn inserts,\r\nthe rows will still be shifted as if the values existed",name:"spliceColumns",required:!0,type:{name:"(start: number, count: number, ...insert: any[][]) => void"}},columns:{defaultValue:null,description:"Add column headers and define column keys and widths.\n\r\nNote: these column structures are a workbook-building convenience only,\r\napart from the column width, they will not be fully persisted.",name:"columns",required:!0,type:{name:"Partial<Column>[]"}},rowCount:{defaultValue:null,description:"The total row size of the document. Equal to the row number of the last row that has values.",name:"rowCount",required:!0,type:{name:"number"}},lastRow:{defaultValue:null,description:"Get the last editable row in a worksheet (or undefined if there are none)",name:"lastRow",required:!0,type:{name:"Row"}},findRow:{defaultValue:null,description:"",name:"findRow",required:!0,type:{name:"(row: number) => Row"}},spliceRows:{defaultValue:null,description:"Cut one or more rows (rows below are shifted up)\nand optionally insert more\r\n\r\nKnown Issue: If a splice causes any merged cells to move, the results may be unpredictable",name:"spliceRows",required:!0,type:{name:"(start: number, count: number, ...insert: any[][]) => void"}},addRow:{defaultValue:null,description:"Add a couple of Rows by key-value, after the last current row, using the column keys,\nor add a row by contiguous Array (assign to columns A, B & C)",name:"addRow",required:!0,type:{name:"(data: any, styleOption?: string) => Row"}},addRows:{defaultValue:null,description:"Add multiple rows by providing an array of arrays or key-value pairs",name:"addRows",required:!0,type:{name:"(rows: any[], styleOption?: string) => void"}},insertRow:{defaultValue:null,description:"Insert a Row by key-value, at the pos (shifiting down all rows from pos),\nusing the column keys, or add a row by contiguous Array (assign to columns A, B & C)",name:"insertRow",required:!0,type:{name:"(pos: number, value: any, styleOption?: string) => Row"}},insertRows:{defaultValue:null,description:"Insert multiple rows at pos (shifiting down all rows from pos)\nby providing an array of arrays or key-value pairs",name:"insertRows",required:!0,type:{name:"(pos: number, values: any[], styleOption?: string) => void"}},duplicateRow:{defaultValue:null,description:"Duplicate rows and insert new rows",name:"duplicateRow",required:!0,type:{name:"(rowNum: number, count: number, insert: boolean) => void"}},getRow:{defaultValue:null,description:"Get or create row by 1-based index",name:"getRow",required:!0,type:{name:"(index: number) => Row"}},eachRow:{defaultValue:null,description:"Iterate over all rows that have values in a worksheet\nIterate over all rows (including empty rows) in a worksheet",name:"eachRow",required:!0,type:{name:"{ (callback: (row: Row, rowNumber: number) => void): void; (opt: { includeEmpty: boolean; }, callback: (row: Row, rowNumber: number) => void): void; }"}},getSheetValues:{defaultValue:null,description:"return all rows as sparse array",name:"getSheetValues",required:!0,type:{name:"() => Row[]"}},findCell:{defaultValue:null,description:"returns the cell at [r,c] or address given by r. If not found, return undefined",name:"findCell",required:!0,type:{name:"(r: string | number, c: string | number) => Cell"}},getCell:{defaultValue:null,description:"Get or create cell",name:"getCell",required:!0,type:{name:"(r: string | number, c?: string | number) => Cell"}},mergeCells:{defaultValue:null,description:"Merge cells, either:\n\r\ntlbr string, e.g. `'A4:B5'`\r\n\r\ntl string, br string, e.g. `'G10', 'H11'`\r\n\r\nt, l, b, r numbers, e.g. `10,11,12,13`",name:"mergeCells",required:!0,type:{name:"{ (): void; (v: Range): void; (v: string): void; (v: Location): void; (top: number, left: number, bottom: number, right: number, sheetName?: string): void; (tl: string, br: string, sheetName?: string): void; (v: [...]): void; (v: [...]): void; (v: [...]): void; (v: [...]): void; }"}},mergeCellsWithoutStyle:{defaultValue:null,description:"",name:"mergeCellsWithoutStyle",required:!0,type:{name:"{ (): void; (v: Range): void; (v: string): void; (v: Location): void; (top: number, left: number, bottom: number, right: number, sheetName?: string): void; (tl: string, br: string, sheetName?: string): void; (v: [...]): void; (v: [...]): void; (v: [...]): void; (v: [...]): void; }"}},unMergeCells:{defaultValue:null,description:"unmerging the cells breaks the style links",name:"unMergeCells",required:!0,type:{name:"{ (): void; (v: Range): void; (v: string): void; (v: Location): void; (top: number, left: number, bottom: number, right: number, sheetName?: string): void; (tl: string, br: string, sheetName?: string): void; (v: [...]): void; (v: [...]): void; (v: [...]): void; (v: [...]): void; }"}},fillFormula:{defaultValue:null,description:"",name:"fillFormula",required:!0,type:{name:"(range: string | Range | Location, formula: string, results?: number[] | ((r: number, c: number) => string | number) | number[][]) => void"}},addBackgroundImage:{defaultValue:null,description:"Using the image id from `Workbook.addImage`, set the background to the worksheet",name:"addBackgroundImage",required:!0,type:{name:"(imageId: number) => void"}},getBackgroundImageId:{defaultValue:null,description:"",name:"getBackgroundImageId",required:!0,type:{name:"() => string"}},addImage:{defaultValue:null,description:"Using the image id from `Workbook.addImage`,\nembed an image within the worksheet to cover a range",name:"addImage",required:!0,type:{name:"(imageId: number, range: string | ({ editAs?: string; } & ImageRange & { hyperlinks?: ImageHyperlinkValue; }) | ({ editAs?: string; } & ImagePosition & { ...; })) => void"}},getImages:{defaultValue:null,description:"",name:"getImages",required:!0,type:{name:'() => { type: "image"; imageId: string; range: ImageRange; }[]'}},commit:{defaultValue:null,description:"",name:"commit",required:!0,type:{name:"() => void"}},model:{defaultValue:null,description:"",name:"model",required:!0,type:{name:"WorksheetModel"}},protect:{defaultValue:null,description:"Worksheet protection",name:"protect",required:!0,type:{name:"(password: string, options: Partial<WorksheetProtection>) => Promise<void>"}},unprotect:{defaultValue:null,description:"",name:"unprotect",required:!0,type:{name:"() => void"}},addTable:{defaultValue:null,description:"Add a new table and return a reference to it",name:"addTable",required:!0,type:{name:"(tableProperties: TableProperties) => Table"}},getTable:{defaultValue:null,description:"fetch table by name or id",name:"getTable",required:!0,type:{name:"(name: string) => Table"}},removeTable:{defaultValue:null,description:"delete table by name or id",name:"removeTable",required:!0,type:{name:"(name: string) => void"}},getTables:{defaultValue:null,description:"fetch table",name:"getTables",required:!0,type:{name:"() => [Table, void][]"}},addConditionalFormatting:{defaultValue:null,description:"add conditionalFormattingOptions",name:"addConditionalFormatting",required:!0,type:{name:"(cf: ConditionalFormattingOptions) => void"}},removeConditionalFormatting:{defaultValue:null,description:"delete conditionalFormattingOptions",name:"removeConditionalFormatting",required:!0,type:{name:"(filter: any) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#getColumnDataFromColumns"]={docgenInfo:getColumnDataFromColumns.__docgenInfo,name:"getColumnDataFromColumns",path:"src/tools/index.ts#getColumnDataFromColumns"})}catch(__react_docgen_typescript_loader_error){}try{getRowDataFromSheet.displayName="getRowDataFromSheet",getRowDataFromSheet.__docgenInfo={description:"",displayName:"getRowDataFromSheet",props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"number"}},name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string"}},workbook:{defaultValue:null,description:"",name:"workbook",required:!0,type:{name:"Workbook"}},hasMerges:{defaultValue:null,description:"",name:"hasMerges",required:!0,type:{name:"boolean"}},dimensions:{defaultValue:null,description:"",name:"dimensions",required:!0,type:{name:"Range"}},pageSetup:{defaultValue:null,description:"Contains information related to how a worksheet is printed",name:"pageSetup",required:!0,type:{name:"Partial<PageSetup>"}},headerFooter:{defaultValue:null,description:"Worksheet Header and Footer",name:"headerFooter",required:!0,type:{name:"Partial<HeaderFooter>"}},state:{defaultValue:null,description:"Worksheet State",name:"state",required:!0,type:{name:"WorksheetState"}},properties:{defaultValue:null,description:"Worksheet Properties",name:"properties",required:!0,type:{name:"WorksheetProperties"}},views:{defaultValue:null,description:"Open panes representing the sheet",name:"views",required:!0,type:{name:"(Partial<WorksheetViewCommon & WorksheetViewNormal> | Partial<WorksheetViewCommon & WorksheetViewFrozen> | Partial<...>)[]"}},autoFilter:{defaultValue:null,description:"Apply an auto filter to your worksheet.",name:"autoFilter",required:!1,type:{name:"AutoFilter"}},destroy:{defaultValue:null,description:"",name:"destroy",required:!0,type:{name:"() => void"}},actualRowCount:{defaultValue:null,description:"A count of the number of rows that have values. If a mid-document row is empty, it will not be included in the count.",name:"actualRowCount",required:!0,type:{name:"number"}},columnCount:{defaultValue:null,description:"The total column size of the document. Equal to the maximum cell count from all of the rows",name:"columnCount",required:!0,type:{name:"number"}},actualColumnCount:{defaultValue:null,description:"A count of the number of columns that have values.",name:"actualColumnCount",required:!0,type:{name:"number"}},getColumnKey:{defaultValue:null,description:"",name:"getColumnKey",required:!0,type:{name:"(key: string) => Partial<Column>"}},setColumnKey:{defaultValue:null,description:"",name:"setColumnKey",required:!0,type:{name:"(key: string, value: Partial<Column>) => void"}},deleteColumnKey:{defaultValue:null,description:"",name:"deleteColumnKey",required:!0,type:{name:"(key: string) => void"}},eachColumnKey:{defaultValue:null,description:"",name:"eachColumnKey",required:!0,type:{name:"(callback: (col: Partial<Column>, index: number) => void) => void"}},getColumn:{defaultValue:null,description:"Access an individual columns by key, letter and 1-based column number",name:"getColumn",required:!0,type:{name:"(indexOrKey: string | number) => Partial<Column>"}},spliceColumns:{defaultValue:null,description:"Cut one or more columns (columns to the right are shifted left)\nand optionally insert more\r\n\r\nIf column properties have been definde, they will be cut or moved accordingly\r\n\r\nKnown Issue: If a splice causes any merged cells to move, the results may be unpredictable\r\n\r\nAlso: If the worksheet has more rows than values in the colulmn inserts,\r\nthe rows will still be shifted as if the values existed",name:"spliceColumns",required:!0,type:{name:"(start: number, count: number, ...insert: any[][]) => void"}},columns:{defaultValue:null,description:"Add column headers and define column keys and widths.\n\r\nNote: these column structures are a workbook-building convenience only,\r\napart from the column width, they will not be fully persisted.",name:"columns",required:!0,type:{name:"Partial<Column>[]"}},rowCount:{defaultValue:null,description:"The total row size of the document. Equal to the row number of the last row that has values.",name:"rowCount",required:!0,type:{name:"number"}},lastRow:{defaultValue:null,description:"Get the last editable row in a worksheet (or undefined if there are none)",name:"lastRow",required:!0,type:{name:"Row"}},findRow:{defaultValue:null,description:"",name:"findRow",required:!0,type:{name:"(row: number) => Row"}},spliceRows:{defaultValue:null,description:"Cut one or more rows (rows below are shifted up)\nand optionally insert more\r\n\r\nKnown Issue: If a splice causes any merged cells to move, the results may be unpredictable",name:"spliceRows",required:!0,type:{name:"(start: number, count: number, ...insert: any[][]) => void"}},addRow:{defaultValue:null,description:"Add a couple of Rows by key-value, after the last current row, using the column keys,\nor add a row by contiguous Array (assign to columns A, B & C)",name:"addRow",required:!0,type:{name:"(data: any, styleOption?: string) => Row"}},addRows:{defaultValue:null,description:"Add multiple rows by providing an array of arrays or key-value pairs",name:"addRows",required:!0,type:{name:"(rows: any[], styleOption?: string) => void"}},insertRow:{defaultValue:null,description:"Insert a Row by key-value, at the pos (shifiting down all rows from pos),\nusing the column keys, or add a row by contiguous Array (assign to columns A, B & C)",name:"insertRow",required:!0,type:{name:"(pos: number, value: any, styleOption?: string) => Row"}},insertRows:{defaultValue:null,description:"Insert multiple rows at pos (shifiting down all rows from pos)\nby providing an array of arrays or key-value pairs",name:"insertRows",required:!0,type:{name:"(pos: number, values: any[], styleOption?: string) => void"}},duplicateRow:{defaultValue:null,description:"Duplicate rows and insert new rows",name:"duplicateRow",required:!0,type:{name:"(rowNum: number, count: number, insert: boolean) => void"}},getRow:{defaultValue:null,description:"Get or create row by 1-based index",name:"getRow",required:!0,type:{name:"(index: number) => Row"}},eachRow:{defaultValue:null,description:"Iterate over all rows that have values in a worksheet\nIterate over all rows (including empty rows) in a worksheet",name:"eachRow",required:!0,type:{name:"{ (callback: (row: Row, rowNumber: number) => void): void; (opt: { includeEmpty: boolean; }, callback: (row: Row, rowNumber: number) => void): void; }"}},getSheetValues:{defaultValue:null,description:"return all rows as sparse array",name:"getSheetValues",required:!0,type:{name:"() => Row[]"}},findCell:{defaultValue:null,description:"returns the cell at [r,c] or address given by r. If not found, return undefined",name:"findCell",required:!0,type:{name:"(r: string | number, c: string | number) => Cell"}},getCell:{defaultValue:null,description:"Get or create cell",name:"getCell",required:!0,type:{name:"(r: string | number, c?: string | number) => Cell"}},mergeCells:{defaultValue:null,description:"Merge cells, either:\n\r\ntlbr string, e.g. `'A4:B5'`\r\n\r\ntl string, br string, e.g. `'G10', 'H11'`\r\n\r\nt, l, b, r numbers, e.g. `10,11,12,13`",name:"mergeCells",required:!0,type:{name:"{ (): void; (v: Range): void; (v: string): void; (v: Location): void; (top: number, left: number, bottom: number, right: number, sheetName?: string): void; (tl: string, br: string, sheetName?: string): void; (v: [...]): void; (v: [...]): void; (v: [...]): void; (v: [...]): void; }"}},mergeCellsWithoutStyle:{defaultValue:null,description:"",name:"mergeCellsWithoutStyle",required:!0,type:{name:"{ (): void; (v: Range): void; (v: string): void; (v: Location): void; (top: number, left: number, bottom: number, right: number, sheetName?: string): void; (tl: string, br: string, sheetName?: string): void; (v: [...]): void; (v: [...]): void; (v: [...]): void; (v: [...]): void; }"}},unMergeCells:{defaultValue:null,description:"unmerging the cells breaks the style links",name:"unMergeCells",required:!0,type:{name:"{ (): void; (v: Range): void; (v: string): void; (v: Location): void; (top: number, left: number, bottom: number, right: number, sheetName?: string): void; (tl: string, br: string, sheetName?: string): void; (v: [...]): void; (v: [...]): void; (v: [...]): void; (v: [...]): void; }"}},fillFormula:{defaultValue:null,description:"",name:"fillFormula",required:!0,type:{name:"(range: string | Range | Location, formula: string, results?: number[] | ((r: number, c: number) => string | number) | number[][]) => void"}},addBackgroundImage:{defaultValue:null,description:"Using the image id from `Workbook.addImage`, set the background to the worksheet",name:"addBackgroundImage",required:!0,type:{name:"(imageId: number) => void"}},getBackgroundImageId:{defaultValue:null,description:"",name:"getBackgroundImageId",required:!0,type:{name:"() => string"}},addImage:{defaultValue:null,description:"Using the image id from `Workbook.addImage`,\nembed an image within the worksheet to cover a range",name:"addImage",required:!0,type:{name:"(imageId: number, range: string | ({ editAs?: string; } & ImageRange & { hyperlinks?: ImageHyperlinkValue; }) | ({ editAs?: string; } & ImagePosition & { ...; })) => void"}},getImages:{defaultValue:null,description:"",name:"getImages",required:!0,type:{name:'() => { type: "image"; imageId: string; range: ImageRange; }[]'}},commit:{defaultValue:null,description:"",name:"commit",required:!0,type:{name:"() => void"}},model:{defaultValue:null,description:"",name:"model",required:!0,type:{name:"WorksheetModel"}},protect:{defaultValue:null,description:"Worksheet protection",name:"protect",required:!0,type:{name:"(password: string, options: Partial<WorksheetProtection>) => Promise<void>"}},unprotect:{defaultValue:null,description:"",name:"unprotect",required:!0,type:{name:"() => void"}},addTable:{defaultValue:null,description:"Add a new table and return a reference to it",name:"addTable",required:!0,type:{name:"(tableProperties: TableProperties) => Table"}},getTable:{defaultValue:null,description:"fetch table by name or id",name:"getTable",required:!0,type:{name:"(name: string) => Table"}},removeTable:{defaultValue:null,description:"delete table by name or id",name:"removeTable",required:!0,type:{name:"(name: string) => void"}},getTables:{defaultValue:null,description:"fetch table",name:"getTables",required:!0,type:{name:"() => [Table, void][]"}},addConditionalFormatting:{defaultValue:null,description:"add conditionalFormattingOptions",name:"addConditionalFormatting",required:!0,type:{name:"(cf: ConditionalFormattingOptions) => void"}},removeConditionalFormatting:{defaultValue:null,description:"delete conditionalFormattingOptions",name:"removeConditionalFormatting",required:!0,type:{name:"(filter: any) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#getRowDataFromSheet"]={docgenInfo:getRowDataFromSheet.__docgenInfo,name:"getRowDataFromSheet",path:"src/tools/index.ts#getRowDataFromSheet"})}catch(__react_docgen_typescript_loader_error){}try{createStateFromWorkbook.displayName="createStateFromWorkbook",createStateFromWorkbook.__docgenInfo={description:"",displayName:"createStateFromWorkbook",props:{creator:{defaultValue:null,description:"",name:"creator",required:!0,type:{name:"string"}},lastModifiedBy:{defaultValue:null,description:"",name:"lastModifiedBy",required:!0,type:{name:"string"}},created:{defaultValue:null,description:"",name:"created",required:!0,type:{name:"Date"}},modified:{defaultValue:null,description:"",name:"modified",required:!0,type:{name:"Date"}},lastPrinted:{defaultValue:null,description:"",name:"lastPrinted",required:!0,type:{name:"Date"}},properties:{defaultValue:null,description:"",name:"properties",required:!0,type:{name:"WorkbookProperties"}},calcProperties:{defaultValue:null,description:"Workbook calculation Properties",name:"calcProperties",required:!0,type:{name:"CalculationProperties"}},xlsx:{defaultValue:null,description:"xlsx file format operations",name:"xlsx",required:!0,type:{name:"Xlsx"}},csv:{defaultValue:null,description:"csv file format operations",name:"csv",required:!0,type:{name:"Csv"}},nextId:{defaultValue:null,description:"",name:"nextId",required:!0,type:{name:"number"}},definedNames:{defaultValue:null,description:"",name:"definedNames",required:!0,type:{name:"DefinedNames"}},model:{defaultValue:null,description:"",name:"model",required:!0,type:{name:"WorkbookModel"}},views:{defaultValue:null,description:"The Workbook views controls how many separate windows Excel will open when viewing the workbook.",name:"views",required:!0,type:{name:"WorkbookView[]"}},worksheets:{defaultValue:null,description:"return a clone of worksheets in order",name:"worksheets",required:!0,type:{name:"Worksheet[]"}},addWorksheet:{defaultValue:null,description:"Add a new worksheet and return a reference to it",name:"addWorksheet",required:!0,type:{name:"(name?: string, options?: Partial<AddWorksheetOptions>) => Worksheet"}},removeWorksheetEx:{defaultValue:null,description:"",name:"removeWorksheetEx",required:!0,type:{name:"(worksheet: Worksheet) => void"}},removeWorksheet:{defaultValue:null,description:"",name:"removeWorksheet",required:!0,type:{name:"(indexOrName: string | number) => void"}},getWorksheet:{defaultValue:null,description:"fetch sheet by name or id",name:"getWorksheet",required:!0,type:{name:"(indexOrName: string | number) => Worksheet"}},eachSheet:{defaultValue:null,description:"Iterate over all sheets.\n\r\nNote: `workbook.worksheets.forEach` will still work but this is better.",name:"eachSheet",required:!0,type:{name:"(callback: (worksheet: Worksheet, id: number) => void) => void"}},clearThemes:{defaultValue:null,description:"",name:"clearThemes",required:!0,type:{name:"() => void"}},addImage:{defaultValue:null,description:"Add Image to Workbook and return the id",name:"addImage",required:!0,type:{name:"(img: Image) => number"}},getImage:{defaultValue:null,description:"",name:"getImage",required:!0,type:{name:"(id: number) => Image"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#createStateFromWorkbook"]={docgenInfo:createStateFromWorkbook.__docgenInfo,name:"createStateFromWorkbook",path:"src/tools/index.ts#createStateFromWorkbook"})}catch(__react_docgen_typescript_loader_error){}try{mergeRanges.displayName="mergeRanges",mergeRanges.__docgenInfo={description:"",displayName:"mergeRanges",props:{length:{defaultValue:null,description:"Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.",name:"length",required:!0,type:{name:"number"}},toString:{defaultValue:null,description:"Returns a string representation of an array.",name:"toString",required:!1,type:{name:"() => string"}},toLocaleString:{defaultValue:null,description:"Returns a string representation of an array. The elements are converted to string using their toLocalString methods.",name:"toLocaleString",required:!1,type:{name:"() => string"}},pop:{defaultValue:null,description:"Removes the last element from an array and returns it.",name:"pop",required:!0,type:{name:"() => IRange"}},push:{defaultValue:null,description:"Appends new elements to an array, and returns the new length of the array.\n@param items New elements of the Array.",name:"push",required:!0,type:{name:"(...items: IRange[]) => number"}},concat:{defaultValue:null,description:"Combines two or more arrays.\nCombines two or more arrays.\n@param items Additional items to add to the end of array1.\n@param items Additional items to add to the end of array1.",name:"concat",required:!0,type:{name:"{ (...items: ConcatArray<IRange>[]): IRange[]; (...items: (IRange | ConcatArray<IRange>)[]): IRange[]; }"}},join:{defaultValue:null,description:"Adds all the elements of an array separated by the specified separator string.\n@param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.",name:"join",required:!0,type:{name:"(separator?: string) => string"}},reverse:{defaultValue:null,description:"Reverses the elements in an Array.",name:"reverse",required:!0,type:{name:"() => IRange[]"}},shift:{defaultValue:null,description:"Removes the first element from an array and returns it.",name:"shift",required:!0,type:{name:"() => IRange"}},slice:{defaultValue:null,description:"Returns a section of an array.\n@param start The beginning of the specified portion of the array.\n@param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => IRange[]"}},sort:{defaultValue:null,description:"Sorts an array.\n@param compareFn Function used to determine the order of the elements. It is expected to return\ra negative value if first argument is less than second argument, zero if they're equal and a positive\rvalue otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\r```ts\r[11,2,22,1].sort((a, b) => a - b)\r```",name:"sort",required:!0,type:{name:"(compareFn?: (a: IRange, b: IRange) => number) => IRange[]"}},splice:{defaultValue:null,description:"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\nRemoves elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\n@param start The zero-based location in the array from which to start removing elements.\n@param deleteCount The number of elements to remove.\n@param start The zero-based location in the array from which to start removing elements.\n@param deleteCount The number of elements to remove.\n@param items Elements to insert into the array in place of the deleted elements.",name:"splice",required:!0,type:{name:"{ (start: number, deleteCount?: number): IRange[]; (start: number, deleteCount: number, ...items: IRange[]): IRange[]; }"}},unshift:{defaultValue:null,description:"Inserts new elements at the start of an array.\n@param items Elements to insert at the start of the Array.",name:"unshift",required:!0,type:{name:"(...items: IRange[]) => number"}},indexOf:{defaultValue:null,description:"Returns the index of the first occurrence of a value in an array.\n@param searchElement The value to locate in the array.\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.",name:"indexOf",required:!0,type:{name:"(searchElement: IRange, fromIndex?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the index of the last occurrence of a specified value in an array.\n@param searchElement The value to locate in the array.\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.",name:"lastIndexOf",required:!0,type:{name:"(searchElement: IRange, fromIndex?: number) => number"}},every:{defaultValue:null,description:"Determines whether all the members of an array satisfy the specified test.\n@param callbackfn A function that accepts up to three arguments. The every method calls\rthe callbackfn function for each element in the array until the callbackfn returns a value\rwhich is coercible to the Boolean value false, or until the end of the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.",name:"every",required:!0,type:{name:"(callbackfn: (value: IRange, index: number, array: IRange[]) => unknown, thisArg?: any) => boolean"}},some:{defaultValue:null,description:"Determines whether the specified callback function returns true for any element of an array.\n@param callbackfn A function that accepts up to three arguments. The some method calls\rthe callbackfn function for each element in the array until the callbackfn returns a value\rwhich is coercible to the Boolean value true, or until the end of the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.",name:"some",required:!0,type:{name:"(callbackfn: (value: IRange, index: number, array: IRange[]) => unknown, thisArg?: any) => boolean"}},forEach:{defaultValue:null,description:"Performs the specified action for each element in an array.\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"forEach",required:!0,type:{name:"(callbackfn: (value: IRange, index: number, array: IRange[]) => void, thisArg?: any) => void"}},map:{defaultValue:null,description:"Calls a defined callback function on each element of an array, and returns an array that contains the results.\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"map",required:!0,type:{name:"<U>(callbackfn: (value: IRange, index: number, array: IRange[]) => U, thisArg?: any) => U[]"}},filter:{defaultValue:null,description:"Returns the elements of an array that meet the condition specified in a callback function.\nReturns the elements of an array that meet the condition specified in a callback function.\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"filter",required:!0,type:{name:"{ <S extends IRange>(callbackfn: (value: IRange, index: number, array: IRange[]) => value is S, thisArg?: any): S[]; (callbackfn: (value: IRange, index: number, array: IRange[]) => unknown, thisArg?: any): IRange[]; }"}},reduce:{defaultValue:null,description:"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",name:"reduce",required:!0,type:{name:"{ (callbackfn: (previousValue: IRange, currentValue: IRange, currentIndex: number, array: IRange[]) => IRange): IRange; (callbackfn: (previousValue: IRange, currentValue: IRange, currentIndex: number, array: IRange[]) => IRange, initialValue: IRange): IRange; <U>(callbackfn: (previousValue: U, currentValue: IRange, ..."}},reduceRight:{defaultValue:null,description:"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",name:"reduceRight",required:!0,type:{name:"{ (callbackfn: (previousValue: IRange, currentValue: IRange, currentIndex: number, array: IRange[]) => IRange): IRange; (callbackfn: (previousValue: IRange, currentValue: IRange, currentIndex: number, array: IRange[]) => IRange, initialValue: IRange): IRange; <U>(callbackfn: (previousValue: U, currentValue: IRange, ..."}},find:{defaultValue:null,description:"Returns the value of the first element in the array where predicate is true, and undefined\notherwise.\n@param predicate find calls predicate once for each element of the array, in ascending\rorder, until it finds one where predicate returns true. If such an element is found, find\rimmediately returns that element value. Otherwise, find returns undefined.\n@param thisArg If provided, it will be used as the this value for each invocation of\rpredicate. If it is not provided, undefined is used instead.",name:"find",required:!0,type:{name:"{ <S extends IRange>(predicate: (this: void, value: IRange, index: number, obj: IRange[]) => value is S, thisArg?: any): S; (predicate: (value: IRange, index: number, obj: IRange[]) => unknown, thisArg?: any): IRange; }"}},findIndex:{defaultValue:null,description:"Returns the index of the first element in the array where predicate is true, and -1\notherwise.\n@param predicate find calls predicate once for each element of the array, in ascending\rorder, until it finds one where predicate returns true. If such an element is found,\rfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\n@param thisArg If provided, it will be used as the this value for each invocation of\rpredicate. If it is not provided, undefined is used instead.",name:"findIndex",required:!0,type:{name:"(predicate: (value: IRange, index: number, obj: IRange[]) => unknown, thisArg?: any) => number"}},fill:{defaultValue:null,description:"Returns the this object after filling the section identified by start and end with value\n@param value value to fill array section with\n@param start index to start filling the array at. If start is negative, it is treated as\rlength+start where length is the length of the array.\n@param end index to stop filling the array at. If end is negative, it is treated as\rlength+end.",name:"fill",required:!0,type:{name:"(value: IRange, start?: number, end?: number) => IRange[]"}},copyWithin:{defaultValue:null,description:"Returns the this object after copying a section of the array identified by start and end\nto the same array starting at position target\n@param target If target is negative, it is treated as length+target where length is the\rlength of the array.\n@param start If start is negative, it is treated as length+start. If end is negative, it\ris treated as length+end.\n@param end If not specified, length of the this object is used as its default value.",name:"copyWithin",required:!0,type:{name:"(target: number, start: number, end?: number) => IRange[]"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<IRange>"}},entries:{defaultValue:null,description:"Returns an iterable of key, value pairs for every entry in the array",name:"entries",required:!0,type:{name:"() => IterableIterator<[number, IRange]>"}},keys:{defaultValue:null,description:"Returns an iterable of keys in the array",name:"keys",required:!0,type:{name:"() => IterableIterator<number>"}},values:{defaultValue:null,description:"Returns an iterable of values in the array",name:"values",required:!0,type:{name:"() => IterableIterator<IRange>"}},"__@unscopables":{defaultValue:null,description:"Returns an object whose properties have the value 'true'\nwhen they will be absent when used in a 'with' statement.",name:"__@unscopables",required:!0,type:{name:"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }"}},includes:{defaultValue:null,description:"Determines whether an array includes a certain element, returning true or false as appropriate.\n@param searchElement The element to search for.\n@param fromIndex The position in this array at which to begin searching for searchElement.",name:"includes",required:!0,type:{name:"(searchElement: IRange, fromIndex?: number) => boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#mergeRanges"]={docgenInfo:mergeRanges.__docgenInfo,name:"mergeRanges",path:"src/tools/index.ts#mergeRanges"})}catch(__react_docgen_typescript_loader_error){}try{generateNewSheetName.displayName="generateNewSheetName",generateNewSheetName.__docgenInfo={description:"",displayName:"generateNewSheetName",props:{length:{defaultValue:null,description:"Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.",name:"length",required:!0,type:{name:"number"}},toString:{defaultValue:null,description:"Returns a string representation of an array.",name:"toString",required:!1,type:{name:"() => string"}},toLocaleString:{defaultValue:null,description:"Returns a string representation of an array. The elements are converted to string using their toLocalString methods.",name:"toLocaleString",required:!1,type:{name:"() => string"}},pop:{defaultValue:null,description:"Removes the last element from an array and returns it.",name:"pop",required:!0,type:{name:"() => string"}},push:{defaultValue:null,description:"Appends new elements to an array, and returns the new length of the array.\n@param items New elements of the Array.",name:"push",required:!0,type:{name:"(...items: string[]) => number"}},concat:{defaultValue:null,description:"Combines two or more arrays.\nCombines two or more arrays.\n@param items Additional items to add to the end of array1.\n@param items Additional items to add to the end of array1.",name:"concat",required:!0,type:{name:"{ (...items: ConcatArray<string>[]): string[]; (...items: (string | ConcatArray<string>)[]): string[]; }"}},join:{defaultValue:null,description:"Adds all the elements of an array separated by the specified separator string.\n@param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.",name:"join",required:!0,type:{name:"(separator?: string) => string"}},reverse:{defaultValue:null,description:"Reverses the elements in an Array.",name:"reverse",required:!0,type:{name:"() => string[]"}},shift:{defaultValue:null,description:"Removes the first element from an array and returns it.",name:"shift",required:!0,type:{name:"() => string"}},slice:{defaultValue:null,description:"Returns a section of an array.\n@param start The beginning of the specified portion of the array.\n@param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string[]"}},sort:{defaultValue:null,description:"Sorts an array.\n@param compareFn Function used to determine the order of the elements. It is expected to return\ra negative value if first argument is less than second argument, zero if they're equal and a positive\rvalue otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\r```ts\r[11,2,22,1].sort((a, b) => a - b)\r```",name:"sort",required:!0,type:{name:"(compareFn?: (a: string, b: string) => number) => ISheetNames"}},splice:{defaultValue:null,description:"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\nRemoves elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\n@param start The zero-based location in the array from which to start removing elements.\n@param deleteCount The number of elements to remove.\n@param start The zero-based location in the array from which to start removing elements.\n@param deleteCount The number of elements to remove.\n@param items Elements to insert into the array in place of the deleted elements.",name:"splice",required:!0,type:{name:"{ (start: number, deleteCount?: number): string[]; (start: number, deleteCount: number, ...items: string[]): string[]; }"}},unshift:{defaultValue:null,description:"Inserts new elements at the start of an array.\n@param items Elements to insert at the start of the Array.",name:"unshift",required:!0,type:{name:"(...items: string[]) => number"}},indexOf:{defaultValue:null,description:"Returns the index of the first occurrence of a value in an array.\n@param searchElement The value to locate in the array.\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.",name:"indexOf",required:!0,type:{name:"(searchElement: string, fromIndex?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the index of the last occurrence of a specified value in an array.\n@param searchElement The value to locate in the array.\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.",name:"lastIndexOf",required:!0,type:{name:"(searchElement: string, fromIndex?: number) => number"}},every:{defaultValue:null,description:"Determines whether all the members of an array satisfy the specified test.\n@param callbackfn A function that accepts up to three arguments. The every method calls\rthe callbackfn function for each element in the array until the callbackfn returns a value\rwhich is coercible to the Boolean value false, or until the end of the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.",name:"every",required:!0,type:{name:"(callbackfn: (value: string, index: number, array: string[]) => unknown, thisArg?: any) => boolean"}},some:{defaultValue:null,description:"Determines whether the specified callback function returns true for any element of an array.\n@param callbackfn A function that accepts up to three arguments. The some method calls\rthe callbackfn function for each element in the array until the callbackfn returns a value\rwhich is coercible to the Boolean value true, or until the end of the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.",name:"some",required:!0,type:{name:"(callbackfn: (value: string, index: number, array: string[]) => unknown, thisArg?: any) => boolean"}},forEach:{defaultValue:null,description:"Performs the specified action for each element in an array.\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"forEach",required:!0,type:{name:"(callbackfn: (value: string, index: number, array: string[]) => void, thisArg?: any) => void"}},map:{defaultValue:null,description:"Calls a defined callback function on each element of an array, and returns an array that contains the results.\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"map",required:!0,type:{name:"<U>(callbackfn: (value: string, index: number, array: string[]) => U, thisArg?: any) => U[]"}},filter:{defaultValue:null,description:"Returns the elements of an array that meet the condition specified in a callback function.\nReturns the elements of an array that meet the condition specified in a callback function.\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"filter",required:!0,type:{name:"{ <S extends string>(callbackfn: (value: string, index: number, array: string[]) => value is S, thisArg?: any): S[]; (callbackfn: (value: string, index: number, array: string[]) => unknown, thisArg?: any): string[]; }"}},reduce:{defaultValue:null,description:"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",name:"reduce",required:!0,type:{name:"{ (callbackfn: (previousValue: string, currentValue: string, currentIndex: number, array: string[]) => string): string; (callbackfn: (previousValue: string, currentValue: string, currentIndex: number, array: string[]) => string, initialValue: string): string; <U>(callbackfn: (previousValue: U, currentValue: string, ..."}},reduceRight:{defaultValue:null,description:"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",name:"reduceRight",required:!0,type:{name:"{ (callbackfn: (previousValue: string, currentValue: string, currentIndex: number, array: string[]) => string): string; (callbackfn: (previousValue: string, currentValue: string, currentIndex: number, array: string[]) => string, initialValue: string): string; <U>(callbackfn: (previousValue: U, currentValue: string, ..."}},find:{defaultValue:null,description:"Returns the value of the first element in the array where predicate is true, and undefined\notherwise.\n@param predicate find calls predicate once for each element of the array, in ascending\rorder, until it finds one where predicate returns true. If such an element is found, find\rimmediately returns that element value. Otherwise, find returns undefined.\n@param thisArg If provided, it will be used as the this value for each invocation of\rpredicate. If it is not provided, undefined is used instead.",name:"find",required:!0,type:{name:"{ <S extends string>(predicate: (this: void, value: string, index: number, obj: string[]) => value is S, thisArg?: any): S; (predicate: (value: string, index: number, obj: string[]) => unknown, thisArg?: any): string; }"}},findIndex:{defaultValue:null,description:"Returns the index of the first element in the array where predicate is true, and -1\notherwise.\n@param predicate find calls predicate once for each element of the array, in ascending\rorder, until it finds one where predicate returns true. If such an element is found,\rfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\n@param thisArg If provided, it will be used as the this value for each invocation of\rpredicate. If it is not provided, undefined is used instead.",name:"findIndex",required:!0,type:{name:"(predicate: (value: string, index: number, obj: string[]) => unknown, thisArg?: any) => number"}},fill:{defaultValue:null,description:"Returns the this object after filling the section identified by start and end with value\n@param value value to fill array section with\n@param start index to start filling the array at. If start is negative, it is treated as\rlength+start where length is the length of the array.\n@param end index to stop filling the array at. If end is negative, it is treated as\rlength+end.",name:"fill",required:!0,type:{name:"(value: string, start?: number, end?: number) => ISheetNames"}},copyWithin:{defaultValue:null,description:"Returns the this object after copying a section of the array identified by start and end\nto the same array starting at position target\n@param target If target is negative, it is treated as length+target where length is the\rlength of the array.\n@param start If start is negative, it is treated as length+start. If end is negative, it\ris treated as length+end.\n@param end If not specified, length of the this object is used as its default value.",name:"copyWithin",required:!0,type:{name:"(target: number, start: number, end?: number) => ISheetNames"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},entries:{defaultValue:null,description:"Returns an iterable of key, value pairs for every entry in the array",name:"entries",required:!0,type:{name:"() => IterableIterator<[number, string]>"}},keys:{defaultValue:null,description:"Returns an iterable of keys in the array",name:"keys",required:!0,type:{name:"() => IterableIterator<number>"}},values:{defaultValue:null,description:"Returns an iterable of values in the array",name:"values",required:!0,type:{name:"() => IterableIterator<string>"}},"__@unscopables":{defaultValue:null,description:"Returns an object whose properties have the value 'true'\nwhen they will be absent when used in a 'with' statement.",name:"__@unscopables",required:!0,type:{name:"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }"}},includes:{defaultValue:null,description:"Determines whether an array includes a certain element, returning true or false as appropriate.\n@param searchElement The element to search for.\n@param fromIndex The position in this array at which to begin searching for searchElement.",name:"includes",required:!0,type:{name:"(searchElement: string, fromIndex?: number) => boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#generateNewSheetName"]={docgenInfo:generateNewSheetName.__docgenInfo,name:"generateNewSheetName",path:"src/tools/index.ts#generateNewSheetName"})}catch(__react_docgen_typescript_loader_error){}try{getTableColumnCount.displayName="getTableColumnCount",getTableColumnCount.__docgenInfo={description:"",displayName:"getTableColumnCount",props:{toString:{defaultValue:null,description:"Returns a string representation of an object.\n@param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.",name:"toString",required:!1,type:{name:"(radix?: number) => string"}},toFixed:{defaultValue:null,description:"Returns a string representing a number in fixed-point notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toFixed",required:!0,type:{name:"(fractionDigits?: number) => string"}},toExponential:{defaultValue:null,description:"Returns a string containing a number represented in exponential notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toExponential",required:!0,type:{name:"(fractionDigits?: number) => string"}},toPrecision:{defaultValue:null,description:"Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.\n@param precision Number of significant digits. Must be in the range 1 - 21, inclusive.",name:"toPrecision",required:!0,type:{name:"(precision?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => number"}},toLocaleString:{defaultValue:null,description:"Converts a number to a string by using the current or specified locale.\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n@param options An object that contains one or more properties that specify comparison options.",name:"toLocaleString",required:!1,type:{name:"(locales?: string | string[], options?: NumberFormatOptions) => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#getTableColumnCount"]={docgenInfo:getTableColumnCount.__docgenInfo,name:"getTableColumnCount",path:"src/tools/index.ts#getTableColumnCount"})}catch(__react_docgen_typescript_loader_error){}try{getTableRowCount.displayName="getTableRowCount",getTableRowCount.__docgenInfo={description:"",displayName:"getTableRowCount",props:{toString:{defaultValue:null,description:"Returns a string representation of an object.\n@param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.",name:"toString",required:!1,type:{name:"(radix?: number) => string"}},toFixed:{defaultValue:null,description:"Returns a string representing a number in fixed-point notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toFixed",required:!0,type:{name:"(fractionDigits?: number) => string"}},toExponential:{defaultValue:null,description:"Returns a string containing a number represented in exponential notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toExponential",required:!0,type:{name:"(fractionDigits?: number) => string"}},toPrecision:{defaultValue:null,description:"Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.\n@param precision Number of significant digits. Must be in the range 1 - 21, inclusive.",name:"toPrecision",required:!0,type:{name:"(precision?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => number"}},toLocaleString:{defaultValue:null,description:"Converts a number to a string by using the current or specified locale.\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n@param options An object that contains one or more properties that specify comparison options.",name:"toLocaleString",required:!1,type:{name:"(locales?: string | string[], options?: NumberFormatOptions) => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#getTableRowCount"]={docgenInfo:getTableRowCount.__docgenInfo,name:"getTableRowCount",path:"src/tools/index.ts#getTableRowCount"})}catch(__react_docgen_typescript_loader_error){}try{getRangesFromInlineRanges.displayName="getRangesFromInlineRanges",getRangesFromInlineRanges.__docgenInfo={description:"",displayName:"getRangesFromInlineRanges",props:{length:{defaultValue:null,description:"Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.",name:"length",required:!0,type:{name:"number"}},toString:{defaultValue:null,description:"Returns a string representation of an array.",name:"toString",required:!1,type:{name:"() => string"}},toLocaleString:{defaultValue:null,description:"Returns a string representation of an array. The elements are converted to string using their toLocalString methods.",name:"toLocaleString",required:!1,type:{name:"() => string"}},pop:{defaultValue:null,description:"Removes the last element from an array and returns it.",name:"pop",required:!0,type:{name:"() => RawDraftInlineStyleRange"}},push:{defaultValue:null,description:"Appends new elements to an array, and returns the new length of the array.\n@param items New elements of the Array.",name:"push",required:!0,type:{name:"(...items: RawDraftInlineStyleRange[]) => number"}},concat:{defaultValue:null,description:"Combines two or more arrays.\nCombines two or more arrays.\n@param items Additional items to add to the end of array1.\n@param items Additional items to add to the end of array1.",name:"concat",required:!0,type:{name:"{ (...items: ConcatArray<RawDraftInlineStyleRange>[]): RawDraftInlineStyleRange[]; (...items: (RawDraftInlineStyleRange | ConcatArray<...>)[]): RawDraftInlineStyleRange[]; }"}},join:{defaultValue:null,description:"Adds all the elements of an array separated by the specified separator string.\n@param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.",name:"join",required:!0,type:{name:"(separator?: string) => string"}},reverse:{defaultValue:null,description:"Reverses the elements in an Array.",name:"reverse",required:!0,type:{name:"() => RawDraftInlineStyleRange[]"}},shift:{defaultValue:null,description:"Removes the first element from an array and returns it.",name:"shift",required:!0,type:{name:"() => RawDraftInlineStyleRange"}},slice:{defaultValue:null,description:"Returns a section of an array.\n@param start The beginning of the specified portion of the array.\n@param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => RawDraftInlineStyleRange[]"}},sort:{defaultValue:null,description:"Sorts an array.\n@param compareFn Function used to determine the order of the elements. It is expected to return\ra negative value if first argument is less than second argument, zero if they're equal and a positive\rvalue otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\r```ts\r[11,2,22,1].sort((a, b) => a - b)\r```",name:"sort",required:!0,type:{name:"(compareFn?: (a: RawDraftInlineStyleRange, b: RawDraftInlineStyleRange) => number) => RawDraftInlineStyleRange[]"}},splice:{defaultValue:null,description:"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\nRemoves elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\n@param start The zero-based location in the array from which to start removing elements.\n@param deleteCount The number of elements to remove.\n@param start The zero-based location in the array from which to start removing elements.\n@param deleteCount The number of elements to remove.\n@param items Elements to insert into the array in place of the deleted elements.",name:"splice",required:!0,type:{name:"{ (start: number, deleteCount?: number): RawDraftInlineStyleRange[]; (start: number, deleteCount: number, ...items: RawDraftInlineStyleRange[]): RawDraftInlineStyleRange[]; }"}},unshift:{defaultValue:null,description:"Inserts new elements at the start of an array.\n@param items Elements to insert at the start of the Array.",name:"unshift",required:!0,type:{name:"(...items: RawDraftInlineStyleRange[]) => number"}},indexOf:{defaultValue:null,description:"Returns the index of the first occurrence of a value in an array.\n@param searchElement The value to locate in the array.\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.",name:"indexOf",required:!0,type:{name:"(searchElement: RawDraftInlineStyleRange, fromIndex?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the index of the last occurrence of a specified value in an array.\n@param searchElement The value to locate in the array.\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.",name:"lastIndexOf",required:!0,type:{name:"(searchElement: RawDraftInlineStyleRange, fromIndex?: number) => number"}},every:{defaultValue:null,description:"Determines whether all the members of an array satisfy the specified test.\n@param callbackfn A function that accepts up to three arguments. The every method calls\rthe callbackfn function for each element in the array until the callbackfn returns a value\rwhich is coercible to the Boolean value false, or until the end of the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.",name:"every",required:!0,type:{name:"(callbackfn: (value: RawDraftInlineStyleRange, index: number, array: RawDraftInlineStyleRange[]) => unknown, thisArg?: any) => boolean"}},some:{defaultValue:null,description:"Determines whether the specified callback function returns true for any element of an array.\n@param callbackfn A function that accepts up to three arguments. The some method calls\rthe callbackfn function for each element in the array until the callbackfn returns a value\rwhich is coercible to the Boolean value true, or until the end of the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.",name:"some",required:!0,type:{name:"(callbackfn: (value: RawDraftInlineStyleRange, index: number, array: RawDraftInlineStyleRange[]) => unknown, thisArg?: any) => boolean"}},forEach:{defaultValue:null,description:"Performs the specified action for each element in an array.\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"forEach",required:!0,type:{name:"(callbackfn: (value: RawDraftInlineStyleRange, index: number, array: RawDraftInlineStyleRange[]) => void, thisArg?: any) => void"}},map:{defaultValue:null,description:"Calls a defined callback function on each element of an array, and returns an array that contains the results.\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"map",required:!0,type:{name:"<U>(callbackfn: (value: RawDraftInlineStyleRange, index: number, array: RawDraftInlineStyleRange[]) => U, thisArg?: any) => U[]"}},filter:{defaultValue:null,description:"Returns the elements of an array that meet the condition specified in a callback function.\nReturns the elements of an array that meet the condition specified in a callback function.\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"filter",required:!0,type:{name:"{ <S extends RawDraftInlineStyleRange>(callbackfn: (value: RawDraftInlineStyleRange, index: number, array: RawDraftInlineStyleRange[]) => value is S, thisArg?: any): S[]; (callbackfn: (value: RawDraftInlineStyleRange, index: number, array: RawDraftInlineStyleRange[]) => unknown, thisArg?: any): RawDraftInlineStyleRa..."}},reduce:{defaultValue:null,description:"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",name:"reduce",required:!0,type:{name:"{ (callbackfn: (previousValue: RawDraftInlineStyleRange, currentValue: RawDraftInlineStyleRange, currentIndex: number, array: RawDraftInlineStyleRange[]) => RawDraftInlineStyleRange): RawDraftInlineStyleRange; (callbackfn: (previousValue: RawDraftInlineStyleRange, currentValue: RawDraftInlineStyleRange, currentIndex..."}},reduceRight:{defaultValue:null,description:"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",name:"reduceRight",required:!0,type:{name:"{ (callbackfn: (previousValue: RawDraftInlineStyleRange, currentValue: RawDraftInlineStyleRange, currentIndex: number, array: RawDraftInlineStyleRange[]) => RawDraftInlineStyleRange): RawDraftInlineStyleRange; (callbackfn: (previousValue: RawDraftInlineStyleRange, currentValue: RawDraftInlineStyleRange, currentIndex..."}},find:{defaultValue:null,description:"Returns the value of the first element in the array where predicate is true, and undefined\notherwise.\n@param predicate find calls predicate once for each element of the array, in ascending\rorder, until it finds one where predicate returns true. If such an element is found, find\rimmediately returns that element value. Otherwise, find returns undefined.\n@param thisArg If provided, it will be used as the this value for each invocation of\rpredicate. If it is not provided, undefined is used instead.",name:"find",required:!0,type:{name:"{ <S extends RawDraftInlineStyleRange>(predicate: (this: void, value: RawDraftInlineStyleRange, index: number, obj: RawDraftInlineStyleRange[]) => value is S, thisArg?: any): S; (predicate: (value: RawDraftInlineStyleRange, index: number, obj: RawDraftInlineStyleRange[]) => unknown, thisArg?: any): RawDraftInlineSty..."}},findIndex:{defaultValue:null,description:"Returns the index of the first element in the array where predicate is true, and -1\notherwise.\n@param predicate find calls predicate once for each element of the array, in ascending\rorder, until it finds one where predicate returns true. If such an element is found,\rfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\n@param thisArg If provided, it will be used as the this value for each invocation of\rpredicate. If it is not provided, undefined is used instead.",name:"findIndex",required:!0,type:{name:"(predicate: (value: RawDraftInlineStyleRange, index: number, obj: RawDraftInlineStyleRange[]) => unknown, thisArg?: any) => number"}},fill:{defaultValue:null,description:"Returns the this object after filling the section identified by start and end with value\n@param value value to fill array section with\n@param start index to start filling the array at. If start is negative, it is treated as\rlength+start where length is the length of the array.\n@param end index to stop filling the array at. If end is negative, it is treated as\rlength+end.",name:"fill",required:!0,type:{name:"(value: RawDraftInlineStyleRange, start?: number, end?: number) => RawDraftInlineStyleRange[]"}},copyWithin:{defaultValue:null,description:"Returns the this object after copying a section of the array identified by start and end\nto the same array starting at position target\n@param target If target is negative, it is treated as length+target where length is the\rlength of the array.\n@param start If start is negative, it is treated as length+start. If end is negative, it\ris treated as length+end.\n@param end If not specified, length of the this object is used as its default value.",name:"copyWithin",required:!0,type:{name:"(target: number, start: number, end?: number) => RawDraftInlineStyleRange[]"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<RawDraftInlineStyleRange>"}},entries:{defaultValue:null,description:"Returns an iterable of key, value pairs for every entry in the array",name:"entries",required:!0,type:{name:"() => IterableIterator<[number, RawDraftInlineStyleRange]>"}},keys:{defaultValue:null,description:"Returns an iterable of keys in the array",name:"keys",required:!0,type:{name:"() => IterableIterator<number>"}},values:{defaultValue:null,description:"Returns an iterable of values in the array",name:"values",required:!0,type:{name:"() => IterableIterator<RawDraftInlineStyleRange>"}},"__@unscopables":{defaultValue:null,description:"Returns an object whose properties have the value 'true'\nwhen they will be absent when used in a 'with' statement.",name:"__@unscopables",required:!0,type:{name:"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }"}},includes:{defaultValue:null,description:"Determines whether an array includes a certain element, returning true or false as appropriate.\n@param searchElement The element to search for.\n@param fromIndex The position in this array at which to begin searching for searchElement.",name:"includes",required:!0,type:{name:"(searchElement: RawDraftInlineStyleRange, fromIndex?: number) => boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#getRangesFromInlineRanges"]={docgenInfo:getRangesFromInlineRanges.__docgenInfo,name:"getRangesFromInlineRanges",path:"src/tools/index.ts#getRangesFromInlineRanges"})}catch(__react_docgen_typescript_loader_error){}try{getTextFromRichText.displayName="getTextFromRichText",getTextFromRichText.__docgenInfo={description:"",displayName:"getTextFromRichText",props:{length:{defaultValue:null,description:"Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.",name:"length",required:!0,type:{name:"number"}},toString:{defaultValue:null,description:"Returns a string representation of an array.",name:"toString",required:!1,type:{name:"() => string"}},toLocaleString:{defaultValue:null,description:"Returns a string representation of an array. The elements are converted to string using their toLocalString methods.",name:"toLocaleString",required:!1,type:{name:"() => string"}},pop:{defaultValue:null,description:"Removes the last element from an array and returns it.",name:"pop",required:!0,type:{name:"() => IRichTextBlock"}},push:{defaultValue:null,description:"Appends new elements to an array, and returns the new length of the array.\n@param items New elements of the Array.",name:"push",required:!0,type:{name:"(...items: IRichTextBlock[]) => number"}},concat:{defaultValue:null,description:"Combines two or more arrays.\nCombines two or more arrays.\n@param items Additional items to add to the end of array1.\n@param items Additional items to add to the end of array1.",name:"concat",required:!0,type:{name:"{ (...items: ConcatArray<IRichTextBlock>[]): IRichTextBlock[]; (...items: (IRichTextBlock | ConcatArray<IRichTextBlock>)[]): IRichTextBlock[]; }"}},join:{defaultValue:null,description:"Adds all the elements of an array separated by the specified separator string.\n@param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.",name:"join",required:!0,type:{name:"(separator?: string) => string"}},reverse:{defaultValue:null,description:"Reverses the elements in an Array.",name:"reverse",required:!0,type:{name:"() => IRichTextBlock[]"}},shift:{defaultValue:null,description:"Removes the first element from an array and returns it.",name:"shift",required:!0,type:{name:"() => IRichTextBlock"}},slice:{defaultValue:null,description:"Returns a section of an array.\n@param start The beginning of the specified portion of the array.\n@param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => IRichTextBlock[]"}},sort:{defaultValue:null,description:"Sorts an array.\n@param compareFn Function used to determine the order of the elements. It is expected to return\ra negative value if first argument is less than second argument, zero if they're equal and a positive\rvalue otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\r```ts\r[11,2,22,1].sort((a, b) => a - b)\r```",name:"sort",required:!0,type:{name:"(compareFn?: (a: IRichTextBlock, b: IRichTextBlock) => number) => IRichTextValue"}},splice:{defaultValue:null,description:"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\nRemoves elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\n@param start The zero-based location in the array from which to start removing elements.\n@param deleteCount The number of elements to remove.\n@param start The zero-based location in the array from which to start removing elements.\n@param deleteCount The number of elements to remove.\n@param items Elements to insert into the array in place of the deleted elements.",name:"splice",required:!0,type:{name:"{ (start: number, deleteCount?: number): IRichTextBlock[]; (start: number, deleteCount: number, ...items: IRichTextBlock[]): IRichTextBlock[]; }"}},unshift:{defaultValue:null,description:"Inserts new elements at the start of an array.\n@param items Elements to insert at the start of the Array.",name:"unshift",required:!0,type:{name:"(...items: IRichTextBlock[]) => number"}},indexOf:{defaultValue:null,description:"Returns the index of the first occurrence of a value in an array.\n@param searchElement The value to locate in the array.\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.",name:"indexOf",required:!0,type:{name:"(searchElement: IRichTextBlock, fromIndex?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the index of the last occurrence of a specified value in an array.\n@param searchElement The value to locate in the array.\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.",name:"lastIndexOf",required:!0,type:{name:"(searchElement: IRichTextBlock, fromIndex?: number) => number"}},every:{defaultValue:null,description:"Determines whether all the members of an array satisfy the specified test.\n@param callbackfn A function that accepts up to three arguments. The every method calls\rthe callbackfn function for each element in the array until the callbackfn returns a value\rwhich is coercible to the Boolean value false, or until the end of the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.",name:"every",required:!0,type:{name:"(callbackfn: (value: IRichTextBlock, index: number, array: IRichTextBlock[]) => unknown, thisArg?: any) => boolean"}},some:{defaultValue:null,description:"Determines whether the specified callback function returns true for any element of an array.\n@param callbackfn A function that accepts up to three arguments. The some method calls\rthe callbackfn function for each element in the array until the callbackfn returns a value\rwhich is coercible to the Boolean value true, or until the end of the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.",name:"some",required:!0,type:{name:"(callbackfn: (value: IRichTextBlock, index: number, array: IRichTextBlock[]) => unknown, thisArg?: any) => boolean"}},forEach:{defaultValue:null,description:"Performs the specified action for each element in an array.\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"forEach",required:!0,type:{name:"(callbackfn: (value: IRichTextBlock, index: number, array: IRichTextBlock[]) => void, thisArg?: any) => void"}},map:{defaultValue:null,description:"Calls a defined callback function on each element of an array, and returns an array that contains the results.\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"map",required:!0,type:{name:"<U>(callbackfn: (value: IRichTextBlock, index: number, array: IRichTextBlock[]) => U, thisArg?: any) => U[]"}},filter:{defaultValue:null,description:"Returns the elements of an array that meet the condition specified in a callback function.\nReturns the elements of an array that meet the condition specified in a callback function.\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"filter",required:!0,type:{name:"{ <S extends IRichTextBlock>(callbackfn: (value: IRichTextBlock, index: number, array: IRichTextBlock[]) => value is S, thisArg?: any): S[]; (callbackfn: (value: IRichTextBlock, index: number, array: IRichTextBlock[]) => unknown, thisArg?: any): IRichTextBlock[]; }"}},reduce:{defaultValue:null,description:"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",name:"reduce",required:!0,type:{name:"{ (callbackfn: (previousValue: IRichTextBlock, currentValue: IRichTextBlock, currentIndex: number, array: IRichTextBlock[]) => IRichTextBlock): IRichTextBlock; (callbackfn: (previousValue: IRichTextBlock, currentValue: IRichTextBlock, currentIndex: number, array: IRichTextBlock[]) => IRichTextBlock, initialValue: IR..."}},reduceRight:{defaultValue:null,description:"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",name:"reduceRight",required:!0,type:{name:"{ (callbackfn: (previousValue: IRichTextBlock, currentValue: IRichTextBlock, currentIndex: number, array: IRichTextBlock[]) => IRichTextBlock): IRichTextBlock; (callbackfn: (previousValue: IRichTextBlock, currentValue: IRichTextBlock, currentIndex: number, array: IRichTextBlock[]) => IRichTextBlock, initialValue: IR..."}},find:{defaultValue:null,description:"Returns the value of the first element in the array where predicate is true, and undefined\notherwise.\n@param predicate find calls predicate once for each element of the array, in ascending\rorder, until it finds one where predicate returns true. If such an element is found, find\rimmediately returns that element value. Otherwise, find returns undefined.\n@param thisArg If provided, it will be used as the this value for each invocation of\rpredicate. If it is not provided, undefined is used instead.",name:"find",required:!0,type:{name:"{ <S extends IRichTextBlock>(predicate: (this: void, value: IRichTextBlock, index: number, obj: IRichTextBlock[]) => value is S, thisArg?: any): S; (predicate: (value: IRichTextBlock, index: number, obj: IRichTextBlock[]) => unknown, thisArg?: any): IRichTextBlock; }"}},findIndex:{defaultValue:null,description:"Returns the index of the first element in the array where predicate is true, and -1\notherwise.\n@param predicate find calls predicate once for each element of the array, in ascending\rorder, until it finds one where predicate returns true. If such an element is found,\rfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\n@param thisArg If provided, it will be used as the this value for each invocation of\rpredicate. If it is not provided, undefined is used instead.",name:"findIndex",required:!0,type:{name:"(predicate: (value: IRichTextBlock, index: number, obj: IRichTextBlock[]) => unknown, thisArg?: any) => number"}},fill:{defaultValue:null,description:"Returns the this object after filling the section identified by start and end with value\n@param value value to fill array section with\n@param start index to start filling the array at. If start is negative, it is treated as\rlength+start where length is the length of the array.\n@param end index to stop filling the array at. If end is negative, it is treated as\rlength+end.",name:"fill",required:!0,type:{name:"(value: IRichTextBlock, start?: number, end?: number) => IRichTextValue"}},copyWithin:{defaultValue:null,description:"Returns the this object after copying a section of the array identified by start and end\nto the same array starting at position target\n@param target If target is negative, it is treated as length+target where length is the\rlength of the array.\n@param start If start is negative, it is treated as length+start. If end is negative, it\ris treated as length+end.\n@param end If not specified, length of the this object is used as its default value.",name:"copyWithin",required:!0,type:{name:"(target: number, start: number, end?: number) => IRichTextValue"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<IRichTextBlock>"}},entries:{defaultValue:null,description:"Returns an iterable of key, value pairs for every entry in the array",name:"entries",required:!0,type:{name:"() => IterableIterator<[number, IRichTextBlock]>"}},keys:{defaultValue:null,description:"Returns an iterable of keys in the array",name:"keys",required:!0,type:{name:"() => IterableIterator<number>"}},values:{defaultValue:null,description:"Returns an iterable of values in the array",name:"values",required:!0,type:{name:"() => IterableIterator<IRichTextBlock>"}},"__@unscopables":{defaultValue:null,description:"Returns an object whose properties have the value 'true'\nwhen they will be absent when used in a 'with' statement.",name:"__@unscopables",required:!0,type:{name:"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }"}},includes:{defaultValue:null,description:"Determines whether an array includes a certain element, returning true or false as appropriate.\n@param searchElement The element to search for.\n@param fromIndex The position in this array at which to begin searching for searchElement.",name:"includes",required:!0,type:{name:"(searchElement: IRichTextBlock, fromIndex?: number) => boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#getTextFromRichText"]={docgenInfo:getTextFromRichText.__docgenInfo,name:"getTextFromRichText",path:"src/tools/index.ts#getTextFromRichText"})}catch(__react_docgen_typescript_loader_error){}try{createValueFromEditorState.displayName="createValueFromEditorState",createValueFromEditorState.__docgenInfo={description:"",displayName:"createValueFromEditorState",props:{toJS:{defaultValue:null,description:"Deeply converts this Iterable to equivalent JS.\n\n`Iterable.Indexeds`, and `Iterable.Sets` become Arrays, while\n`Iterable.Keyeds` become Objects.",name:"toJS",required:!0,type:{name:"() => Object"}},getAllowUndo:{defaultValue:null,description:"",name:"getAllowUndo",required:!0,type:{name:"() => boolean"}},getCurrentContent:{defaultValue:null,description:"",name:"getCurrentContent",required:!0,type:{name:"() => ContentState"}},getUndoStack:{defaultValue:null,description:"",name:"getUndoStack",required:!0,type:{name:"() => Stack<ContentState>"}},getRedoStack:{defaultValue:null,description:"",name:"getRedoStack",required:!0,type:{name:"() => Stack<ContentState>"}},getSelection:{defaultValue:null,description:"",name:"getSelection",required:!0,type:{name:"() => SelectionState"}},getDecorator:{defaultValue:null,description:"",name:"getDecorator",required:!0,type:{name:"() => DraftDecoratorType"}},isInCompositionMode:{defaultValue:null,description:"",name:"isInCompositionMode",required:!0,type:{name:"() => boolean"}},mustForceSelection:{defaultValue:null,description:"",name:"mustForceSelection",required:!0,type:{name:"() => boolean"}},getNativelyRenderedContent:{defaultValue:null,description:"",name:"getNativelyRenderedContent",required:!0,type:{name:"() => ContentState"}},getLastChangeType:{defaultValue:null,description:"",name:"getLastChangeType",required:!0,type:{name:"() => EditorChangeType"}},getInlineStyleOverride:{defaultValue:null,description:'While editing, the user may apply inline style commands with a collapsed\ncursor, intending to type text that adopts the specified style. In this\ncase, we track the specified style as an "override" that takes precedence\nover the inline style of the text adjacent to the cursor.\n\nIf null, there is no override in place.',name:"getInlineStyleOverride",required:!0,type:{name:"() => DraftInlineStyle"}},getCurrentInlineStyle:{defaultValue:null,description:"Get the appropriate inline style for the editor state. If an\noverride is in place, use it. Otherwise, the current style is\nbased on the location of the selection state.",name:"getCurrentInlineStyle",required:!0,type:{name:"() => DraftInlineStyle"}},getBlockTree:{defaultValue:null,description:"",name:"getBlockTree",required:!0,type:{name:"(blockKey: string) => List<any>"}},isSelectionAtStartOfContent:{defaultValue:null,description:"",name:"isSelectionAtStartOfContent",required:!0,type:{name:"() => boolean"}},isSelectionAtEndOfContent:{defaultValue:null,description:"",name:"isSelectionAtEndOfContent",required:!0,type:{name:"() => boolean"}},getDirectionMap:{defaultValue:null,description:"",name:"getDirectionMap",required:!0,type:{name:"() => OrderedMap<any, any>"}},set:{defaultValue:null,description:"Returns a new Map also containing the new key, value pair. If an equivalent\nkey already exists in this Map, it will be replaced.",name:"set",required:!0,type:{name:"(key: string, value: any) => Map<string, any>"}},delete:{defaultValue:null,description:"Returns a new Map which excludes this `key`.\n\nNote: `delete` cannot be safely used in IE8, but is provided to mirror\nthe ES6 collection API.\n@alias remove",name:"delete",required:!0,type:{name:"(key: string) => Map<string, any>"}},remove:{defaultValue:null,description:"",name:"remove",required:!0,type:{name:"(key: string) => Map<string, any>"}},clear:{defaultValue:null,description:"Returns a new Map containing no keys or values.",name:"clear",required:!0,type:{name:"() => Map<string, any>"}},update:{defaultValue:null,description:"Returns a new Map having updated the value at this `key` with the return\nvalue of calling `updater` with the existing value, or `notSetValue` if\nthe key was not set. If called with only a single argument, `updater` is\ncalled with the Map itself.\n\nEquivalent to: `map.set(key, updater(map.get(key, notSetValue)))`.",name:"update",required:!0,type:{name:"{ (updater: (value: Map<string, any>) => Map<string, any>): Map<string, any>; (key: string, updater: (value: any) => any): Map<string, any>; (key: string, notSetValue: any, updater: (value: any) => any): Map<...>; }"}},merge:{defaultValue:null,description:"Returns a new Map resulting from merging the provided Iterables\n(or JS objects) into this Map. In other words, this takes each entry of\neach iterable and sets it on this Map.\n\nIf any of the values provided to `merge` are not Iterable (would return\nfalse for `Immutable.Iterable.isIterable`) then they are deeply converted\nvia `Immutable.fromJS` before being merged. However, if the value is an\nIterable but includes non-iterable JS objects or arrays, those nested\nvalues will be preserved.\n\n     var x = Immutable.Map({a: 10, b: 20, c: 30});\n     var y = Immutable.Map({b: 40, a: 50, d: 60});\n     x.merge(y) // { a: 50, b: 40, c: 30, d: 60 }\n     y.merge(x) // { b: 20, a: 10, d: 60, c: 30 }",name:"merge",required:!0,type:{name:"{ (...iterables: Iterable<string, any>[]): Map<string, any>; (...iterables: { [key: string]: any; }[]): Map<string, any>; }"}},mergeWith:{defaultValue:null,description:"Like `merge()`, `mergeWith()` returns a new Map resulting from merging\nthe provided Iterables (or JS objects) into this Map, but uses the\n`merger` function for dealing with conflicts.\n\n     var x = Immutable.Map({a: 10, b: 20, c: 30});\n     var y = Immutable.Map({b: 40, a: 50, d: 60});\n     x.mergeWith((prev, next) => prev / next, y) // { a: 0.2, b: 0.5, c: 30, d: 60 }\n     y.mergeWith((prev, next) => prev / next, x) // { b: 2, a: 5, d: 60, c: 30 }",name:"mergeWith",required:!0,type:{name:"{ (merger: (previous?: any, next?: any, key?: string) => any, ...iterables: Iterable<string, any>[]): Map<string, any>; (merger: (previous?: any, next?: any, key?: string) => any, ...iterables: { ...; }[]): Map<...>; }"}},mergeDeep:{defaultValue:null,description:"Like `merge()`, but when two Iterables conflict, it merges them as well,\nrecursing deeply through the nested data.\n\n     var x = Immutable.fromJS({a: { x: 10, y: 10 }, b: { x: 20, y: 50 } });\n     var y = Immutable.fromJS({a: { x: 2 }, b: { y: 5 }, c: { z: 3 } });\n     x.mergeDeep(y) // {a: { x: 2, y: 10 }, b: { x: 20, y: 5 }, c: { z: 3 } }",name:"mergeDeep",required:!0,type:{name:"{ (...iterables: Iterable<string, any>[]): Map<string, any>; (...iterables: { [key: string]: any; }[]): Map<string, any>; }"}},mergeDeepWith:{defaultValue:null,description:"Like `mergeDeep()`, but when two non-Iterables conflict, it uses the\n`merger` function to determine the resulting value.\n\n     var x = Immutable.fromJS({a: { x: 10, y: 10 }, b: { x: 20, y: 50 } });\n     var y = Immutable.fromJS({a: { x: 2 }, b: { y: 5 }, c: { z: 3 } });\n     x.mergeDeepWith((prev, next) => prev / next, y)\n     // {a: { x: 5, y: 10 }, b: { x: 20, y: 10 }, c: { z: 3 } }",name:"mergeDeepWith",required:!0,type:{name:"{ (merger: (previous?: any, next?: any, key?: string) => any, ...iterables: Iterable<string, any>[]): Map<string, any>; (merger: (previous?: any, next?: any, key?: string) => any, ...iterables: { ...; }[]): Map<...>; }"}},setIn:{defaultValue:null,description:"Returns a new Map having set `value` at this `keyPath`. If any keys in\n`keyPath` do not exist, a new immutable Map will be created at that key.",name:"setIn",required:!0,type:{name:"{ (keyPath: any[], value: any): Map<string, any>; (KeyPath: Iterable<any, any>, value: any): Map<string, any>; }"}},deleteIn:{defaultValue:null,description:"Returns a new Map having removed the value at this `keyPath`. If any keys\nin `keyPath` do not exist, no change will occur.\n@alias removeIn",name:"deleteIn",required:!0,type:{name:"{ (keyPath: any[]): Map<string, any>; (keyPath: Iterable<any, any>): Map<string, any>; }"}},removeIn:{defaultValue:null,description:"",name:"removeIn",required:!0,type:{name:"{ (keyPath: any[]): Map<string, any>; (keyPath: Iterable<any, any>): Map<string, any>; }"}},updateIn:{defaultValue:null,description:"Returns a new Map having applied the `updater` to the entry found at the\nkeyPath.\n\nIf any keys in `keyPath` do not exist, new Immutable `Map`s will\nbe created at those keys. If the `keyPath` does not already contain a\nvalue, the `updater` function will be called with `notSetValue`, if\nprovided, otherwise `undefined`.\n\n     var data = Immutable.fromJS({ a: { b: { c: 10 } } });\n     data = data.updateIn(['a', 'b', 'c'], val => val * 2);\n     // { a: { b: { c: 20 } } }\n\nIf the `updater` function returns the same value it was called with, then\nno change will occur. This is still true if `notSetValue` is provided.\n\n     var data1 = Immutable.fromJS({ a: { b: { c: 10 } } });\n     data2 = data1.updateIn(['x', 'y', 'z'], 100, val => val);\n     assert(data2 === data1);",name:"updateIn",required:!0,type:{name:"{ (keyPath: any[], updater: (value: any) => any): Map<string, any>; (keyPath: any[], notSetValue: any, updater: (value: any) => any): Map<string, any>; (keyPath: Iterable<any, any>, updater: (value: any) => any): Map<...>; (keyPath: Iterable<...>, notSetValue: any, updater: (value: any) => any): Map<...>; }"}},mergeIn:{defaultValue:null,description:"A combination of `updateIn` and `merge`, returning a new Map, but\nperforming the merge at a point arrived at by following the keyPath.\nIn other words, these two lines are equivalent:\n\n     x.updateIn(['a', 'b', 'c'], abc => abc.merge(y));\n     x.mergeIn(['a', 'b', 'c'], y);",name:"mergeIn",required:!0,type:{name:"{ (keyPath: Iterable<any, any>, ...iterables: Iterable<string, any>[]): Map<string, any>; (keyPath: any[], ...iterables: Iterable<string, any>[]): Map<...>; (keyPath: any[], ...iterables: { ...; }[]): Map<...>; }"}},mergeDeepIn:{defaultValue:null,description:"A combination of `updateIn` and `mergeDeep`, returning a new Map, but\nperforming the deep merge at a point arrived at by following the keyPath.\nIn other words, these two lines are equivalent:\n\n     x.updateIn(['a', 'b', 'c'], abc => abc.mergeDeep(y));\n     x.mergeDeepIn(['a', 'b', 'c'], y);",name:"mergeDeepIn",required:!0,type:{name:"{ (keyPath: Iterable<any, any>, ...iterables: Iterable<string, any>[]): Map<string, any>; (keyPath: any[], ...iterables: Iterable<string, any>[]): Map<...>; (keyPath: any[], ...iterables: { ...; }[]): Map<...>; }"}},withMutations:{defaultValue:null,description:"Every time you call one of the above functions, a new immutable Map is\ncreated. If a pure function calls a number of these to produce a final\nreturn value, then a penalty on performance and memory has been paid by\ncreating all of the intermediate immutable Maps.\n\nIf you need to apply a series of mutations to produce a new immutable\nMap, `withMutations()` creates a temporary mutable copy of the Map which\ncan apply mutations in a highly performant manner. In fact, this is\nexactly how complex mutations like `merge` are done.\n\nAs an example, this results in the creation of 2, not 4, new Maps:\n\n     var map1 = Immutable.Map();\n     var map2 = map1.withMutations(map => {\n       map.set('a', 1).set('b', 2).set('c', 3);\n     });\n     assert(map1.size === 0);\n     assert(map2.size === 3);\n\nNote: Not all methods can be used on a mutable collection or within\n`withMutations`! Only `set` and `merge` may be used mutatively.",name:"withMutations",required:!0,type:{name:"(mutator: (mutable: Map<string, any>) => any) => Map<string, any>"}},asMutable:{defaultValue:null,description:"Another way to avoid creation of intermediate Immutable maps is to create\na mutable copy of this collection. Mutable copies *always* return `this`,\nand thus shouldn't be used for equality. Your function should never return\na mutable copy of a collection, only use it internally to create a new\ncollection. If possible, use `withMutations` as it provides an easier to\nuse API.\n\nNote: if the collection is already mutable, `asMutable` returns itself.\n\nNote: Not all methods can be used on a mutable collection or within\n`withMutations`! Only `set` and `merge` may be used mutatively.",name:"asMutable",required:!0,type:{name:"() => Map<string, any>"}},asImmutable:{defaultValue:null,description:"The yin to `asMutable`'s yang. Because it applies to mutable collections,\nthis operation is *mutable* and returns itself. Once performed, the mutable\ncopy has become immutable and can be safely returned from a function.",name:"asImmutable",required:!0,type:{name:"() => Map<string, any>"}},toSeq:{defaultValue:null,description:"Returns Seq.Keyed.\n@override",name:"toSeq",required:!0,type:{name:"() => Keyed<string, any>"}},size:{defaultValue:null,description:"All collections maintain their current `size` as an integer.",name:"size",required:!0,type:{name:"number"}},equals:{defaultValue:null,description:"True if this and the other Iterable have value equality, as defined\nby `Immutable.is()`.\n\nNote: This is equivalent to `Immutable.is(this, other)`, but provided to\nallow for chained expressions.",name:"equals",required:!0,type:{name:"(other: Iterable<string, any>) => boolean"}},hashCode:{defaultValue:null,description:"Computes and returns the hashed identity for this Iterable.\n\nThe `hashCode` of an Iterable is used to determine potential equality,\nand is used when adding this to a `Set` or as a key in a `Map`, enabling\nlookup via a different instance.\n\n     var a = List.of(1, 2, 3);\n     var b = List.of(1, 2, 3);\n     assert(a !== b); // different instances\n     var set = Set.of(a);\n     assert(set.has(b) === true);\n\nIf two values have the same `hashCode`, they are [not guaranteed\nto be equal][Hash Collision]. If two values have different `hashCode`s,\nthey must not be equal.\n\n[Hash Collision]: http://en.wikipedia.org/wiki/Collision_(computer_science)",name:"hashCode",required:!0,type:{name:"() => number"}},get:{defaultValue:null,description:"Returns the value associated with the provided key, or notSetValue if\nthe Iterable does not contain this key.\n\nNote: it is possible a key may be associated with an `undefined` value,\nso if `notSetValue` is not provided and this method returns `undefined`,\nthat does not guarantee the key was not found.",name:"get",required:!0,type:{name:"(key: string, notSetValue?: any) => any"}},has:{defaultValue:null,description:"True if a key exists within this `Iterable`.",name:"has",required:!0,type:{name:"(key: string) => boolean"}},includes:{defaultValue:null,description:"True if a value exists within this `Iterable`.\n@alias contains",name:"includes",required:!0,type:{name:"(value: any) => boolean"}},contains:{defaultValue:null,description:"",name:"contains",required:!0,type:{name:"(value: any) => boolean"}},first:{defaultValue:null,description:"The first value in the Iterable.",name:"first",required:!0,type:{name:"() => any"}},last:{defaultValue:null,description:"The last value in the Iterable.",name:"last",required:!0,type:{name:"() => any"}},getIn:{defaultValue:null,description:"Returns the value found by following a path of keys or indices through\nnested Iterables.",name:"getIn",required:!0,type:{name:"{ (searchKeyPath: any[], notSetValue?: any): any; (searchKeyPath: Iterable<any, any>, notSetValue?: any): any; }"}},hasIn:{defaultValue:null,description:"True if the result of following a path of keys or indices through nested\nIterables results in a set value.",name:"hasIn",required:!0,type:{name:"{ (searchKeyPath: any[]): boolean; (searchKeyPath: Iterable<any, any>): boolean; }"}},toArray:{defaultValue:null,description:"Shallowly converts this iterable to an Array, discarding keys.",name:"toArray",required:!0,type:{name:"() => any[]"}},toObject:{defaultValue:null,description:"Shallowly converts this Iterable to an Object.\n\nThrows if keys are not strings.",name:"toObject",required:!0,type:{name:"() => { [key: string]: any; }"}},toMap:{defaultValue:null,description:"Converts this Iterable to a Map, Throws if keys are not hashable.\n\nNote: This is equivalent to `Map(this.toKeyedSeq())`, but provided\nfor convenience and to allow for chained expressions.",name:"toMap",required:!0,type:{name:"() => Map<string, any>"}},toOrderedMap:{defaultValue:null,description:"Converts this Iterable to a Map, maintaining the order of iteration.\n\nNote: This is equivalent to `OrderedMap(this.toKeyedSeq())`, but\nprovided for convenience and to allow for chained expressions.",name:"toOrderedMap",required:!0,type:{name:"() => Map<string, any>"}},toSet:{defaultValue:null,description:"Converts this Iterable to a Set, discarding keys. Throws if values\nare not hashable.\n\nNote: This is equivalent to `Set(this)`, but provided to allow for\nchained expressions.",name:"toSet",required:!0,type:{name:"() => Set<any>"}},toOrderedSet:{defaultValue:null,description:"Converts this Iterable to a Set, maintaining the order of iteration and\ndiscarding keys.\n\nNote: This is equivalent to `OrderedSet(this.valueSeq())`, but provided\nfor convenience and to allow for chained expressions.",name:"toOrderedSet",required:!0,type:{name:"() => Set<any>"}},toList:{defaultValue:null,description:"Converts this Iterable to a List, discarding keys.\n\nNote: This is equivalent to `List(this)`, but provided to allow\nfor chained expressions.",name:"toList",required:!0,type:{name:"() => List<any>"}},toStack:{defaultValue:null,description:"Converts this Iterable to a Stack, discarding keys. Throws if values\nare not hashable.\n\nNote: This is equivalent to `Stack(this)`, but provided to allow for\nchained expressions.",name:"toStack",required:!0,type:{name:"() => Stack<any>"}},toKeyedSeq:{defaultValue:null,description:"Returns a Seq.Keyed from this Iterable where indices are treated as keys.\n\nThis is useful if you want to operate on an\nIterable.Indexed and preserve the [index, value] pairs.\n\nThe returned Seq will have identical iteration order as\nthis Iterable.\n\nExample:\n\n     var indexedSeq = Immutable.Seq.of('A', 'B', 'C');\n     indexedSeq.filter(v => v === 'B').toString() // Seq [ 'B' ]\n     var keyedSeq = indexedSeq.toKeyedSeq();\n     keyedSeq.filter(v => v === 'B').toString() // Seq { 1: 'B' }",name:"toKeyedSeq",required:!0,type:{name:"() => Keyed<string, any>"}},toIndexedSeq:{defaultValue:null,description:"Returns an Seq.Indexed of the values of this Iterable, discarding keys.",name:"toIndexedSeq",required:!0,type:{name:"() => Indexed<any>"}},toSetSeq:{defaultValue:null,description:"Returns a Seq.Set of the values of this Iterable, discarding keys.",name:"toSetSeq",required:!0,type:{name:"() => Set<any>"}},keys:{defaultValue:null,description:"An iterator of this `Iterable`'s keys.",name:"keys",required:!0,type:{name:"() => Iterator<string>"}},values:{defaultValue:null,description:"An iterator of this `Iterable`'s values.",name:"values",required:!0,type:{name:"() => Iterator<any>"}},entries:{defaultValue:null,description:"An iterator of this `Iterable`'s entries as `[key, value]` tuples.",name:"entries",required:!0,type:{name:"() => Iterator<any[]>"}},keySeq:{defaultValue:null,description:"Returns a new Seq.Indexed of the keys of this Iterable,\ndiscarding values.",name:"keySeq",required:!0,type:{name:"() => Indexed<string>"}},valueSeq:{defaultValue:null,description:"Returns an Seq.Indexed of the values of this Iterable, discarding keys.",name:"valueSeq",required:!0,type:{name:"() => Indexed<any>"}},entrySeq:{defaultValue:null,description:"Returns a new Seq.Indexed of [key, value] tuples.",name:"entrySeq",required:!0,type:{name:"() => Indexed<any[]>"}},map:{defaultValue:null,description:"Returns a new Iterable of the same type with values passed through a\n`mapper` function.\n\n     Seq({ a: 1, b: 2 }).map(x => 10 * x)\n     // Seq { a: 10, b: 20 }",name:"map",required:!0,type:{name:"<M>(mapper: (value?: any, key?: string, iter?: Iterable<string, any>) => M, context?: any) => Iterable<string, M>"}},filter:{defaultValue:null,description:"Returns a new Iterable of the same type with only the entries for which\nthe `predicate` function returns true.\n\n     Seq({a:1,b:2,c:3,d:4}).filter(x => x % 2 === 0)\n     // Seq { b: 2, d: 4 }",name:"filter",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => Iterable<string, any>"}},filterNot:{defaultValue:null,description:"Returns a new Iterable of the same type with only the entries for which\nthe `predicate` function returns false.\n\n     Seq({a:1,b:2,c:3,d:4}).filterNot(x => x % 2 === 0)\n     // Seq { a: 1, c: 3 }",name:"filterNot",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => Iterable<string, any>"}},reverse:{defaultValue:null,description:"Returns a new Iterable of the same type in reverse order.",name:"reverse",required:!0,type:{name:"() => Iterable<string, any>"}},sort:{defaultValue:null,description:"Returns a new Iterable of the same type which includes the same entries,\nstably sorted by using a `comparator`.\n\nIf a `comparator` is not provided, a default comparator uses `<` and `>`.\n\n`comparator(valueA, valueB)`:\n\n   * Returns `0` if the elements should not be swapped.\n   * Returns `-1` (or any negative number) if `valueA` comes before `valueB`\n   * Returns `1` (or any positive number) if `valueA` comes after `valueB`\n   * Is pure, i.e. it must always return the same value for the same pair\n     of values.\n\nWhen sorting collections which have no defined order, their ordered\nequivalents will be returned. e.g. `map.sort()` returns OrderedMap.",name:"sort",required:!0,type:{name:"(comparator?: (valueA: any, valueB: any) => number) => Iterable<string, any>"}},sortBy:{defaultValue:null,description:"Like `sort`, but also accepts a `comparatorValueMapper` which allows for\nsorting by more sophisticated means:\n\n     hitters.sortBy(hitter => hitter.avgHits);",name:"sortBy",required:!0,type:{name:"<C>(comparatorValueMapper: (value?: any, key?: string, iter?: Iterable<string, any>) => C, comparator?: (valueA: C, valueB: C) => number) => Iterable<string, any>"}},groupBy:{defaultValue:null,description:"Returns a `Iterable.Keyed` of `Iterable.Keyeds`, grouped by the return\nvalue of the `grouper` function.\n\nNote: This is always an eager operation.",name:"groupBy",required:!0,type:{name:"<G>(grouper: (value?: any, key?: string, iter?: Iterable<string, any>) => G, context?: any) => Keyed<G, Iterable<string, any>>"}},forEach:{defaultValue:null,description:"The `sideEffect` is executed for every entry in the Iterable.\n\nUnlike `Array#forEach`, if any call of `sideEffect` returns\n`false`, the iteration will stop. Returns the number of entries iterated\n(including the last iteration which returned false).",name:"forEach",required:!0,type:{name:"(sideEffect: (value?: any, key?: string, iter?: Iterable<string, any>) => any, context?: any) => number"}},slice:{defaultValue:null,description:"Returns a new Iterable of the same type representing a portion of this\nIterable from start up to but not including end.\n\nIf begin is negative, it is offset from the end of the Iterable. e.g.\n`slice(-2)` returns a Iterable of the last two entries. If it is not\nprovided the new Iterable will begin at the beginning of this Iterable.\n\nIf end is negative, it is offset from the end of the Iterable. e.g.\n`slice(0, -1)` returns an Iterable of everything but the last entry. If\nit is not provided, the new Iterable will continue through the end of\nthis Iterable.\n\nIf the requested slice is equivalent to the current Iterable, then it\nwill return itself.",name:"slice",required:!0,type:{name:"(begin?: number, end?: number) => Iterable<string, any>"}},rest:{defaultValue:null,description:"Returns a new Iterable of the same type containing all entries except\nthe first.",name:"rest",required:!0,type:{name:"() => Iterable<string, any>"}},butLast:{defaultValue:null,description:"Returns a new Iterable of the same type containing all entries except\nthe last.",name:"butLast",required:!0,type:{name:"() => Iterable<string, any>"}},skip:{defaultValue:null,description:"Returns a new Iterable of the same type which excludes the first `amount`\nentries from this Iterable.",name:"skip",required:!0,type:{name:"(amount: number) => Iterable<string, any>"}},skipLast:{defaultValue:null,description:"Returns a new Iterable of the same type which excludes the last `amount`\nentries from this Iterable.",name:"skipLast",required:!0,type:{name:"(amount: number) => Iterable<string, any>"}},skipWhile:{defaultValue:null,description:"Returns a new Iterable of the same type which includes entries starting\nfrom when `predicate` first returns false.\n\n     Seq.of('dog','frog','cat','hat','god')\n       .skipWhile(x => x.match(/g/))\n     // Seq [ 'cat', 'hat', 'god' ]",name:"skipWhile",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => Iterable<string, any>"}},skipUntil:{defaultValue:null,description:"Returns a new Iterable of the same type which includes entries starting\nfrom when `predicate` first returns true.\n\n     Seq.of('dog','frog','cat','hat','god')\n       .skipUntil(x => x.match(/hat/))\n     // Seq [ 'hat', 'god' ]",name:"skipUntil",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => Iterable<string, any>"}},take:{defaultValue:null,description:"Returns a new Iterable of the same type which includes the first `amount`\nentries from this Iterable.",name:"take",required:!0,type:{name:"(amount: number) => Iterable<string, any>"}},takeLast:{defaultValue:null,description:"Returns a new Iterable of the same type which includes the last `amount`\nentries from this Iterable.",name:"takeLast",required:!0,type:{name:"(amount: number) => Iterable<string, any>"}},takeWhile:{defaultValue:null,description:"Returns a new Iterable of the same type which includes entries from this\nIterable as long as the `predicate` returns true.\n\n     Seq.of('dog','frog','cat','hat','god')\n       .takeWhile(x => x.match(/o/))\n     // Seq [ 'dog', 'frog' ]",name:"takeWhile",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => Iterable<string, any>"}},takeUntil:{defaultValue:null,description:"Returns a new Iterable of the same type which includes entries from this\nIterable as long as the `predicate` returns false.\n\n     Seq.of('dog','frog','cat','hat','god').takeUntil(x => x.match(/at/))\n     // ['dog', 'frog']",name:"takeUntil",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => Iterable<string, any>"}},concat:{defaultValue:null,description:"Returns a new Iterable of the same type with other values and\niterable-like concatenated to this one.\n\nFor Seqs, all entries will be present in\nthe resulting iterable, even if they have the same key.",name:"concat",required:!0,type:{name:"(...valuesOrIterables: any[]) => Iterable<string, any>"}},flatten:{defaultValue:null,description:"Flattens nested Iterables.\n\nWill deeply flatten the Iterable by default, returning an Iterable of the\nsame type, but a `depth` can be provided in the form of a number or\nboolean (where true means to shallowly flatten one level). A depth of 0\n(or shallow: false) will deeply flatten.\n\nFlattens only others Iterable, not Arrays or Objects.\n\nNote: `flatten(true)` operates on Iterable<any, Iterable<K, V>> and\nreturns Iterable<K, V>",name:"flatten",required:!0,type:{name:"{ (depth?: number): Iterable<any, any>; (shallow?: boolean): Iterable<any, any>; }"}},flatMap:{defaultValue:null,description:"Flat-maps the Iterable, returning an Iterable of the same type.\n\nSimilar to `iter.map(...).flatten(true)`.",name:"flatMap",required:!0,type:{name:"{ <MK, MV>(mapper: (value?: any, key?: string, iter?: Iterable<string, any>) => Iterable<MK, MV>, context?: any): Iterable<MK, MV>; <MK, MV>(mapper: (value?: any, key?: string, iter?: Iterable<...>) => any, context?: any): Iterable<...>; }"}},reduce:{defaultValue:null,description:"Reduces the Iterable to a value by calling the `reducer` for every entry\nin the Iterable and passing along the reduced value.\n\nIf `initialReduction` is not provided, or is null, the first item in the\nIterable will be used.\n@see `Array#reduce`.",name:"reduce",required:!0,type:{name:"<R>(reducer: (reduction?: R, value?: any, key?: string, iter?: Iterable<string, any>) => R, initialReduction?: R, context?: any) => R"}},reduceRight:{defaultValue:null,description:"Reduces the Iterable in reverse (from the right side).\n\nNote: Similar to this.reverse().reduce(), and provided for parity\nwith `Array#reduceRight`.",name:"reduceRight",required:!0,type:{name:"<R>(reducer: (reduction?: R, value?: any, key?: string, iter?: Iterable<string, any>) => R, initialReduction?: R, context?: any) => R"}},every:{defaultValue:null,description:"True if `predicate` returns true for all entries in the Iterable.",name:"every",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => boolean"}},some:{defaultValue:null,description:"True if `predicate` returns true for any entry in the Iterable.",name:"some",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => boolean"}},join:{defaultValue:null,description:'Joins values together as a string, inserting a separator between each.\nThe default separator is `","`.',name:"join",required:!0,type:{name:"(separator?: string) => string"}},isEmpty:{defaultValue:null,description:"Returns true if this Iterable includes no values.\n\nFor some lazy `Seq`, `isEmpty` might need to iterate to determine\nemptiness. At most one iteration will occur.",name:"isEmpty",required:!0,type:{name:"() => boolean"}},count:{defaultValue:null,description:"Returns the size of this Iterable.\n\nRegardless of if this Iterable can describe its size lazily (some Seqs\ncannot), this method will always return the correct size. E.g. it\nevaluates a lazy `Seq` if necessary.\n\nIf `predicate` is provided, then this returns the count of entries in the\nIterable for which the `predicate` returns true.",name:"count",required:!0,type:{name:"{ (): number; (predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any): number; }"}},countBy:{defaultValue:null,description:"Returns a `Seq.Keyed` of counts, grouped by the return value of\nthe `grouper` function.\n\nNote: This is not a lazy operation.",name:"countBy",required:!0,type:{name:"<G>(grouper: (value?: any, key?: string, iter?: Iterable<string, any>) => G, context?: any) => Map<G, number>"}},find:{defaultValue:null,description:"Returns the value for which the `predicate` returns true.",name:"find",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any, notSetValue?: any) => any"}},findLast:{defaultValue:null,description:"Returns the last value for which the `predicate` returns true.\n\nNote: `predicate` will be called for each entry in reverse.",name:"findLast",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any, notSetValue?: any) => any"}},findEntry:{defaultValue:null,description:"Returns the [key, value] entry for which the `predicate` returns true.",name:"findEntry",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any, notSetValue?: any) => any[]"}},findLastEntry:{defaultValue:null,description:"Returns the last [key, value] entry for which the `predicate`\nreturns true.\n\nNote: `predicate` will be called for each entry in reverse.",name:"findLastEntry",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any, notSetValue?: any) => any[]"}},max:{defaultValue:null,description:"Returns the maximum value in this collection. If any values are\ncomparatively equivalent, the first one found will be returned.\n\nThe `comparator` is used in the same way as `Iterable#sort`. If it is not\nprovided, the default comparator is `>`.\n\nWhen two values are considered equivalent, the first encountered will be\nreturned. Otherwise, `max` will operate independent of the order of input\nas long as the comparator is commutative. The default comparator `>` is\ncommutative *only* when types do not differ.\n\nIf `comparator` returns 0 and either value is NaN, undefined, or null,\nthat value will be returned.",name:"max",required:!0,type:{name:"(comparator?: (valueA: any, valueB: any) => number) => any"}},maxBy:{defaultValue:null,description:"Like `max`, but also accepts a `comparatorValueMapper` which allows for\ncomparing by more sophisticated means:\n\n     hitters.maxBy(hitter => hitter.avgHits);",name:"maxBy",required:!0,type:{name:"<C>(comparatorValueMapper: (value?: any, key?: string, iter?: Iterable<string, any>) => C, comparator?: (valueA: C, valueB: C) => number) => any"}},min:{defaultValue:null,description:"Returns the minimum value in this collection. If any values are\ncomparatively equivalent, the first one found will be returned.\n\nThe `comparator` is used in the same way as `Iterable#sort`. If it is not\nprovided, the default comparator is `<`.\n\nWhen two values are considered equivalent, the first encountered will be\nreturned. Otherwise, `min` will operate independent of the order of input\nas long as the comparator is commutative. The default comparator `<` is\ncommutative *only* when types do not differ.\n\nIf `comparator` returns 0 and either value is NaN, undefined, or null,\nthat value will be returned.",name:"min",required:!0,type:{name:"(comparator?: (valueA: any, valueB: any) => number) => any"}},minBy:{defaultValue:null,description:"Like `min`, but also accepts a `comparatorValueMapper` which allows for\ncomparing by more sophisticated means:\n\n     hitters.minBy(hitter => hitter.avgHits);",name:"minBy",required:!0,type:{name:"<C>(comparatorValueMapper: (value?: any, key?: string, iter?: Iterable<string, any>) => C, comparator?: (valueA: C, valueB: C) => number) => any"}},isSubset:{defaultValue:null,description:"True if `iter` includes every value in this Iterable.",name:"isSubset",required:!0,type:{name:"{ (iter: Iterable<any, any>): boolean; (iter: any[]): boolean; }"}},isSuperset:{defaultValue:null,description:"True if this Iterable includes every value in `iter`.",name:"isSuperset",required:!0,type:{name:"{ (iter: Iterable<any, any>): boolean; (iter: any[]): boolean; }"}},flip:{defaultValue:null,description:"Returns a new Iterable.Keyed of the same type where the keys and values\nhave been flipped.\n\n     Seq({ a: 'z', b: 'y' }).flip() // { z: 'a', y: 'b' }",name:"flip",required:!0,type:{name:"() => Keyed<any, string>"}},mapKeys:{defaultValue:null,description:"Returns a new Iterable.Keyed of the same type with keys passed through\na `mapper` function.\n\n     Seq({ a: 1, b: 2 })\n       .mapKeys(x => x.toUpperCase())\n     // Seq { A: 1, B: 2 }",name:"mapKeys",required:!0,type:{name:"<M>(mapper: (key?: string, value?: any, iter?: Keyed<string, any>) => M, context?: any) => Keyed<M, any>"}},mapEntries:{defaultValue:null,description:"Returns a new Iterable.Keyed of the same type with entries\n([key, value] tuples) passed through a `mapper` function.\n\n     Seq({ a: 1, b: 2 })\n       .mapEntries(([k, v]) => [k.toUpperCase(), v * 2])\n     // Seq { A: 2, B: 4 }",name:"mapEntries",required:!0,type:{name:"<KM, VM>(mapper: (entry?: any[], index?: number, iter?: Keyed<string, any>) => any[], context?: any) => Keyed<KM, VM>"}},keyOf:{defaultValue:null,description:"Returns the key associated with the search value, or undefined.",name:"keyOf",required:!0,type:{name:"(searchValue: any) => string"}},lastKeyOf:{defaultValue:null,description:"Returns the last key associated with the search value, or undefined.",name:"lastKeyOf",required:!0,type:{name:"(searchValue: any) => string"}},findKey:{defaultValue:null,description:"Returns the key for which the `predicate` returns true.",name:"findKey",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Keyed<string, any>) => boolean, context?: any) => string"}},findLastKey:{defaultValue:null,description:"Returns the last key for which the `predicate` returns true.\n\nNote: `predicate` will be called for each entry in reverse.",name:"findLastKey",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Keyed<string, any>) => boolean, context?: any) => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#createValueFromEditorState"]={docgenInfo:createValueFromEditorState.__docgenInfo,name:"createValueFromEditorState",path:"src/tools/index.ts#createValueFromEditorState"})}catch(__react_docgen_typescript_loader_error){}try{getRichTextBlockText.displayName="getRichTextBlockText",getRichTextBlockText.__docgenInfo={description:"",displayName:"getRichTextBlockText",props:{key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"string"}},fragments:{defaultValue:null,description:"",name:"fragments",required:!0,type:{name:"IFragment[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#getRichTextBlockText"]={docgenInfo:getRichTextBlockText.__docgenInfo,name:"getRichTextBlockText",path:"src/tools/index.ts#getRichTextBlockText"})}catch(__react_docgen_typescript_loader_error){}try{getRawInlineStyleRangesFromRichTextBlock.displayName="getRawInlineStyleRangesFromRichTextBlock",getRawInlineStyleRangesFromRichTextBlock.__docgenInfo={description:"",displayName:"getRawInlineStyleRangesFromRichTextBlock",props:{key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"string"}},fragments:{defaultValue:null,description:"",name:"fragments",required:!0,type:{name:"IFragment[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#getRawInlineStyleRangesFromRichTextBlock"]={docgenInfo:getRawInlineStyleRangesFromRichTextBlock.__docgenInfo,name:"getRawInlineStyleRangesFromRichTextBlock",path:"src/tools/index.ts#getRawInlineStyleRangesFromRichTextBlock"})}catch(__react_docgen_typescript_loader_error){}try{createRawContentBlockFromRichTextBlock.displayName="createRawContentBlockFromRichTextBlock",createRawContentBlockFromRichTextBlock.__docgenInfo={description:"",displayName:"createRawContentBlockFromRichTextBlock",props:{key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"string"}},fragments:{defaultValue:null,description:"",name:"fragments",required:!0,type:{name:"IFragment[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#createRawContentBlockFromRichTextBlock"]={docgenInfo:createRawContentBlockFromRichTextBlock.__docgenInfo,name:"createRawContentBlockFromRichTextBlock",path:"src/tools/index.ts#createRawContentBlockFromRichTextBlock"})}catch(__react_docgen_typescript_loader_error){}try{getRawContentStateFromRichText.displayName="getRawContentStateFromRichText",getRawContentStateFromRichText.__docgenInfo={description:"",displayName:"getRawContentStateFromRichText",props:{length:{defaultValue:null,description:"Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.",name:"length",required:!0,type:{name:"number"}},toString:{defaultValue:null,description:"Returns a string representation of an array.",name:"toString",required:!1,type:{name:"() => string"}},toLocaleString:{defaultValue:null,description:"Returns a string representation of an array. The elements are converted to string using their toLocalString methods.",name:"toLocaleString",required:!1,type:{name:"() => string"}},pop:{defaultValue:null,description:"Removes the last element from an array and returns it.",name:"pop",required:!0,type:{name:"() => IRichTextBlock"}},push:{defaultValue:null,description:"Appends new elements to an array, and returns the new length of the array.\n@param items New elements of the Array.",name:"push",required:!0,type:{name:"(...items: IRichTextBlock[]) => number"}},concat:{defaultValue:null,description:"Combines two or more arrays.\nCombines two or more arrays.\n@param items Additional items to add to the end of array1.\n@param items Additional items to add to the end of array1.",name:"concat",required:!0,type:{name:"{ (...items: ConcatArray<IRichTextBlock>[]): IRichTextBlock[]; (...items: (IRichTextBlock | ConcatArray<IRichTextBlock>)[]): IRichTextBlock[]; }"}},join:{defaultValue:null,description:"Adds all the elements of an array separated by the specified separator string.\n@param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.",name:"join",required:!0,type:{name:"(separator?: string) => string"}},reverse:{defaultValue:null,description:"Reverses the elements in an Array.",name:"reverse",required:!0,type:{name:"() => IRichTextBlock[]"}},shift:{defaultValue:null,description:"Removes the first element from an array and returns it.",name:"shift",required:!0,type:{name:"() => IRichTextBlock"}},slice:{defaultValue:null,description:"Returns a section of an array.\n@param start The beginning of the specified portion of the array.\n@param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => IRichTextBlock[]"}},sort:{defaultValue:null,description:"Sorts an array.\n@param compareFn Function used to determine the order of the elements. It is expected to return\ra negative value if first argument is less than second argument, zero if they're equal and a positive\rvalue otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\r```ts\r[11,2,22,1].sort((a, b) => a - b)\r```",name:"sort",required:!0,type:{name:"(compareFn?: (a: IRichTextBlock, b: IRichTextBlock) => number) => IRichTextValue"}},splice:{defaultValue:null,description:"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\nRemoves elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\n@param start The zero-based location in the array from which to start removing elements.\n@param deleteCount The number of elements to remove.\n@param start The zero-based location in the array from which to start removing elements.\n@param deleteCount The number of elements to remove.\n@param items Elements to insert into the array in place of the deleted elements.",name:"splice",required:!0,type:{name:"{ (start: number, deleteCount?: number): IRichTextBlock[]; (start: number, deleteCount: number, ...items: IRichTextBlock[]): IRichTextBlock[]; }"}},unshift:{defaultValue:null,description:"Inserts new elements at the start of an array.\n@param items Elements to insert at the start of the Array.",name:"unshift",required:!0,type:{name:"(...items: IRichTextBlock[]) => number"}},indexOf:{defaultValue:null,description:"Returns the index of the first occurrence of a value in an array.\n@param searchElement The value to locate in the array.\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.",name:"indexOf",required:!0,type:{name:"(searchElement: IRichTextBlock, fromIndex?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the index of the last occurrence of a specified value in an array.\n@param searchElement The value to locate in the array.\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.",name:"lastIndexOf",required:!0,type:{name:"(searchElement: IRichTextBlock, fromIndex?: number) => number"}},every:{defaultValue:null,description:"Determines whether all the members of an array satisfy the specified test.\n@param callbackfn A function that accepts up to three arguments. The every method calls\rthe callbackfn function for each element in the array until the callbackfn returns a value\rwhich is coercible to the Boolean value false, or until the end of the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.",name:"every",required:!0,type:{name:"(callbackfn: (value: IRichTextBlock, index: number, array: IRichTextBlock[]) => unknown, thisArg?: any) => boolean"}},some:{defaultValue:null,description:"Determines whether the specified callback function returns true for any element of an array.\n@param callbackfn A function that accepts up to three arguments. The some method calls\rthe callbackfn function for each element in the array until the callbackfn returns a value\rwhich is coercible to the Boolean value true, or until the end of the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.",name:"some",required:!0,type:{name:"(callbackfn: (value: IRichTextBlock, index: number, array: IRichTextBlock[]) => unknown, thisArg?: any) => boolean"}},forEach:{defaultValue:null,description:"Performs the specified action for each element in an array.\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"forEach",required:!0,type:{name:"(callbackfn: (value: IRichTextBlock, index: number, array: IRichTextBlock[]) => void, thisArg?: any) => void"}},map:{defaultValue:null,description:"Calls a defined callback function on each element of an array, and returns an array that contains the results.\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"map",required:!0,type:{name:"<U>(callbackfn: (value: IRichTextBlock, index: number, array: IRichTextBlock[]) => U, thisArg?: any) => U[]"}},filter:{defaultValue:null,description:"Returns the elements of an array that meet the condition specified in a callback function.\nReturns the elements of an array that meet the condition specified in a callback function.\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"filter",required:!0,type:{name:"{ <S extends IRichTextBlock>(callbackfn: (value: IRichTextBlock, index: number, array: IRichTextBlock[]) => value is S, thisArg?: any): S[]; (callbackfn: (value: IRichTextBlock, index: number, array: IRichTextBlock[]) => unknown, thisArg?: any): IRichTextBlock[]; }"}},reduce:{defaultValue:null,description:"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",name:"reduce",required:!0,type:{name:"{ (callbackfn: (previousValue: IRichTextBlock, currentValue: IRichTextBlock, currentIndex: number, array: IRichTextBlock[]) => IRichTextBlock): IRichTextBlock; (callbackfn: (previousValue: IRichTextBlock, currentValue: IRichTextBlock, currentIndex: number, array: IRichTextBlock[]) => IRichTextBlock, initialValue: IR..."}},reduceRight:{defaultValue:null,description:"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",name:"reduceRight",required:!0,type:{name:"{ (callbackfn: (previousValue: IRichTextBlock, currentValue: IRichTextBlock, currentIndex: number, array: IRichTextBlock[]) => IRichTextBlock): IRichTextBlock; (callbackfn: (previousValue: IRichTextBlock, currentValue: IRichTextBlock, currentIndex: number, array: IRichTextBlock[]) => IRichTextBlock, initialValue: IR..."}},find:{defaultValue:null,description:"Returns the value of the first element in the array where predicate is true, and undefined\notherwise.\n@param predicate find calls predicate once for each element of the array, in ascending\rorder, until it finds one where predicate returns true. If such an element is found, find\rimmediately returns that element value. Otherwise, find returns undefined.\n@param thisArg If provided, it will be used as the this value for each invocation of\rpredicate. If it is not provided, undefined is used instead.",name:"find",required:!0,type:{name:"{ <S extends IRichTextBlock>(predicate: (this: void, value: IRichTextBlock, index: number, obj: IRichTextBlock[]) => value is S, thisArg?: any): S; (predicate: (value: IRichTextBlock, index: number, obj: IRichTextBlock[]) => unknown, thisArg?: any): IRichTextBlock; }"}},findIndex:{defaultValue:null,description:"Returns the index of the first element in the array where predicate is true, and -1\notherwise.\n@param predicate find calls predicate once for each element of the array, in ascending\rorder, until it finds one where predicate returns true. If such an element is found,\rfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\n@param thisArg If provided, it will be used as the this value for each invocation of\rpredicate. If it is not provided, undefined is used instead.",name:"findIndex",required:!0,type:{name:"(predicate: (value: IRichTextBlock, index: number, obj: IRichTextBlock[]) => unknown, thisArg?: any) => number"}},fill:{defaultValue:null,description:"Returns the this object after filling the section identified by start and end with value\n@param value value to fill array section with\n@param start index to start filling the array at. If start is negative, it is treated as\rlength+start where length is the length of the array.\n@param end index to stop filling the array at. If end is negative, it is treated as\rlength+end.",name:"fill",required:!0,type:{name:"(value: IRichTextBlock, start?: number, end?: number) => IRichTextValue"}},copyWithin:{defaultValue:null,description:"Returns the this object after copying a section of the array identified by start and end\nto the same array starting at position target\n@param target If target is negative, it is treated as length+target where length is the\rlength of the array.\n@param start If start is negative, it is treated as length+start. If end is negative, it\ris treated as length+end.\n@param end If not specified, length of the this object is used as its default value.",name:"copyWithin",required:!0,type:{name:"(target: number, start: number, end?: number) => IRichTextValue"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<IRichTextBlock>"}},entries:{defaultValue:null,description:"Returns an iterable of key, value pairs for every entry in the array",name:"entries",required:!0,type:{name:"() => IterableIterator<[number, IRichTextBlock]>"}},keys:{defaultValue:null,description:"Returns an iterable of keys in the array",name:"keys",required:!0,type:{name:"() => IterableIterator<number>"}},values:{defaultValue:null,description:"Returns an iterable of values in the array",name:"values",required:!0,type:{name:"() => IterableIterator<IRichTextBlock>"}},"__@unscopables":{defaultValue:null,description:"Returns an object whose properties have the value 'true'\nwhen they will be absent when used in a 'with' statement.",name:"__@unscopables",required:!0,type:{name:"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }"}},includes:{defaultValue:null,description:"Determines whether an array includes a certain element, returning true or false as appropriate.\n@param searchElement The element to search for.\n@param fromIndex The position in this array at which to begin searching for searchElement.",name:"includes",required:!0,type:{name:"(searchElement: IRichTextBlock, fromIndex?: number) => boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#getRawContentStateFromRichText"]={docgenInfo:getRawContentStateFromRichText.__docgenInfo,name:"getRawContentStateFromRichText",path:"src/tools/index.ts#getRawContentStateFromRichText"})}catch(__react_docgen_typescript_loader_error){}try{createEditorStateFromRichText.displayName="createEditorStateFromRichText",createEditorStateFromRichText.__docgenInfo={description:"",displayName:"createEditorStateFromRichText",props:{length:{defaultValue:null,description:"Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.",name:"length",required:!0,type:{name:"number"}},toString:{defaultValue:null,description:"Returns a string representation of an array.",name:"toString",required:!1,type:{name:"() => string"}},toLocaleString:{defaultValue:null,description:"Returns a string representation of an array. The elements are converted to string using their toLocalString methods.",name:"toLocaleString",required:!1,type:{name:"() => string"}},pop:{defaultValue:null,description:"Removes the last element from an array and returns it.",name:"pop",required:!0,type:{name:"() => IRichTextBlock"}},push:{defaultValue:null,description:"Appends new elements to an array, and returns the new length of the array.\n@param items New elements of the Array.",name:"push",required:!0,type:{name:"(...items: IRichTextBlock[]) => number"}},concat:{defaultValue:null,description:"Combines two or more arrays.\nCombines two or more arrays.\n@param items Additional items to add to the end of array1.\n@param items Additional items to add to the end of array1.",name:"concat",required:!0,type:{name:"{ (...items: ConcatArray<IRichTextBlock>[]): IRichTextBlock[]; (...items: (IRichTextBlock | ConcatArray<IRichTextBlock>)[]): IRichTextBlock[]; }"}},join:{defaultValue:null,description:"Adds all the elements of an array separated by the specified separator string.\n@param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.",name:"join",required:!0,type:{name:"(separator?: string) => string"}},reverse:{defaultValue:null,description:"Reverses the elements in an Array.",name:"reverse",required:!0,type:{name:"() => IRichTextBlock[]"}},shift:{defaultValue:null,description:"Removes the first element from an array and returns it.",name:"shift",required:!0,type:{name:"() => IRichTextBlock"}},slice:{defaultValue:null,description:"Returns a section of an array.\n@param start The beginning of the specified portion of the array.\n@param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => IRichTextBlock[]"}},sort:{defaultValue:null,description:"Sorts an array.\n@param compareFn Function used to determine the order of the elements. It is expected to return\ra negative value if first argument is less than second argument, zero if they're equal and a positive\rvalue otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\r```ts\r[11,2,22,1].sort((a, b) => a - b)\r```",name:"sort",required:!0,type:{name:"(compareFn?: (a: IRichTextBlock, b: IRichTextBlock) => number) => IRichTextValue"}},splice:{defaultValue:null,description:"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\nRemoves elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\n@param start The zero-based location in the array from which to start removing elements.\n@param deleteCount The number of elements to remove.\n@param start The zero-based location in the array from which to start removing elements.\n@param deleteCount The number of elements to remove.\n@param items Elements to insert into the array in place of the deleted elements.",name:"splice",required:!0,type:{name:"{ (start: number, deleteCount?: number): IRichTextBlock[]; (start: number, deleteCount: number, ...items: IRichTextBlock[]): IRichTextBlock[]; }"}},unshift:{defaultValue:null,description:"Inserts new elements at the start of an array.\n@param items Elements to insert at the start of the Array.",name:"unshift",required:!0,type:{name:"(...items: IRichTextBlock[]) => number"}},indexOf:{defaultValue:null,description:"Returns the index of the first occurrence of a value in an array.\n@param searchElement The value to locate in the array.\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.",name:"indexOf",required:!0,type:{name:"(searchElement: IRichTextBlock, fromIndex?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the index of the last occurrence of a specified value in an array.\n@param searchElement The value to locate in the array.\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.",name:"lastIndexOf",required:!0,type:{name:"(searchElement: IRichTextBlock, fromIndex?: number) => number"}},every:{defaultValue:null,description:"Determines whether all the members of an array satisfy the specified test.\n@param callbackfn A function that accepts up to three arguments. The every method calls\rthe callbackfn function for each element in the array until the callbackfn returns a value\rwhich is coercible to the Boolean value false, or until the end of the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.",name:"every",required:!0,type:{name:"(callbackfn: (value: IRichTextBlock, index: number, array: IRichTextBlock[]) => unknown, thisArg?: any) => boolean"}},some:{defaultValue:null,description:"Determines whether the specified callback function returns true for any element of an array.\n@param callbackfn A function that accepts up to three arguments. The some method calls\rthe callbackfn function for each element in the array until the callbackfn returns a value\rwhich is coercible to the Boolean value true, or until the end of the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.",name:"some",required:!0,type:{name:"(callbackfn: (value: IRichTextBlock, index: number, array: IRichTextBlock[]) => unknown, thisArg?: any) => boolean"}},forEach:{defaultValue:null,description:"Performs the specified action for each element in an array.\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"forEach",required:!0,type:{name:"(callbackfn: (value: IRichTextBlock, index: number, array: IRichTextBlock[]) => void, thisArg?: any) => void"}},map:{defaultValue:null,description:"Calls a defined callback function on each element of an array, and returns an array that contains the results.\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"map",required:!0,type:{name:"<U>(callbackfn: (value: IRichTextBlock, index: number, array: IRichTextBlock[]) => U, thisArg?: any) => U[]"}},filter:{defaultValue:null,description:"Returns the elements of an array that meet the condition specified in a callback function.\nReturns the elements of an array that meet the condition specified in a callback function.\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"filter",required:!0,type:{name:"{ <S extends IRichTextBlock>(callbackfn: (value: IRichTextBlock, index: number, array: IRichTextBlock[]) => value is S, thisArg?: any): S[]; (callbackfn: (value: IRichTextBlock, index: number, array: IRichTextBlock[]) => unknown, thisArg?: any): IRichTextBlock[]; }"}},reduce:{defaultValue:null,description:"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",name:"reduce",required:!0,type:{name:"{ (callbackfn: (previousValue: IRichTextBlock, currentValue: IRichTextBlock, currentIndex: number, array: IRichTextBlock[]) => IRichTextBlock): IRichTextBlock; (callbackfn: (previousValue: IRichTextBlock, currentValue: IRichTextBlock, currentIndex: number, array: IRichTextBlock[]) => IRichTextBlock, initialValue: IR..."}},reduceRight:{defaultValue:null,description:"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",name:"reduceRight",required:!0,type:{name:"{ (callbackfn: (previousValue: IRichTextBlock, currentValue: IRichTextBlock, currentIndex: number, array: IRichTextBlock[]) => IRichTextBlock): IRichTextBlock; (callbackfn: (previousValue: IRichTextBlock, currentValue: IRichTextBlock, currentIndex: number, array: IRichTextBlock[]) => IRichTextBlock, initialValue: IR..."}},find:{defaultValue:null,description:"Returns the value of the first element in the array where predicate is true, and undefined\notherwise.\n@param predicate find calls predicate once for each element of the array, in ascending\rorder, until it finds one where predicate returns true. If such an element is found, find\rimmediately returns that element value. Otherwise, find returns undefined.\n@param thisArg If provided, it will be used as the this value for each invocation of\rpredicate. If it is not provided, undefined is used instead.",name:"find",required:!0,type:{name:"{ <S extends IRichTextBlock>(predicate: (this: void, value: IRichTextBlock, index: number, obj: IRichTextBlock[]) => value is S, thisArg?: any): S; (predicate: (value: IRichTextBlock, index: number, obj: IRichTextBlock[]) => unknown, thisArg?: any): IRichTextBlock; }"}},findIndex:{defaultValue:null,description:"Returns the index of the first element in the array where predicate is true, and -1\notherwise.\n@param predicate find calls predicate once for each element of the array, in ascending\rorder, until it finds one where predicate returns true. If such an element is found,\rfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\n@param thisArg If provided, it will be used as the this value for each invocation of\rpredicate. If it is not provided, undefined is used instead.",name:"findIndex",required:!0,type:{name:"(predicate: (value: IRichTextBlock, index: number, obj: IRichTextBlock[]) => unknown, thisArg?: any) => number"}},fill:{defaultValue:null,description:"Returns the this object after filling the section identified by start and end with value\n@param value value to fill array section with\n@param start index to start filling the array at. If start is negative, it is treated as\rlength+start where length is the length of the array.\n@param end index to stop filling the array at. If end is negative, it is treated as\rlength+end.",name:"fill",required:!0,type:{name:"(value: IRichTextBlock, start?: number, end?: number) => IRichTextValue"}},copyWithin:{defaultValue:null,description:"Returns the this object after copying a section of the array identified by start and end\nto the same array starting at position target\n@param target If target is negative, it is treated as length+target where length is the\rlength of the array.\n@param start If start is negative, it is treated as length+start. If end is negative, it\ris treated as length+end.\n@param end If not specified, length of the this object is used as its default value.",name:"copyWithin",required:!0,type:{name:"(target: number, start: number, end?: number) => IRichTextValue"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<IRichTextBlock>"}},entries:{defaultValue:null,description:"Returns an iterable of key, value pairs for every entry in the array",name:"entries",required:!0,type:{name:"() => IterableIterator<[number, IRichTextBlock]>"}},keys:{defaultValue:null,description:"Returns an iterable of keys in the array",name:"keys",required:!0,type:{name:"() => IterableIterator<number>"}},values:{defaultValue:null,description:"Returns an iterable of values in the array",name:"values",required:!0,type:{name:"() => IterableIterator<IRichTextBlock>"}},"__@unscopables":{defaultValue:null,description:"Returns an object whose properties have the value 'true'\nwhen they will be absent when used in a 'with' statement.",name:"__@unscopables",required:!0,type:{name:"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }"}},includes:{defaultValue:null,description:"Determines whether an array includes a certain element, returning true or false as appropriate.\n@param searchElement The element to search for.\n@param fromIndex The position in this array at which to begin searching for searchElement.",name:"includes",required:!0,type:{name:"(searchElement: IRichTextBlock, fromIndex?: number) => boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#createEditorStateFromRichText"]={docgenInfo:createEditorStateFromRichText.__docgenInfo,name:"createEditorStateFromRichText",path:"src/tools/index.ts#createEditorStateFromRichText"})}catch(__react_docgen_typescript_loader_error){}try{createEditorStateFromText.displayName="createEditorStateFromText",createEditorStateFromText.__docgenInfo={description:"",displayName:"createEditorStateFromText",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string or an object that supports being matched against, and returns an array\ncontaining the results of that search, or null if no matches are found.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { ...; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substring: string, ...args: any[]) => string): string; }"}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"(locales?: string | string[]) => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"(locales?: string | string[]) => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#createEditorStateFromText"]={docgenInfo:createEditorStateFromText.__docgenInfo,name:"createEditorStateFromText",path:"src/tools/index.ts#createEditorStateFromText"})}catch(__react_docgen_typescript_loader_error){}try{isFloat.displayName="isFloat",isFloat.__docgenInfo={description:"",displayName:"isFloat",props:{toString:{defaultValue:null,description:"Returns a string representation of an object.\n@param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.",name:"toString",required:!1,type:{name:"(radix?: number) => string"}},toFixed:{defaultValue:null,description:"Returns a string representing a number in fixed-point notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toFixed",required:!0,type:{name:"(fractionDigits?: number) => string"}},toExponential:{defaultValue:null,description:"Returns a string containing a number represented in exponential notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toExponential",required:!0,type:{name:"(fractionDigits?: number) => string"}},toPrecision:{defaultValue:null,description:"Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.\n@param precision Number of significant digits. Must be in the range 1 - 21, inclusive.",name:"toPrecision",required:!0,type:{name:"(precision?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => number"}},toLocaleString:{defaultValue:null,description:"Converts a number to a string by using the current or specified locale.\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n@param options An object that contains one or more properties that specify comparison options.",name:"toLocaleString",required:!1,type:{name:"(locales?: string | string[], options?: NumberFormatOptions) => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#isFloat"]={docgenInfo:isFloat.__docgenInfo,name:"isFloat",path:"src/tools/index.ts#isFloat"})}catch(__react_docgen_typescript_loader_error){}try{isInteger.displayName="isInteger",isInteger.__docgenInfo={description:"",displayName:"isInteger",props:{toString:{defaultValue:null,description:"Returns a string representation of an object.\n@param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.",name:"toString",required:!1,type:{name:"(radix?: number) => string"}},toFixed:{defaultValue:null,description:"Returns a string representing a number in fixed-point notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toFixed",required:!0,type:{name:"(fractionDigits?: number) => string"}},toExponential:{defaultValue:null,description:"Returns a string containing a number represented in exponential notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toExponential",required:!0,type:{name:"(fractionDigits?: number) => string"}},toPrecision:{defaultValue:null,description:"Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.\n@param precision Number of significant digits. Must be in the range 1 - 21, inclusive.",name:"toPrecision",required:!0,type:{name:"(precision?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => number"}},toLocaleString:{defaultValue:null,description:"Converts a number to a string by using the current or specified locale.\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n@param options An object that contains one or more properties that specify comparison options.",name:"toLocaleString",required:!1,type:{name:"(locales?: string | string[], options?: NumberFormatOptions) => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/index.ts#isInteger"]={docgenInfo:isInteger.__docgenInfo,name:"isInteger",path:"src/tools/index.ts#isInteger"})}catch(__react_docgen_typescript_loader_error){}},174:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return getEntireSuperArea}));var clone_deep__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(112),clone_deep__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(clone_deep__WEBPACK_IMPORTED_MODULE_0__),_area__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(42),_redux_tools_merge__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(63),changeAreaToSuperAreaInPlace=function changeAreaToSuperAreaInPlace(mergeArea,newArea){var start=mergeArea.start,end=mergeArea.end;newArea.start.x<newArea.end.x?(start.x<newArea.start.x&&(newArea.start.x=start.x),end.x>newArea.end.x&&(newArea.end.x=end.x)):(start.x<newArea.end.x&&(newArea.end.x=start.x),end.x>newArea.start.x&&(newArea.start.x=end.x)),newArea.start.y<newArea.end.y?(start.y<newArea.start.y&&(newArea.start.y=start.y),end.y>newArea.end.y&&(newArea.end.y=end.y)):(start.y<newArea.end.y&&(newArea.end.y=start.y),end.y>newArea.start.y&&(newArea.start.y=end.y))},getPartialSuperAreaFromColumnRange=function getPartialSuperAreaFromColumnRange(xRange,area,row,data){for(var newArea=clone_deep__WEBPACK_IMPORTED_MODULE_0___default()(area),rowData=data[row],column=xRange.start;column<=xRange.end;column+=1){var cellData=rowData[column];cellData&&cellData.merged&&changeAreaToSuperAreaInPlace(Object(_redux_tools_merge__WEBPACK_IMPORTED_MODULE_2__.a)(data,cellData.merged),newArea)}return newArea},getPartialSuperAreaFromRowRange=function getPartialSuperAreaFromRowRange(yRange,area,column,data){for(var newArea=clone_deep__WEBPACK_IMPORTED_MODULE_0___default()(area),row=yRange.start;row<=yRange.end;row+=1){var rowData=data[row];if(rowData&&rowData[column]){var cellData=rowData[column];cellData.merged&&changeAreaToSuperAreaInPlace(Object(_redux_tools_merge__WEBPACK_IMPORTED_MODULE_2__.a)(data,cellData.merged),newArea)}}return newArea},getPartialSuperAreaFromArea=function getPartialSuperAreaFromArea(area,data){var start=area.start,end=area.end,newArea=clone_deep__WEBPACK_IMPORTED_MODULE_0___default()(area),top=data[start.y],bottom=data[end.y],horizontalRange={start:Math.min(newArea.start.x,newArea.end.x),end:Math.max(newArea.start.x,newArea.end.x)},verticalContainedRange={start:Math.min(newArea.start.y,newArea.end.y)+1,end:Math.max(newArea.start.y,newArea.end.y)-1};return top&&(newArea=getPartialSuperAreaFromColumnRange(horizontalRange,newArea,start.y,data)),bottom&&start.y!==end.y&&(newArea=getPartialSuperAreaFromColumnRange(horizontalRange,newArea,end.y,data)),newArea=getPartialSuperAreaFromRowRange(verticalContainedRange,newArea,start.x,data),start.x!==end.x&&(newArea=getPartialSuperAreaFromRowRange(verticalContainedRange,newArea,end.x,data)),newArea},getEntireSuperArea=function getEntireSuperArea(orderedArea,data){for(var subArea=clone_deep__WEBPACK_IMPORTED_MODULE_0___default()(orderedArea),superArea=getPartialSuperAreaFromArea(subArea,data);!Object(_area__WEBPACK_IMPORTED_MODULE_1__.a)(superArea,subArea);)subArea=superArea,superArea=getPartialSuperAreaFromArea(superArea,data);return superArea};try{getEntireSuperArea.displayName="getEntireSuperArea",getEntireSuperArea.__docgenInfo={description:"Gets the maximum area which contains the overlapping area expansion, starting from ordered area.\n\nOrdered area represents an area which is ordered: start represents min values, end represents max values",displayName:"getEntireSuperArea",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/merge.ts#getEntireSuperArea"]={docgenInfo:getEntireSuperArea.__docgenInfo,name:"getEntireSuperArea",path:"src/tools/merge.ts#getEntireSuperArea"})}catch(__react_docgen_typescript_loader_error){}},179:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"c",(function(){return computeSelectionAreaBottomRightStyle})),__webpack_require__.d(__webpack_exports__,"a",(function(){return checkIsActiveCellInBottomRightPane})),__webpack_require__.d(__webpack_exports__,"b",(function(){return checkIsAreaInBottomRightPane}));var _constants_styles__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(5),_dimensions__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(26),computeSelectionAreaBottomRightStyle=function computeSelectionAreaBottomRightStyle(columnWidths,columnOffsets,rowHeights,rowOffsets,freezeColumnCount,freezeRowCount,selectionArea){if(!selectionArea)return{};var selectionAreaWidth,selectionAreaHeight,left,top,start=selectionArea.start,end=selectionArea.end,customSelectionStyle={borderBottomWidth:_constants_styles__WEBPACK_IMPORTED_MODULE_0__.l,borderBottomColor:_constants_styles__WEBPACK_IMPORTED_MODULE_0__.j,borderBottomStyle:_constants_styles__WEBPACK_IMPORTED_MODULE_0__.k,borderRightWidth:_constants_styles__WEBPACK_IMPORTED_MODULE_0__.l,borderRightColor:_constants_styles__WEBPACK_IMPORTED_MODULE_0__.j,borderRightStyle:_constants_styles__WEBPACK_IMPORTED_MODULE_0__.k},topStart=rowOffsets[start.y],leftStart=columnOffsets[start.x],widthStart=Object(_dimensions__WEBPACK_IMPORTED_MODULE_1__.m)(start.x,columnWidths),heightStart=Object(_dimensions__WEBPACK_IMPORTED_MODULE_1__.o)(start.y,rowHeights),topEnd=rowOffsets[end.y],leftEnd=columnOffsets[end.x],widthEnd=Object(_dimensions__WEBPACK_IMPORTED_MODULE_1__.m)(end.x,columnWidths),heightEnd=Object(_dimensions__WEBPACK_IMPORTED_MODULE_1__.o)(end.y,rowHeights),topFrozenEnd=rowOffsets[freezeRowCount],leftFrozenEnd=columnOffsets[freezeColumnCount],widthFrozenEnd=Object(_dimensions__WEBPACK_IMPORTED_MODULE_1__.m)(freezeColumnCount,columnWidths),heightFrozenEnd=Object(_dimensions__WEBPACK_IMPORTED_MODULE_1__.o)(freezeRowCount,rowHeights);return freezeColumnCount&&(start.x<=freezeColumnCount||end.x<=freezeColumnCount)?(left=leftFrozenEnd+widthFrozenEnd,selectionAreaWidth=start.x<=end.x?leftEnd+widthEnd-left:leftStart+widthStart-left):(start.x<=end.x?(selectionAreaWidth=leftEnd+widthEnd-leftStart,left=leftStart):(selectionAreaWidth=leftStart+widthStart-leftEnd,left=leftEnd),customSelectionStyle.borderLeftWidth=_constants_styles__WEBPACK_IMPORTED_MODULE_0__.l,customSelectionStyle.borderLeftColor=_constants_styles__WEBPACK_IMPORTED_MODULE_0__.j,customSelectionStyle.borderLeftStyle=_constants_styles__WEBPACK_IMPORTED_MODULE_0__.k),freezeRowCount&&(start.y<=freezeRowCount||end.y<=freezeRowCount)?(top=topFrozenEnd+heightFrozenEnd,selectionAreaHeight=start.y<=end.y?topEnd+heightEnd-top:topStart+heightStart-top):(start.y<=end.y?(selectionAreaHeight=topEnd+heightEnd-topStart,top=topStart):(selectionAreaHeight=topStart+heightStart-topEnd,top=topEnd),customSelectionStyle.borderTopWidth=_constants_styles__WEBPACK_IMPORTED_MODULE_0__.l,customSelectionStyle.borderTopColor=_constants_styles__WEBPACK_IMPORTED_MODULE_0__.j,customSelectionStyle.borderTopStyle=_constants_styles__WEBPACK_IMPORTED_MODULE_0__.k),customSelectionStyle.left=left,customSelectionStyle.top=top,customSelectionStyle.width=selectionAreaWidth,customSelectionStyle.height=selectionAreaHeight,customSelectionStyle},checkIsActiveCellInBottomRightPane=function checkIsActiveCellInBottomRightPane(position,freezeColumnCount,freezeRowCount){return position.x>freezeColumnCount&&position.y>freezeRowCount},checkIsAreaInBottomRightPane=function checkIsAreaInBottomRightPane(freezeColumnCount,freezeRowCount,area){return(area.start.x>freezeColumnCount||area.end.x>freezeColumnCount)&&(area.start.y>freezeRowCount||area.end.y>freezeRowCount)}},207:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return getTableColumnCount})),__webpack_require__.d(__webpack_exports__,"b",(function(){return getTableRowCount}));var _constants_defaults__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(23),getTableColumnCount=function getTableColumnCount(columnCount){return Math.max(_constants_defaults__WEBPACK_IMPORTED_MODULE_0__.k,columnCount)},getTableRowCount=function getTableRowCount(rowCount){return Math.max(_constants_defaults__WEBPACK_IMPORTED_MODULE_0__.l,rowCount)};try{getTableColumnCount.displayName="getTableColumnCount",getTableColumnCount.__docgenInfo={description:"",displayName:"getTableColumnCount",props:{toString:{defaultValue:null,description:"Returns a string representation of an object.\n@param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.",name:"toString",required:!1,type:{name:"(radix?: number) => string"}},toFixed:{defaultValue:null,description:"Returns a string representing a number in fixed-point notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toFixed",required:!0,type:{name:"(fractionDigits?: number) => string"}},toExponential:{defaultValue:null,description:"Returns a string containing a number represented in exponential notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toExponential",required:!0,type:{name:"(fractionDigits?: number) => string"}},toPrecision:{defaultValue:null,description:"Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.\n@param precision Number of significant digits. Must be in the range 1 - 21, inclusive.",name:"toPrecision",required:!0,type:{name:"(precision?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => number"}},toLocaleString:{defaultValue:null,description:"Converts a number to a string by using the current or specified locale.\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n@param options An object that contains one or more properties that specify comparison options.",name:"toLocaleString",required:!1,type:{name:"(locales?: string | string[], options?: NumberFormatOptions) => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/table.ts#getTableColumnCount"]={docgenInfo:getTableColumnCount.__docgenInfo,name:"getTableColumnCount",path:"src/tools/table.ts#getTableColumnCount"})}catch(__react_docgen_typescript_loader_error){}try{getTableRowCount.displayName="getTableRowCount",getTableRowCount.__docgenInfo={description:"",displayName:"getTableRowCount",props:{toString:{defaultValue:null,description:"Returns a string representation of an object.\n@param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.",name:"toString",required:!1,type:{name:"(radix?: number) => string"}},toFixed:{defaultValue:null,description:"Returns a string representing a number in fixed-point notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toFixed",required:!0,type:{name:"(fractionDigits?: number) => string"}},toExponential:{defaultValue:null,description:"Returns a string containing a number represented in exponential notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toExponential",required:!0,type:{name:"(fractionDigits?: number) => string"}},toPrecision:{defaultValue:null,description:"Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.\n@param precision Number of significant digits. Must be in the range 1 - 21, inclusive.",name:"toPrecision",required:!0,type:{name:"(precision?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => number"}},toLocaleString:{defaultValue:null,description:"Converts a number to a string by using the current or specified locale.\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n@param options An object that contains one or more properties that specify comparison options.",name:"toLocaleString",required:!1,type:{name:"(locales?: string | string[], options?: NumberFormatOptions) => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/table.ts#getTableRowCount"]={docgenInfo:getTableRowCount.__docgenInfo,name:"getTableRowCount",path:"src/tools/table.ts#getTableRowCount"})}catch(__react_docgen_typescript_loader_error){}},208:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return getElementaryRanges})),__webpack_require__.d(__webpack_exports__,"b",(function(){return mergeRanges}));__webpack_require__(124),__webpack_require__(52),__webpack_require__(87),__webpack_require__(446),__webpack_require__(41),__webpack_require__(53);var __assign=function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},getElementaryRanges=function getElementaryRanges(ranges,length){var points=[];if(ranges.length){var first=ranges[0];first.start&&ranges.push({start:0,end:first.end-1})}ranges.forEach((function(range){points.push({start:range.start,end:1}),points.push({start:range.end+1,end:-1})}));var count=0,prev=null,result=points.sort((function(a,b){return a.start-b.start})).map((function(x){var ret=null!==prev&&x.start>prev&&0!==count?{start:prev,end:x.start-1}:null;return prev=x.start,count+=x.end,ret})).filter((function(x){return!!x}));if(result.length){var last=result[result.length-1];last.end!==length-1&&result.push({start:last.end+1,end:length-1})}for(var searchCap=result.length,previousEnd=-1,i=0;i<searchCap;i+=1){var range=result[i];range.start!==previousEnd+1&&result.push({start:previousEnd+1,end:range.start-1}),previousEnd=range.end}return result.length||result.push({start:0,end:length-1}),result.sort((function(a,b){return a.start-b.start}))},mergeRanges=function mergeRanges(ranges){var mergedRanges=[];return ranges.forEach((function(range){!mergedRanges.length||mergedRanges[mergedRanges.length-1].end<range.start?mergedRanges.push(__assign({},range)):mergedRanges[mergedRanges.length-1].end=Math.max(mergedRanges[mergedRanges.length-1].end,range.end)})),mergedRanges};try{mergeRanges.displayName="mergeRanges",mergeRanges.__docgenInfo={description:"",displayName:"mergeRanges",props:{length:{defaultValue:null,description:"Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.",name:"length",required:!0,type:{name:"number"}},toString:{defaultValue:null,description:"Returns a string representation of an array.",name:"toString",required:!1,type:{name:"() => string"}},toLocaleString:{defaultValue:null,description:"Returns a string representation of an array. The elements are converted to string using their toLocalString methods.",name:"toLocaleString",required:!1,type:{name:"() => string"}},pop:{defaultValue:null,description:"Removes the last element from an array and returns it.",name:"pop",required:!0,type:{name:"() => IRange"}},push:{defaultValue:null,description:"Appends new elements to an array, and returns the new length of the array.\n@param items New elements of the Array.",name:"push",required:!0,type:{name:"(...items: IRange[]) => number"}},concat:{defaultValue:null,description:"Combines two or more arrays.\nCombines two or more arrays.\n@param items Additional items to add to the end of array1.\n@param items Additional items to add to the end of array1.",name:"concat",required:!0,type:{name:"{ (...items: ConcatArray<IRange>[]): IRange[]; (...items: (IRange | ConcatArray<IRange>)[]): IRange[]; }"}},join:{defaultValue:null,description:"Adds all the elements of an array separated by the specified separator string.\n@param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.",name:"join",required:!0,type:{name:"(separator?: string) => string"}},reverse:{defaultValue:null,description:"Reverses the elements in an Array.",name:"reverse",required:!0,type:{name:"() => IRange[]"}},shift:{defaultValue:null,description:"Removes the first element from an array and returns it.",name:"shift",required:!0,type:{name:"() => IRange"}},slice:{defaultValue:null,description:"Returns a section of an array.\n@param start The beginning of the specified portion of the array.\n@param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => IRange[]"}},sort:{defaultValue:null,description:"Sorts an array.\n@param compareFn Function used to determine the order of the elements. It is expected to return\ra negative value if first argument is less than second argument, zero if they're equal and a positive\rvalue otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\r```ts\r[11,2,22,1].sort((a, b) => a - b)\r```",name:"sort",required:!0,type:{name:"(compareFn?: (a: IRange, b: IRange) => number) => IRange[]"}},splice:{defaultValue:null,description:"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\nRemoves elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\n@param start The zero-based location in the array from which to start removing elements.\n@param deleteCount The number of elements to remove.\n@param start The zero-based location in the array from which to start removing elements.\n@param deleteCount The number of elements to remove.\n@param items Elements to insert into the array in place of the deleted elements.",name:"splice",required:!0,type:{name:"{ (start: number, deleteCount?: number): IRange[]; (start: number, deleteCount: number, ...items: IRange[]): IRange[]; }"}},unshift:{defaultValue:null,description:"Inserts new elements at the start of an array.\n@param items Elements to insert at the start of the Array.",name:"unshift",required:!0,type:{name:"(...items: IRange[]) => number"}},indexOf:{defaultValue:null,description:"Returns the index of the first occurrence of a value in an array.\n@param searchElement The value to locate in the array.\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.",name:"indexOf",required:!0,type:{name:"(searchElement: IRange, fromIndex?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the index of the last occurrence of a specified value in an array.\n@param searchElement The value to locate in the array.\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.",name:"lastIndexOf",required:!0,type:{name:"(searchElement: IRange, fromIndex?: number) => number"}},every:{defaultValue:null,description:"Determines whether all the members of an array satisfy the specified test.\n@param callbackfn A function that accepts up to three arguments. The every method calls\rthe callbackfn function for each element in the array until the callbackfn returns a value\rwhich is coercible to the Boolean value false, or until the end of the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.",name:"every",required:!0,type:{name:"(callbackfn: (value: IRange, index: number, array: IRange[]) => unknown, thisArg?: any) => boolean"}},some:{defaultValue:null,description:"Determines whether the specified callback function returns true for any element of an array.\n@param callbackfn A function that accepts up to three arguments. The some method calls\rthe callbackfn function for each element in the array until the callbackfn returns a value\rwhich is coercible to the Boolean value true, or until the end of the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.",name:"some",required:!0,type:{name:"(callbackfn: (value: IRange, index: number, array: IRange[]) => unknown, thisArg?: any) => boolean"}},forEach:{defaultValue:null,description:"Performs the specified action for each element in an array.\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"forEach",required:!0,type:{name:"(callbackfn: (value: IRange, index: number, array: IRange[]) => void, thisArg?: any) => void"}},map:{defaultValue:null,description:"Calls a defined callback function on each element of an array, and returns an array that contains the results.\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"map",required:!0,type:{name:"<U>(callbackfn: (value: IRange, index: number, array: IRange[]) => U, thisArg?: any) => U[]"}},filter:{defaultValue:null,description:"Returns the elements of an array that meet the condition specified in a callback function.\nReturns the elements of an array that meet the condition specified in a callback function.\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"filter",required:!0,type:{name:"{ <S extends IRange>(callbackfn: (value: IRange, index: number, array: IRange[]) => value is S, thisArg?: any): S[]; (callbackfn: (value: IRange, index: number, array: IRange[]) => unknown, thisArg?: any): IRange[]; }"}},reduce:{defaultValue:null,description:"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",name:"reduce",required:!0,type:{name:"{ (callbackfn: (previousValue: IRange, currentValue: IRange, currentIndex: number, array: IRange[]) => IRange): IRange; (callbackfn: (previousValue: IRange, currentValue: IRange, currentIndex: number, array: IRange[]) => IRange, initialValue: IRange): IRange; <U>(callbackfn: (previousValue: U, currentValue: IRange, ..."}},reduceRight:{defaultValue:null,description:"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",name:"reduceRight",required:!0,type:{name:"{ (callbackfn: (previousValue: IRange, currentValue: IRange, currentIndex: number, array: IRange[]) => IRange): IRange; (callbackfn: (previousValue: IRange, currentValue: IRange, currentIndex: number, array: IRange[]) => IRange, initialValue: IRange): IRange; <U>(callbackfn: (previousValue: U, currentValue: IRange, ..."}},find:{defaultValue:null,description:"Returns the value of the first element in the array where predicate is true, and undefined\notherwise.\n@param predicate find calls predicate once for each element of the array, in ascending\rorder, until it finds one where predicate returns true. If such an element is found, find\rimmediately returns that element value. Otherwise, find returns undefined.\n@param thisArg If provided, it will be used as the this value for each invocation of\rpredicate. If it is not provided, undefined is used instead.",name:"find",required:!0,type:{name:"{ <S extends IRange>(predicate: (this: void, value: IRange, index: number, obj: IRange[]) => value is S, thisArg?: any): S; (predicate: (value: IRange, index: number, obj: IRange[]) => unknown, thisArg?: any): IRange; }"}},findIndex:{defaultValue:null,description:"Returns the index of the first element in the array where predicate is true, and -1\notherwise.\n@param predicate find calls predicate once for each element of the array, in ascending\rorder, until it finds one where predicate returns true. If such an element is found,\rfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\n@param thisArg If provided, it will be used as the this value for each invocation of\rpredicate. If it is not provided, undefined is used instead.",name:"findIndex",required:!0,type:{name:"(predicate: (value: IRange, index: number, obj: IRange[]) => unknown, thisArg?: any) => number"}},fill:{defaultValue:null,description:"Returns the this object after filling the section identified by start and end with value\n@param value value to fill array section with\n@param start index to start filling the array at. If start is negative, it is treated as\rlength+start where length is the length of the array.\n@param end index to stop filling the array at. If end is negative, it is treated as\rlength+end.",name:"fill",required:!0,type:{name:"(value: IRange, start?: number, end?: number) => IRange[]"}},copyWithin:{defaultValue:null,description:"Returns the this object after copying a section of the array identified by start and end\nto the same array starting at position target\n@param target If target is negative, it is treated as length+target where length is the\rlength of the array.\n@param start If start is negative, it is treated as length+start. If end is negative, it\ris treated as length+end.\n@param end If not specified, length of the this object is used as its default value.",name:"copyWithin",required:!0,type:{name:"(target: number, start: number, end?: number) => IRange[]"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<IRange>"}},entries:{defaultValue:null,description:"Returns an iterable of key, value pairs for every entry in the array",name:"entries",required:!0,type:{name:"() => IterableIterator<[number, IRange]>"}},keys:{defaultValue:null,description:"Returns an iterable of keys in the array",name:"keys",required:!0,type:{name:"() => IterableIterator<number>"}},values:{defaultValue:null,description:"Returns an iterable of values in the array",name:"values",required:!0,type:{name:"() => IterableIterator<IRange>"}},"__@unscopables":{defaultValue:null,description:"Returns an object whose properties have the value 'true'\nwhen they will be absent when used in a 'with' statement.",name:"__@unscopables",required:!0,type:{name:"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }"}},includes:{defaultValue:null,description:"Determines whether an array includes a certain element, returning true or false as appropriate.\n@param searchElement The element to search for.\n@param fromIndex The position in this array at which to begin searching for searchElement.",name:"includes",required:!0,type:{name:"(searchElement: IRange, fromIndex?: number) => boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/range.ts#mergeRanges"]={docgenInfo:mergeRanges.__docgenInfo,name:"mergeRanges",path:"src/tools/range.ts#mergeRanges"})}catch(__react_docgen_typescript_loader_error){}},26:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"n",(function(){return normalizeRowHeight})),__webpack_require__.d(__webpack_exports__,"l",(function(){return normalizeColumnWidth})),__webpack_require__.d(__webpack_exports__,"b",(function(){return denormalizeRowHeight})),__webpack_require__.d(__webpack_exports__,"a",(function(){return denormalizeColumnWidth})),__webpack_require__.d(__webpack_exports__,"o",(function(){return normalizeRowHeightFromArray})),__webpack_require__.d(__webpack_exports__,"m",(function(){return normalizeColumnWidthFromArray})),__webpack_require__.d(__webpack_exports__,"d",(function(){return getColumnOffsets})),__webpack_require__.d(__webpack_exports__,"f",(function(){return getRowOffsets})),__webpack_require__.d(__webpack_exports__,"c",(function(){return getAreaDimensions})),__webpack_require__.d(__webpack_exports__,"h",(function(){return getScrollLength})),__webpack_require__.d(__webpack_exports__,"g",(function(){return getScrollBlock})),__webpack_require__.d(__webpack_exports__,"e",(function(){return getEndDimension})),__webpack_require__.d(__webpack_exports__,"i",(function(){return getSheetContainer})),__webpack_require__.d(__webpack_exports__,"j",(function(){return getSheetHeight})),__webpack_require__.d(__webpack_exports__,"k",(function(){return getSheetWidth}));__webpack_require__(87);var _constants_defaults__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(23),_constants_ids__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(270),normalizeDimension=function normalizeDimension(dimension,scale,defaultValue){return dimension?dimension*scale:defaultValue},normalizeRowHeight=function normalizeRowHeight(rowHeight){return normalizeDimension(rowHeight,_constants_defaults__WEBPACK_IMPORTED_MODULE_1__.c,_constants_defaults__WEBPACK_IMPORTED_MODULE_1__.p)},normalizeColumnWidth=function normalizeColumnWidth(columnWidth){return normalizeDimension(columnWidth,_constants_defaults__WEBPACK_IMPORTED_MODULE_1__.b,_constants_defaults__WEBPACK_IMPORTED_MODULE_1__.e)},denormalizeDimension=function denormalizeDimension(dimension,scale,defaultValue){return void 0===defaultValue&&(defaultValue=0),dimension?dimension/scale:defaultValue},denormalizeRowHeight=function denormalizeRowHeight(rowHeight){return denormalizeDimension(rowHeight,_constants_defaults__WEBPACK_IMPORTED_MODULE_1__.c)},denormalizeColumnWidth=function denormalizeColumnWidth(columnWidth){return denormalizeDimension(columnWidth,_constants_defaults__WEBPACK_IMPORTED_MODULE_1__.b)},normalizeHeaderDimensionFromArray=function normalizeHeaderDimensionFromArray(index,dimensions,outOfRangeValue,normalizeFn){return index?normalizeFn(dimensions[index]):outOfRangeValue},normalizeRowHeightFromArray=function normalizeRowHeightFromArray(index,rowHeights){return normalizeHeaderDimensionFromArray(index,rowHeights,_constants_defaults__WEBPACK_IMPORTED_MODULE_1__.q,normalizeRowHeight)},normalizeColumnWidthFromArray=function normalizeColumnWidthFromArray(index,columnWidths){return normalizeHeaderDimensionFromArray(index,columnWidths,_constants_defaults__WEBPACK_IMPORTED_MODULE_1__.f,normalizeColumnWidth)},getHeaderOffset=function getHeaderOffset(dimensions,count,initialOffset,indexNomralizeFn){for(var offsets=[0,initialOffset],index=2,incrementor=initialOffset;index<=count+1;index+=1)incrementor+=indexNomralizeFn(index-1,dimensions),offsets.push(incrementor);return offsets},getColumnOffsets=function getColumnOffsets(columnWidths,columnCount){return getHeaderOffset(columnWidths,columnCount,_constants_defaults__WEBPACK_IMPORTED_MODULE_1__.f,normalizeColumnWidthFromArray)},getRowOffsets=function getRowOffsets(rowHeights,rowCount){return getHeaderOffset(rowHeights,rowCount,_constants_defaults__WEBPACK_IMPORTED_MODULE_1__.q,normalizeRowHeightFromArray)},getAreaDimensions=function getAreaDimensions(area,rowOffsets,columnOffsets){return{height:rowOffsets[area.end.y+1]-rowOffsets[area.start.y],width:columnOffsets[area.end.x+1]-columnOffsets[area.start.x]}},getScrollLength=function getScrollLength(count,freezeCount){return count-freezeCount},getScrollBlock=function getScrollBlock(offsets,freezeCount){return offsets[freezeCount]},getEndDimension=function getEndDimension(dimension,offsets,frozenCount,screenDimension,tableDimensionCount){for(var dimensionOffsetEnd=offsets[dimension]+(screenDimension-offsets[frozenCount]),dimensionEnd=dimension,i=dimension;i<=tableDimensionCount;i+=1){if(dimensionEnd=i,offsets[i]>=dimensionOffsetEnd)break}return dimensionEnd},getSheetContainer=function getSheetContainer(){return document.getElementById(_constants_ids__WEBPACK_IMPORTED_MODULE_2__.a)},getSheetHeight=function getSheetHeight(){var container=getSheetContainer();return container?container.scrollHeight:0},getSheetWidth=function getSheetWidth(){var container=getSheetContainer();return container?container.scrollWidth:0};try{normalizeRowHeight.displayName="normalizeRowHeight",normalizeRowHeight.__docgenInfo={description:"",displayName:"normalizeRowHeight",props:{toString:{defaultValue:null,description:"Returns a string representation of an object.\n@param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.",name:"toString",required:!1,type:{name:"(radix?: number) => string"}},toFixed:{defaultValue:null,description:"Returns a string representing a number in fixed-point notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toFixed",required:!0,type:{name:"(fractionDigits?: number) => string"}},toExponential:{defaultValue:null,description:"Returns a string containing a number represented in exponential notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toExponential",required:!0,type:{name:"(fractionDigits?: number) => string"}},toPrecision:{defaultValue:null,description:"Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.\n@param precision Number of significant digits. Must be in the range 1 - 21, inclusive.",name:"toPrecision",required:!0,type:{name:"(precision?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => number"}},toLocaleString:{defaultValue:null,description:"Converts a number to a string by using the current or specified locale.\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n@param options An object that contains one or more properties that specify comparison options.",name:"toLocaleString",required:!1,type:{name:"(locales?: string | string[], options?: NumberFormatOptions) => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/dimensions.ts#normalizeRowHeight"]={docgenInfo:normalizeRowHeight.__docgenInfo,name:"normalizeRowHeight",path:"src/tools/dimensions.ts#normalizeRowHeight"})}catch(__react_docgen_typescript_loader_error){}try{normalizeColumnWidth.displayName="normalizeColumnWidth",normalizeColumnWidth.__docgenInfo={description:"",displayName:"normalizeColumnWidth",props:{toString:{defaultValue:null,description:"Returns a string representation of an object.\n@param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.",name:"toString",required:!1,type:{name:"(radix?: number) => string"}},toFixed:{defaultValue:null,description:"Returns a string representing a number in fixed-point notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toFixed",required:!0,type:{name:"(fractionDigits?: number) => string"}},toExponential:{defaultValue:null,description:"Returns a string containing a number represented in exponential notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toExponential",required:!0,type:{name:"(fractionDigits?: number) => string"}},toPrecision:{defaultValue:null,description:"Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.\n@param precision Number of significant digits. Must be in the range 1 - 21, inclusive.",name:"toPrecision",required:!0,type:{name:"(precision?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => number"}},toLocaleString:{defaultValue:null,description:"Converts a number to a string by using the current or specified locale.\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n@param options An object that contains one or more properties that specify comparison options.",name:"toLocaleString",required:!1,type:{name:"(locales?: string | string[], options?: NumberFormatOptions) => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/dimensions.ts#normalizeColumnWidth"]={docgenInfo:normalizeColumnWidth.__docgenInfo,name:"normalizeColumnWidth",path:"src/tools/dimensions.ts#normalizeColumnWidth"})}catch(__react_docgen_typescript_loader_error){}try{denormalizeRowHeight.displayName="denormalizeRowHeight",denormalizeRowHeight.__docgenInfo={description:"",displayName:"denormalizeRowHeight",props:{toString:{defaultValue:null,description:"Returns a string representation of an object.\n@param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.",name:"toString",required:!1,type:{name:"(radix?: number) => string"}},toFixed:{defaultValue:null,description:"Returns a string representing a number in fixed-point notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toFixed",required:!0,type:{name:"(fractionDigits?: number) => string"}},toExponential:{defaultValue:null,description:"Returns a string containing a number represented in exponential notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toExponential",required:!0,type:{name:"(fractionDigits?: number) => string"}},toPrecision:{defaultValue:null,description:"Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.\n@param precision Number of significant digits. Must be in the range 1 - 21, inclusive.",name:"toPrecision",required:!0,type:{name:"(precision?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => number"}},toLocaleString:{defaultValue:null,description:"Converts a number to a string by using the current or specified locale.\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n@param options An object that contains one or more properties that specify comparison options.",name:"toLocaleString",required:!1,type:{name:"(locales?: string | string[], options?: NumberFormatOptions) => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/dimensions.ts#denormalizeRowHeight"]={docgenInfo:denormalizeRowHeight.__docgenInfo,name:"denormalizeRowHeight",path:"src/tools/dimensions.ts#denormalizeRowHeight"})}catch(__react_docgen_typescript_loader_error){}try{denormalizeColumnWidth.displayName="denormalizeColumnWidth",denormalizeColumnWidth.__docgenInfo={description:"",displayName:"denormalizeColumnWidth",props:{toString:{defaultValue:null,description:"Returns a string representation of an object.\n@param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.",name:"toString",required:!1,type:{name:"(radix?: number) => string"}},toFixed:{defaultValue:null,description:"Returns a string representing a number in fixed-point notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toFixed",required:!0,type:{name:"(fractionDigits?: number) => string"}},toExponential:{defaultValue:null,description:"Returns a string containing a number represented in exponential notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toExponential",required:!0,type:{name:"(fractionDigits?: number) => string"}},toPrecision:{defaultValue:null,description:"Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.\n@param precision Number of significant digits. Must be in the range 1 - 21, inclusive.",name:"toPrecision",required:!0,type:{name:"(precision?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => number"}},toLocaleString:{defaultValue:null,description:"Converts a number to a string by using the current or specified locale.\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n@param options An object that contains one or more properties that specify comparison options.",name:"toLocaleString",required:!1,type:{name:"(locales?: string | string[], options?: NumberFormatOptions) => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/dimensions.ts#denormalizeColumnWidth"]={docgenInfo:denormalizeColumnWidth.__docgenInfo,name:"denormalizeColumnWidth",path:"src/tools/dimensions.ts#denormalizeColumnWidth"})}catch(__react_docgen_typescript_loader_error){}try{normalizeRowHeightFromArray.displayName="normalizeRowHeightFromArray",normalizeRowHeightFromArray.__docgenInfo={description:"Converts Excel scaled row height unit to normal scaled unit",displayName:"normalizeRowHeightFromArray",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/dimensions.ts#normalizeRowHeightFromArray"]={docgenInfo:normalizeRowHeightFromArray.__docgenInfo,name:"normalizeRowHeightFromArray",path:"src/tools/dimensions.ts#normalizeRowHeightFromArray"})}catch(__react_docgen_typescript_loader_error){}try{normalizeColumnWidthFromArray.displayName="normalizeColumnWidthFromArray",normalizeColumnWidthFromArray.__docgenInfo={description:"Converts Excel scaled column width unit to normal scaled unit",displayName:"normalizeColumnWidthFromArray",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/dimensions.ts#normalizeColumnWidthFromArray"]={docgenInfo:normalizeColumnWidthFromArray.__docgenInfo,name:"normalizeColumnWidthFromArray",path:"src/tools/dimensions.ts#normalizeColumnWidthFromArray"})}catch(__react_docgen_typescript_loader_error){}try{getColumnOffsets.displayName="getColumnOffsets",getColumnOffsets.__docgenInfo={description:"Creates an offset list of the column widths",displayName:"getColumnOffsets",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/dimensions.ts#getColumnOffsets"]={docgenInfo:getColumnOffsets.__docgenInfo,name:"getColumnOffsets",path:"src/tools/dimensions.ts#getColumnOffsets"})}catch(__react_docgen_typescript_loader_error){}try{getRowOffsets.displayName="getRowOffsets",getRowOffsets.__docgenInfo={description:"Creates an offset list of the row heights",displayName:"getRowOffsets",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/dimensions.ts#getRowOffsets"]={docgenInfo:getRowOffsets.__docgenInfo,name:"getRowOffsets",path:"src/tools/dimensions.ts#getRowOffsets"})}catch(__react_docgen_typescript_loader_error){}try{getEndDimension.displayName="getEndDimension",getEndDimension.__docgenInfo={description:"Gets the final dimension that's viewable",displayName:"getEndDimension",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/dimensions.ts#getEndDimension"]={docgenInfo:getEndDimension.__docgenInfo,name:"getEndDimension",path:"src/tools/dimensions.ts#getEndDimension"})}catch(__react_docgen_typescript_loader_error){}},263:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return createStateFromWorkbook}));__webpack_require__(997),__webpack_require__(52),__webpack_require__(123),__webpack_require__(41),__webpack_require__(60),__webpack_require__(999),__webpack_require__(1e3),__webpack_require__(53);var uniqid__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__(111),uniqid__WEBPACK_IMPORTED_MODULE_8___default=__webpack_require__.n(uniqid__WEBPACK_IMPORTED_MODULE_8__),color__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__(551),color__WEBPACK_IMPORTED_MODULE_9___default=__webpack_require__.n(color__WEBPACK_IMPORTED_MODULE_9__),clone_deep__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__(112),clone_deep__WEBPACK_IMPORTED_MODULE_10___default=__webpack_require__.n(clone_deep__WEBPACK_IMPORTED_MODULE_10__),_constants_defaults__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__(23),_types_exceljs__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__(127),_table__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__(207),_constants_types__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__(12),_redux_store__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__(7),_constants_colors__WEBPACK_IMPORTED_MODULE_16__=__webpack_require__(212),_color__WEBPACK_IMPORTED_MODULE_17__=__webpack_require__(265),_style__WEBPACK_IMPORTED_MODULE_18__=__webpack_require__(47),_conversion__WEBPACK_IMPORTED_MODULE_19__=__webpack_require__(99),__assign=function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},getFormattedColor=function getFormattedColor(color){var formattedColor="",argb=color.argb,indexed=color.indexed,theme=color.theme,tint=color.tint;return argb?formattedColor="#"+argb.substring(2):indexed?formattedColor=_constants_colors__WEBPACK_IMPORTED_MODULE_16__.a[indexed%_constants_colors__WEBPACK_IMPORTED_MODULE_16__.a.length]:theme&&(formattedColor=_constants_colors__WEBPACK_IMPORTED_MODULE_16__.b[theme%_constants_colors__WEBPACK_IMPORTED_MODULE_16__.b.length],tint&&(formattedColor=Object(_color__WEBPACK_IMPORTED_MODULE_17__.a)(new color__WEBPACK_IMPORTED_MODULE_9___default.a(formattedColor),tint))),formattedColor},getBorderStyleInPlace=function getBorderStyleInPlace(section,border,styles){var style=border.style,color=border.color;if(styles["border"+section+"Style"]="solid",style&&(styles["border"+section+"Width"]=style),color){var borderColor=getFormattedColor(color);borderColor&&(styles["border"+section+"Color"]=borderColor)}},setFontStyleInPlaceFromFont=function setFontStyleInPlaceFromFont(font,style){var bold=font.bold,italic=font.italic,strike=font.strike,underline=font.underline,name=font.name,size=font.size,color=font.color;bold&&Object(_style__WEBPACK_IMPORTED_MODULE_18__.g)(style),italic&&Object(_style__WEBPACK_IMPORTED_MODULE_18__.h)(style),strike&&Object(_style__WEBPACK_IMPORTED_MODULE_18__.i)(style),underline&&Object(_style__WEBPACK_IMPORTED_MODULE_18__.j)(style),style.fontFamily&&(style.fontFamily=name),style.fontSize&&(style.fontSize=size),style.color&&(style.color=getFormattedColor(color))},getStylesFromCell=function getStylesFromCell(cell){var styles={block:{},font:{}},style=cell.style,border=style.border,fill=style.fill,font=style.font;return fill&&function getFillInPlace(fill,styles){switch(fill.type){case"gradient":break;case"pattern":default:var fgColor=fill.fgColor;fgColor&&(styles.backgroundColor=getFormattedColor(fgColor))}}(fill,styles.block),border&&function getAllBorderStylesInPlace(borders,styles){var bottom=borders.bottom,left=borders.left,top=borders.top,right=borders.right;bottom&&getBorderStyleInPlace("Bottom",bottom,styles),left&&getBorderStyleInPlace("Left",left,styles),top&&getBorderStyleInPlace("Top",top,styles),right&&getBorderStyleInPlace("Right",right,styles)}(border,styles.block),font&&setFontStyleInPlaceFromFont(font,styles.font),Object.keys(styles).length?styles:void 0},getRichTextFromCellValue=function getRichTextFromCellValue(value){var richText=[],richTextBlock={fragments:[],key:uniqid__WEBPACK_IMPORTED_MODULE_8___default()()};return value.richText.forEach((function(_a){var font=_a.font,text=_a.text,style={};font&&setFontStyleInPlaceFromFont(font,style),richTextBlock.fragments.push({style:style,text:text,key:uniqid__WEBPACK_IMPORTED_MODULE_8___default()()})})),richText.push(richTextBlock),richText},getBoundedRow=function getBoundedRow(rowIndex){return rowIndex<_constants_defaults__WEBPACK_IMPORTED_MODULE_11__.j?rowIndex:_constants_defaults__WEBPACK_IMPORTED_MODULE_11__.j},getBoundedColumn=function getBoundedColumn(columnIndex){return columnIndex<_constants_defaults__WEBPACK_IMPORTED_MODULE_11__.i?columnIndex:_constants_defaults__WEBPACK_IMPORTED_MODULE_11__.i},getSheetDataFromSheet=function getSheetDataFromSheet(sheet){var data={};return sheet.eachRow({includeEmpty:!0},(function(row,rowIndex){data[rowIndex]||(data[rowIndex]={}),row.eachCell({includeEmpty:!0},(function(cell,columnIndex){if(Object.keys(cell).length){data[rowIndex][columnIndex]={};var content=function getCellContent(data,cell){var value=cell.value,content={},styles=getStylesFromCell(cell);switch(styles&&(content.style=styles),cell.type){case _types_exceljs__WEBPACK_IMPORTED_MODULE_12__.a.Number:content.value=value,content.type=_constants_types__WEBPACK_IMPORTED_MODULE_14__.c;break;case _types_exceljs__WEBPACK_IMPORTED_MODULE_12__.a.String:content.value=value,content.type=_constants_types__WEBPACK_IMPORTED_MODULE_14__.e;break;case _types_exceljs__WEBPACK_IMPORTED_MODULE_12__.a.Formula:var _a=cell.value,formula=_a.formula,sharedFormula=_a.sharedFormula,formulaValue=formula||sharedFormula;content.value=formulaValue,content.type=_constants_types__WEBPACK_IMPORTED_MODULE_14__.a;break;case _types_exceljs__WEBPACK_IMPORTED_MODULE_12__.a.RichText:content.value=getRichTextFromCellValue(value),content.type=_constants_types__WEBPACK_IMPORTED_MODULE_14__.d;break;case _types_exceljs__WEBPACK_IMPORTED_MODULE_12__.a.Boolean:case _types_exceljs__WEBPACK_IMPORTED_MODULE_12__.a.Date:case _types_exceljs__WEBPACK_IMPORTED_MODULE_12__.a.Error:break;case _types_exceljs__WEBPACK_IMPORTED_MODULE_12__.a.Merge:var cellAddress=Object(_conversion__WEBPACK_IMPORTED_MODULE_19__.c)(cell._value.model.address),masterAddress=Object(_conversion__WEBPACK_IMPORTED_MODULE_19__.c)(cell._value.model.master);content.type=_constants_types__WEBPACK_IMPORTED_MODULE_14__.b,content.merged={parent:masterAddress},data[masterAddress.y][masterAddress.x].merged={area:{start:masterAddress,end:cellAddress}}}return Object.keys(content).length?content:void 0}(data,cell);content&&Object.keys(content).length||delete data[rowIndex][columnIndex],content&&(data[rowIndex][columnIndex]=content)}})),Object.keys(data[rowIndex]).length||delete data[rowIndex]})),data},getPaneDataFromSheetViews=function getPaneDataFromSheetViews(views){var paneData={activeCellPosition:_constants_defaults__WEBPACK_IMPORTED_MODULE_11__.a,freezeColumnCount:_constants_defaults__WEBPACK_IMPORTED_MODULE_11__.g,freezeRowCount:_constants_defaults__WEBPACK_IMPORTED_MODULE_11__.h};return views.forEach((function(view){var activeCell=view.activeCell;switch(activeCell&&(paneData.activeCellPosition=function getBoundedPositionFromString(stringPosition){var activeCellPosition=Object(_conversion__WEBPACK_IMPORTED_MODULE_19__.c)(stringPosition);return activeCellPosition.x=getBoundedColumn(activeCellPosition.x),activeCellPosition.y=getBoundedRow(activeCellPosition.y),activeCellPosition}(activeCell)),view.state){case"normal":break;case"frozen":paneData.freezeColumnCount=view.xSplit?view.xSplit:0,paneData.freezeRowCount=view.ySplit?view.ySplit:0}})),paneData},getColumnDataFromColumns=function getColumnDataFromColumns(sheet){for(var columnWidths={},hiddenColumns={},columnCount=sheet.columnCount,i=1;i<=columnCount;i+=1){var _a=sheet.getColumn(i),width=_a.width,hidden=_a.hidden;width&&(columnWidths[i]=width),hidden&&(hiddenColumns[i]=!0)}return{columnWidths:columnWidths,hiddenColumns:hiddenColumns}},getRowDataFromSheet=function getRowDataFromSheet(sheet){for(var rowHeights={},hiddenRows={},rowCount=sheet.rowCount,i=1;i<=rowCount;i+=1){var _a=sheet.getRow(i),height=_a.height,hidden=_a.hidden;height&&(rowHeights[i]=height),hidden&&(hiddenRows[i]=!0)}return{rowHeights:rowHeights,hiddenRows:hiddenRows}},createStateFromWorkbook=function createStateFromWorkbook(workbook){var sheetsMap={},sheetNames=[],activeTab=1;workbook.views.forEach((function(view){view.activeTab&&(activeTab=view.activeTab)}));var activeSheetName=workbook.getWorksheet(activeTab).name;workbook.eachSheet((function(sheet){sheetNames.push(sheet.name);var _a=getPaneDataFromSheetViews(sheet.views),activeCellPosition=_a.activeCellPosition,freezeColumnCount=_a.freezeColumnCount,freezeRowCount=_a.freezeRowCount,_b=getColumnDataFromColumns(sheet),columnWidths=_b.columnWidths,hiddenColumns=_b.hiddenColumns,_c=getRowDataFromSheet(sheet),hiddenRows=_c.hiddenRows,rowHeights=_c.rowHeights;sheetsMap[sheet.name]={data:getSheetDataFromSheet(sheet),columnCount:Object(_table__WEBPACK_IMPORTED_MODULE_13__.a)(sheet.columnCount),rowCount:Object(_table__WEBPACK_IMPORTED_MODULE_13__.b)(sheet.rowCount),activeCellPosition:activeCellPosition,freezeColumnCount:freezeColumnCount,freezeRowCount:freezeRowCount,columnWidths:columnWidths,hiddenColumns:hiddenColumns,hiddenRows:hiddenRows,rowHeights:rowHeights,inactiveSelectionAreas:[]}}));var activeSheet=sheetsMap[activeSheetName],topLeftPosition={x:activeSheet.freezeColumnCount+1,y:activeSheet.freezeRowCount+1};return __assign(__assign({},clone_deep__WEBPACK_IMPORTED_MODULE_10___default()(_redux_store__WEBPACK_IMPORTED_MODULE_15__.c)),{selectionAreaIndex:-1,inactiveSelectionAreas:[],sheetsMap:sheetsMap,sheetNames:sheetNames,activeSheetName:activeSheetName,topLeftPosition:topLeftPosition})};try{getStylesFromCell.displayName="getStylesFromCell",getStylesFromCell.__docgenInfo={description:"",displayName:"getStylesFromCell",props:{worksheet:{defaultValue:null,description:"",name:"worksheet",required:!0,type:{name:"Worksheet"}},workbook:{defaultValue:null,description:"",name:"workbook",required:!0,type:{name:"Workbook"}},effectiveType:{defaultValue:null,description:"",name:"effectiveType",required:!0,type:{name:"ValueType"}},isMerged:{defaultValue:null,description:"",name:"isMerged",required:!0,type:{name:"boolean"}},master:{defaultValue:null,description:"",name:"master",required:!0,type:{name:"Cell"}},isHyperlink:{defaultValue:null,description:"",name:"isHyperlink",required:!0,type:{name:"boolean"}},hyperlink:{defaultValue:null,description:"",name:"hyperlink",required:!0,type:{name:"string"}},text:{defaultValue:null,description:"",name:"text",required:!0,type:{name:"string"}},fullAddress:{defaultValue:null,description:"",name:"fullAddress",required:!0,type:{name:"{ sheetName: string; address: string; row: string; col: string; }"}},model:{defaultValue:null,description:"",name:"model",required:!0,type:{name:"CellModel"}},name:{defaultValue:null,description:"Assign (or get) a name for a cell (will overwrite any other names that cell had)",name:"name",required:!0,type:{name:"string"}},names:{defaultValue:null,description:"Assign (or get) an array of names for a cell (cells can have more than one name)",name:"names",required:!0,type:{name:"string[]"}},dataValidation:{defaultValue:null,description:"Cells can define what values are valid or not and provide\nprompting to the user to help guide them.",name:"dataValidation",required:!0,type:{name:"DataValidation"}},value:{defaultValue:null,description:"Value of the cell",name:"value",required:!0,type:{name:"CellValue"}},note:{defaultValue:null,description:"comment of the cell",name:"note",required:!0,type:{name:"string | Comment"}},formula:{defaultValue:null,description:"convenience getter to access the formula",name:"formula",required:!0,type:{name:"string"}},result:{defaultValue:null,description:"convenience getter to access the formula result",name:"result",required:!0,type:{name:"string | number | Date"}},type:{defaultValue:null,description:"The type of the cell's value",name:"type",required:!0,type:{name:"ValueType"}},formulaType:{defaultValue:null,description:"The type of the cell's formula",name:"formulaType",required:!0,type:{name:"FormulaType"}},style:{defaultValue:null,description:"The styles of the cell",name:"style",required:!0,type:{name:"Partial<Style>"}},addName:{defaultValue:null,description:"",name:"addName",required:!0,type:{name:"(name: string) => void"}},removeName:{defaultValue:null,description:"Remove a name from a cell",name:"removeName",required:!0,type:{name:"(name: string) => void"}},removeAllNames:{defaultValue:null,description:"",name:"removeAllNames",required:!0,type:{name:"() => void"}},destroy:{defaultValue:null,description:"",name:"destroy",required:!0,type:{name:"() => void"}},toCsvString:{defaultValue:null,description:"",name:"toCsvString",required:!0,type:{name:"() => string"}},release:{defaultValue:null,description:"",name:"release",required:!0,type:{name:"() => void"}},addMergeRef:{defaultValue:null,description:"",name:"addMergeRef",required:!0,type:{name:"() => void"}},releaseMergeRef:{defaultValue:null,description:"",name:"releaseMergeRef",required:!0,type:{name:"() => void"}},merge:{defaultValue:null,description:"",name:"merge",required:!0,type:{name:"(master: Cell, ignoreStyle?: boolean) => void"}},unmerge:{defaultValue:null,description:"",name:"unmerge",required:!0,type:{name:"() => void"}},isMergedTo:{defaultValue:null,description:"",name:"isMergedTo",required:!0,type:{name:"(master: Cell) => boolean"}},toString:{defaultValue:null,description:"Returns a string representation of an object.",name:"toString",required:!1,type:{name:"() => string"}},numFmt:{defaultValue:null,description:"",name:"numFmt",required:!0,type:{name:"string"}},font:{defaultValue:null,description:"",name:"font",required:!0,type:{name:"Partial<Font>"}},alignment:{defaultValue:null,description:"",name:"alignment",required:!0,type:{name:"Partial<Alignment>"}},protection:{defaultValue:null,description:"",name:"protection",required:!0,type:{name:"Partial<Protection>"}},border:{defaultValue:null,description:"",name:"border",required:!0,type:{name:"Partial<Borders>"}},fill:{defaultValue:null,description:"",name:"fill",required:!0,type:{name:"Fill"}},sheetName:{defaultValue:null,description:"",name:"sheetName",required:!1,type:{name:"string"}},address:{defaultValue:null,description:"",name:"address",required:!0,type:{name:"string"}},col:{defaultValue:null,description:"",name:"col",required:!0,type:{name:"string"}},row:{defaultValue:null,description:"",name:"row",required:!0,type:{name:"string"}},$col$row:{defaultValue:null,description:"",name:"$col$row",required:!0,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/parser.ts#getStylesFromCell"]={docgenInfo:getStylesFromCell.__docgenInfo,name:"getStylesFromCell",path:"src/tools/parser.ts#getStylesFromCell"})}catch(__react_docgen_typescript_loader_error){}try{getRichTextFromCellValue.displayName="getRichTextFromCellValue",getRichTextFromCellValue.__docgenInfo={description:"",displayName:"getRichTextFromCellValue",props:{richText:{defaultValue:null,description:"",name:"richText",required:!0,type:{name:"RichText[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/parser.ts#getRichTextFromCellValue"]={docgenInfo:getRichTextFromCellValue.__docgenInfo,name:"getRichTextFromCellValue",path:"src/tools/parser.ts#getRichTextFromCellValue"})}catch(__react_docgen_typescript_loader_error){}try{getBoundedRow.displayName="getBoundedRow",getBoundedRow.__docgenInfo={description:"",displayName:"getBoundedRow",props:{toString:{defaultValue:null,description:"Returns a string representation of an object.\n@param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.",name:"toString",required:!1,type:{name:"(radix?: number) => string"}},toFixed:{defaultValue:null,description:"Returns a string representing a number in fixed-point notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toFixed",required:!0,type:{name:"(fractionDigits?: number) => string"}},toExponential:{defaultValue:null,description:"Returns a string containing a number represented in exponential notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toExponential",required:!0,type:{name:"(fractionDigits?: number) => string"}},toPrecision:{defaultValue:null,description:"Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.\n@param precision Number of significant digits. Must be in the range 1 - 21, inclusive.",name:"toPrecision",required:!0,type:{name:"(precision?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => number"}},toLocaleString:{defaultValue:null,description:"Converts a number to a string by using the current or specified locale.\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n@param options An object that contains one or more properties that specify comparison options.",name:"toLocaleString",required:!1,type:{name:"(locales?: string | string[], options?: NumberFormatOptions) => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/parser.ts#getBoundedRow"]={docgenInfo:getBoundedRow.__docgenInfo,name:"getBoundedRow",path:"src/tools/parser.ts#getBoundedRow"})}catch(__react_docgen_typescript_loader_error){}try{getBoundedColumn.displayName="getBoundedColumn",getBoundedColumn.__docgenInfo={description:"",displayName:"getBoundedColumn",props:{toString:{defaultValue:null,description:"Returns a string representation of an object.\n@param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.",name:"toString",required:!1,type:{name:"(radix?: number) => string"}},toFixed:{defaultValue:null,description:"Returns a string representing a number in fixed-point notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toFixed",required:!0,type:{name:"(fractionDigits?: number) => string"}},toExponential:{defaultValue:null,description:"Returns a string containing a number represented in exponential notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toExponential",required:!0,type:{name:"(fractionDigits?: number) => string"}},toPrecision:{defaultValue:null,description:"Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.\n@param precision Number of significant digits. Must be in the range 1 - 21, inclusive.",name:"toPrecision",required:!0,type:{name:"(precision?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => number"}},toLocaleString:{defaultValue:null,description:"Converts a number to a string by using the current or specified locale.\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n@param options An object that contains one or more properties that specify comparison options.",name:"toLocaleString",required:!1,type:{name:"(locales?: string | string[], options?: NumberFormatOptions) => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/parser.ts#getBoundedColumn"]={docgenInfo:getBoundedColumn.__docgenInfo,name:"getBoundedColumn",path:"src/tools/parser.ts#getBoundedColumn"})}catch(__react_docgen_typescript_loader_error){}try{getSheetDataFromSheet.displayName="getSheetDataFromSheet",getSheetDataFromSheet.__docgenInfo={description:"",displayName:"getSheetDataFromSheet",props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"number"}},name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string"}},workbook:{defaultValue:null,description:"",name:"workbook",required:!0,type:{name:"Workbook"}},hasMerges:{defaultValue:null,description:"",name:"hasMerges",required:!0,type:{name:"boolean"}},dimensions:{defaultValue:null,description:"",name:"dimensions",required:!0,type:{name:"Range"}},pageSetup:{defaultValue:null,description:"Contains information related to how a worksheet is printed",name:"pageSetup",required:!0,type:{name:"Partial<PageSetup>"}},headerFooter:{defaultValue:null,description:"Worksheet Header and Footer",name:"headerFooter",required:!0,type:{name:"Partial<HeaderFooter>"}},state:{defaultValue:null,description:"Worksheet State",name:"state",required:!0,type:{name:"WorksheetState"}},properties:{defaultValue:null,description:"Worksheet Properties",name:"properties",required:!0,type:{name:"WorksheetProperties"}},views:{defaultValue:null,description:"Open panes representing the sheet",name:"views",required:!0,type:{name:"(Partial<WorksheetViewCommon & WorksheetViewNormal> | Partial<WorksheetViewCommon & WorksheetViewFrozen> | Partial<...>)[]"}},autoFilter:{defaultValue:null,description:"Apply an auto filter to your worksheet.",name:"autoFilter",required:!1,type:{name:"AutoFilter"}},destroy:{defaultValue:null,description:"",name:"destroy",required:!0,type:{name:"() => void"}},actualRowCount:{defaultValue:null,description:"A count of the number of rows that have values. If a mid-document row is empty, it will not be included in the count.",name:"actualRowCount",required:!0,type:{name:"number"}},columnCount:{defaultValue:null,description:"The total column size of the document. Equal to the maximum cell count from all of the rows",name:"columnCount",required:!0,type:{name:"number"}},actualColumnCount:{defaultValue:null,description:"A count of the number of columns that have values.",name:"actualColumnCount",required:!0,type:{name:"number"}},getColumnKey:{defaultValue:null,description:"",name:"getColumnKey",required:!0,type:{name:"(key: string) => Partial<Column>"}},setColumnKey:{defaultValue:null,description:"",name:"setColumnKey",required:!0,type:{name:"(key: string, value: Partial<Column>) => void"}},deleteColumnKey:{defaultValue:null,description:"",name:"deleteColumnKey",required:!0,type:{name:"(key: string) => void"}},eachColumnKey:{defaultValue:null,description:"",name:"eachColumnKey",required:!0,type:{name:"(callback: (col: Partial<Column>, index: number) => void) => void"}},getColumn:{defaultValue:null,description:"Access an individual columns by key, letter and 1-based column number",name:"getColumn",required:!0,type:{name:"(indexOrKey: string | number) => Partial<Column>"}},spliceColumns:{defaultValue:null,description:"Cut one or more columns (columns to the right are shifted left)\nand optionally insert more\r\n\r\nIf column properties have been definde, they will be cut or moved accordingly\r\n\r\nKnown Issue: If a splice causes any merged cells to move, the results may be unpredictable\r\n\r\nAlso: If the worksheet has more rows than values in the colulmn inserts,\r\nthe rows will still be shifted as if the values existed",name:"spliceColumns",required:!0,type:{name:"(start: number, count: number, ...insert: any[][]) => void"}},columns:{defaultValue:null,description:"Add column headers and define column keys and widths.\n\r\nNote: these column structures are a workbook-building convenience only,\r\napart from the column width, they will not be fully persisted.",name:"columns",required:!0,type:{name:"Partial<Column>[]"}},rowCount:{defaultValue:null,description:"The total row size of the document. Equal to the row number of the last row that has values.",name:"rowCount",required:!0,type:{name:"number"}},lastRow:{defaultValue:null,description:"Get the last editable row in a worksheet (or undefined if there are none)",name:"lastRow",required:!0,type:{name:"Row"}},findRow:{defaultValue:null,description:"",name:"findRow",required:!0,type:{name:"(row: number) => Row"}},spliceRows:{defaultValue:null,description:"Cut one or more rows (rows below are shifted up)\nand optionally insert more\r\n\r\nKnown Issue: If a splice causes any merged cells to move, the results may be unpredictable",name:"spliceRows",required:!0,type:{name:"(start: number, count: number, ...insert: any[][]) => void"}},addRow:{defaultValue:null,description:"Add a couple of Rows by key-value, after the last current row, using the column keys,\nor add a row by contiguous Array (assign to columns A, B & C)",name:"addRow",required:!0,type:{name:"(data: any, styleOption?: string) => Row"}},addRows:{defaultValue:null,description:"Add multiple rows by providing an array of arrays or key-value pairs",name:"addRows",required:!0,type:{name:"(rows: any[], styleOption?: string) => void"}},insertRow:{defaultValue:null,description:"Insert a Row by key-value, at the pos (shifiting down all rows from pos),\nusing the column keys, or add a row by contiguous Array (assign to columns A, B & C)",name:"insertRow",required:!0,type:{name:"(pos: number, value: any, styleOption?: string) => Row"}},insertRows:{defaultValue:null,description:"Insert multiple rows at pos (shifiting down all rows from pos)\nby providing an array of arrays or key-value pairs",name:"insertRows",required:!0,type:{name:"(pos: number, values: any[], styleOption?: string) => void"}},duplicateRow:{defaultValue:null,description:"Duplicate rows and insert new rows",name:"duplicateRow",required:!0,type:{name:"(rowNum: number, count: number, insert: boolean) => void"}},getRow:{defaultValue:null,description:"Get or create row by 1-based index",name:"getRow",required:!0,type:{name:"(index: number) => Row"}},eachRow:{defaultValue:null,description:"Iterate over all rows that have values in a worksheet\nIterate over all rows (including empty rows) in a worksheet",name:"eachRow",required:!0,type:{name:"{ (callback: (row: Row, rowNumber: number) => void): void; (opt: { includeEmpty: boolean; }, callback: (row: Row, rowNumber: number) => void): void; }"}},getSheetValues:{defaultValue:null,description:"return all rows as sparse array",name:"getSheetValues",required:!0,type:{name:"() => Row[]"}},findCell:{defaultValue:null,description:"returns the cell at [r,c] or address given by r. If not found, return undefined",name:"findCell",required:!0,type:{name:"(r: string | number, c: string | number) => Cell"}},getCell:{defaultValue:null,description:"Get or create cell",name:"getCell",required:!0,type:{name:"(r: string | number, c?: string | number) => Cell"}},mergeCells:{defaultValue:null,description:"Merge cells, either:\n\r\ntlbr string, e.g. `'A4:B5'`\r\n\r\ntl string, br string, e.g. `'G10', 'H11'`\r\n\r\nt, l, b, r numbers, e.g. `10,11,12,13`",name:"mergeCells",required:!0,type:{name:"{ (): void; (v: Range): void; (v: string): void; (v: Location): void; (top: number, left: number, bottom: number, right: number, sheetName?: string): void; (tl: string, br: string, sheetName?: string): void; (v: [...]): void; (v: [...]): void; (v: [...]): void; (v: [...]): void; }"}},mergeCellsWithoutStyle:{defaultValue:null,description:"",name:"mergeCellsWithoutStyle",required:!0,type:{name:"{ (): void; (v: Range): void; (v: string): void; (v: Location): void; (top: number, left: number, bottom: number, right: number, sheetName?: string): void; (tl: string, br: string, sheetName?: string): void; (v: [...]): void; (v: [...]): void; (v: [...]): void; (v: [...]): void; }"}},unMergeCells:{defaultValue:null,description:"unmerging the cells breaks the style links",name:"unMergeCells",required:!0,type:{name:"{ (): void; (v: Range): void; (v: string): void; (v: Location): void; (top: number, left: number, bottom: number, right: number, sheetName?: string): void; (tl: string, br: string, sheetName?: string): void; (v: [...]): void; (v: [...]): void; (v: [...]): void; (v: [...]): void; }"}},fillFormula:{defaultValue:null,description:"",name:"fillFormula",required:!0,type:{name:"(range: string | Range | Location, formula: string, results?: ((r: number, c: number) => string | number) | number[] | number[][]) => void"}},addBackgroundImage:{defaultValue:null,description:"Using the image id from `Workbook.addImage`, set the background to the worksheet",name:"addBackgroundImage",required:!0,type:{name:"(imageId: number) => void"}},getBackgroundImageId:{defaultValue:null,description:"",name:"getBackgroundImageId",required:!0,type:{name:"() => string"}},addImage:{defaultValue:null,description:"Using the image id from `Workbook.addImage`,\nembed an image within the worksheet to cover a range",name:"addImage",required:!0,type:{name:"(imageId: number, range: string | ({ editAs?: string; } & ImageRange & { hyperlinks?: ImageHyperlinkValue; }) | ({ editAs?: string; } & ImagePosition & { ...; })) => void"}},getImages:{defaultValue:null,description:"",name:"getImages",required:!0,type:{name:'() => { type: "image"; imageId: string; range: ImageRange; }[]'}},commit:{defaultValue:null,description:"",name:"commit",required:!0,type:{name:"() => void"}},model:{defaultValue:null,description:"",name:"model",required:!0,type:{name:"WorksheetModel"}},protect:{defaultValue:null,description:"Worksheet protection",name:"protect",required:!0,type:{name:"(password: string, options: Partial<WorksheetProtection>) => Promise<void>"}},unprotect:{defaultValue:null,description:"",name:"unprotect",required:!0,type:{name:"() => void"}},addTable:{defaultValue:null,description:"Add a new table and return a reference to it",name:"addTable",required:!0,type:{name:"(tableProperties: TableProperties) => Table"}},getTable:{defaultValue:null,description:"fetch table by name or id",name:"getTable",required:!0,type:{name:"(name: string) => Table"}},removeTable:{defaultValue:null,description:"delete table by name or id",name:"removeTable",required:!0,type:{name:"(name: string) => void"}},getTables:{defaultValue:null,description:"fetch table",name:"getTables",required:!0,type:{name:"() => [Table, void][]"}},addConditionalFormatting:{defaultValue:null,description:"add conditionalFormattingOptions",name:"addConditionalFormatting",required:!0,type:{name:"(cf: ConditionalFormattingOptions) => void"}},removeConditionalFormatting:{defaultValue:null,description:"delete conditionalFormattingOptions",name:"removeConditionalFormatting",required:!0,type:{name:"(filter: any) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/parser.ts#getSheetDataFromSheet"]={docgenInfo:getSheetDataFromSheet.__docgenInfo,name:"getSheetDataFromSheet",path:"src/tools/parser.ts#getSheetDataFromSheet"})}catch(__react_docgen_typescript_loader_error){}try{getColumnDataFromColumns.displayName="getColumnDataFromColumns",getColumnDataFromColumns.__docgenInfo={description:"",displayName:"getColumnDataFromColumns",props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"number"}},name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string"}},workbook:{defaultValue:null,description:"",name:"workbook",required:!0,type:{name:"Workbook"}},hasMerges:{defaultValue:null,description:"",name:"hasMerges",required:!0,type:{name:"boolean"}},dimensions:{defaultValue:null,description:"",name:"dimensions",required:!0,type:{name:"Range"}},pageSetup:{defaultValue:null,description:"Contains information related to how a worksheet is printed",name:"pageSetup",required:!0,type:{name:"Partial<PageSetup>"}},headerFooter:{defaultValue:null,description:"Worksheet Header and Footer",name:"headerFooter",required:!0,type:{name:"Partial<HeaderFooter>"}},state:{defaultValue:null,description:"Worksheet State",name:"state",required:!0,type:{name:"WorksheetState"}},properties:{defaultValue:null,description:"Worksheet Properties",name:"properties",required:!0,type:{name:"WorksheetProperties"}},views:{defaultValue:null,description:"Open panes representing the sheet",name:"views",required:!0,type:{name:"(Partial<WorksheetViewCommon & WorksheetViewNormal> | Partial<WorksheetViewCommon & WorksheetViewFrozen> | Partial<...>)[]"}},autoFilter:{defaultValue:null,description:"Apply an auto filter to your worksheet.",name:"autoFilter",required:!1,type:{name:"AutoFilter"}},destroy:{defaultValue:null,description:"",name:"destroy",required:!0,type:{name:"() => void"}},actualRowCount:{defaultValue:null,description:"A count of the number of rows that have values. If a mid-document row is empty, it will not be included in the count.",name:"actualRowCount",required:!0,type:{name:"number"}},columnCount:{defaultValue:null,description:"The total column size of the document. Equal to the maximum cell count from all of the rows",name:"columnCount",required:!0,type:{name:"number"}},actualColumnCount:{defaultValue:null,description:"A count of the number of columns that have values.",name:"actualColumnCount",required:!0,type:{name:"number"}},getColumnKey:{defaultValue:null,description:"",name:"getColumnKey",required:!0,type:{name:"(key: string) => Partial<Column>"}},setColumnKey:{defaultValue:null,description:"",name:"setColumnKey",required:!0,type:{name:"(key: string, value: Partial<Column>) => void"}},deleteColumnKey:{defaultValue:null,description:"",name:"deleteColumnKey",required:!0,type:{name:"(key: string) => void"}},eachColumnKey:{defaultValue:null,description:"",name:"eachColumnKey",required:!0,type:{name:"(callback: (col: Partial<Column>, index: number) => void) => void"}},getColumn:{defaultValue:null,description:"Access an individual columns by key, letter and 1-based column number",name:"getColumn",required:!0,type:{name:"(indexOrKey: string | number) => Partial<Column>"}},spliceColumns:{defaultValue:null,description:"Cut one or more columns (columns to the right are shifted left)\nand optionally insert more\r\n\r\nIf column properties have been definde, they will be cut or moved accordingly\r\n\r\nKnown Issue: If a splice causes any merged cells to move, the results may be unpredictable\r\n\r\nAlso: If the worksheet has more rows than values in the colulmn inserts,\r\nthe rows will still be shifted as if the values existed",name:"spliceColumns",required:!0,type:{name:"(start: number, count: number, ...insert: any[][]) => void"}},columns:{defaultValue:null,description:"Add column headers and define column keys and widths.\n\r\nNote: these column structures are a workbook-building convenience only,\r\napart from the column width, they will not be fully persisted.",name:"columns",required:!0,type:{name:"Partial<Column>[]"}},rowCount:{defaultValue:null,description:"The total row size of the document. Equal to the row number of the last row that has values.",name:"rowCount",required:!0,type:{name:"number"}},lastRow:{defaultValue:null,description:"Get the last editable row in a worksheet (or undefined if there are none)",name:"lastRow",required:!0,type:{name:"Row"}},findRow:{defaultValue:null,description:"",name:"findRow",required:!0,type:{name:"(row: number) => Row"}},spliceRows:{defaultValue:null,description:"Cut one or more rows (rows below are shifted up)\nand optionally insert more\r\n\r\nKnown Issue: If a splice causes any merged cells to move, the results may be unpredictable",name:"spliceRows",required:!0,type:{name:"(start: number, count: number, ...insert: any[][]) => void"}},addRow:{defaultValue:null,description:"Add a couple of Rows by key-value, after the last current row, using the column keys,\nor add a row by contiguous Array (assign to columns A, B & C)",name:"addRow",required:!0,type:{name:"(data: any, styleOption?: string) => Row"}},addRows:{defaultValue:null,description:"Add multiple rows by providing an array of arrays or key-value pairs",name:"addRows",required:!0,type:{name:"(rows: any[], styleOption?: string) => void"}},insertRow:{defaultValue:null,description:"Insert a Row by key-value, at the pos (shifiting down all rows from pos),\nusing the column keys, or add a row by contiguous Array (assign to columns A, B & C)",name:"insertRow",required:!0,type:{name:"(pos: number, value: any, styleOption?: string) => Row"}},insertRows:{defaultValue:null,description:"Insert multiple rows at pos (shifiting down all rows from pos)\nby providing an array of arrays or key-value pairs",name:"insertRows",required:!0,type:{name:"(pos: number, values: any[], styleOption?: string) => void"}},duplicateRow:{defaultValue:null,description:"Duplicate rows and insert new rows",name:"duplicateRow",required:!0,type:{name:"(rowNum: number, count: number, insert: boolean) => void"}},getRow:{defaultValue:null,description:"Get or create row by 1-based index",name:"getRow",required:!0,type:{name:"(index: number) => Row"}},eachRow:{defaultValue:null,description:"Iterate over all rows that have values in a worksheet\nIterate over all rows (including empty rows) in a worksheet",name:"eachRow",required:!0,type:{name:"{ (callback: (row: Row, rowNumber: number) => void): void; (opt: { includeEmpty: boolean; }, callback: (row: Row, rowNumber: number) => void): void; }"}},getSheetValues:{defaultValue:null,description:"return all rows as sparse array",name:"getSheetValues",required:!0,type:{name:"() => Row[]"}},findCell:{defaultValue:null,description:"returns the cell at [r,c] or address given by r. If not found, return undefined",name:"findCell",required:!0,type:{name:"(r: string | number, c: string | number) => Cell"}},getCell:{defaultValue:null,description:"Get or create cell",name:"getCell",required:!0,type:{name:"(r: string | number, c?: string | number) => Cell"}},mergeCells:{defaultValue:null,description:"Merge cells, either:\n\r\ntlbr string, e.g. `'A4:B5'`\r\n\r\ntl string, br string, e.g. `'G10', 'H11'`\r\n\r\nt, l, b, r numbers, e.g. `10,11,12,13`",name:"mergeCells",required:!0,type:{name:"{ (): void; (v: Range): void; (v: string): void; (v: Location): void; (top: number, left: number, bottom: number, right: number, sheetName?: string): void; (tl: string, br: string, sheetName?: string): void; (v: [...]): void; (v: [...]): void; (v: [...]): void; (v: [...]): void; }"}},mergeCellsWithoutStyle:{defaultValue:null,description:"",name:"mergeCellsWithoutStyle",required:!0,type:{name:"{ (): void; (v: Range): void; (v: string): void; (v: Location): void; (top: number, left: number, bottom: number, right: number, sheetName?: string): void; (tl: string, br: string, sheetName?: string): void; (v: [...]): void; (v: [...]): void; (v: [...]): void; (v: [...]): void; }"}},unMergeCells:{defaultValue:null,description:"unmerging the cells breaks the style links",name:"unMergeCells",required:!0,type:{name:"{ (): void; (v: Range): void; (v: string): void; (v: Location): void; (top: number, left: number, bottom: number, right: number, sheetName?: string): void; (tl: string, br: string, sheetName?: string): void; (v: [...]): void; (v: [...]): void; (v: [...]): void; (v: [...]): void; }"}},fillFormula:{defaultValue:null,description:"",name:"fillFormula",required:!0,type:{name:"(range: string | Range | Location, formula: string, results?: ((r: number, c: number) => string | number) | number[] | number[][]) => void"}},addBackgroundImage:{defaultValue:null,description:"Using the image id from `Workbook.addImage`, set the background to the worksheet",name:"addBackgroundImage",required:!0,type:{name:"(imageId: number) => void"}},getBackgroundImageId:{defaultValue:null,description:"",name:"getBackgroundImageId",required:!0,type:{name:"() => string"}},addImage:{defaultValue:null,description:"Using the image id from `Workbook.addImage`,\nembed an image within the worksheet to cover a range",name:"addImage",required:!0,type:{name:"(imageId: number, range: string | ({ editAs?: string; } & ImageRange & { hyperlinks?: ImageHyperlinkValue; }) | ({ editAs?: string; } & ImagePosition & { ...; })) => void"}},getImages:{defaultValue:null,description:"",name:"getImages",required:!0,type:{name:'() => { type: "image"; imageId: string; range: ImageRange; }[]'}},commit:{defaultValue:null,description:"",name:"commit",required:!0,type:{name:"() => void"}},model:{defaultValue:null,description:"",name:"model",required:!0,type:{name:"WorksheetModel"}},protect:{defaultValue:null,description:"Worksheet protection",name:"protect",required:!0,type:{name:"(password: string, options: Partial<WorksheetProtection>) => Promise<void>"}},unprotect:{defaultValue:null,description:"",name:"unprotect",required:!0,type:{name:"() => void"}},addTable:{defaultValue:null,description:"Add a new table and return a reference to it",name:"addTable",required:!0,type:{name:"(tableProperties: TableProperties) => Table"}},getTable:{defaultValue:null,description:"fetch table by name or id",name:"getTable",required:!0,type:{name:"(name: string) => Table"}},removeTable:{defaultValue:null,description:"delete table by name or id",name:"removeTable",required:!0,type:{name:"(name: string) => void"}},getTables:{defaultValue:null,description:"fetch table",name:"getTables",required:!0,type:{name:"() => [Table, void][]"}},addConditionalFormatting:{defaultValue:null,description:"add conditionalFormattingOptions",name:"addConditionalFormatting",required:!0,type:{name:"(cf: ConditionalFormattingOptions) => void"}},removeConditionalFormatting:{defaultValue:null,description:"delete conditionalFormattingOptions",name:"removeConditionalFormatting",required:!0,type:{name:"(filter: any) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/parser.ts#getColumnDataFromColumns"]={docgenInfo:getColumnDataFromColumns.__docgenInfo,name:"getColumnDataFromColumns",path:"src/tools/parser.ts#getColumnDataFromColumns"})}catch(__react_docgen_typescript_loader_error){}try{getRowDataFromSheet.displayName="getRowDataFromSheet",getRowDataFromSheet.__docgenInfo={description:"",displayName:"getRowDataFromSheet",props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"number"}},name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string"}},workbook:{defaultValue:null,description:"",name:"workbook",required:!0,type:{name:"Workbook"}},hasMerges:{defaultValue:null,description:"",name:"hasMerges",required:!0,type:{name:"boolean"}},dimensions:{defaultValue:null,description:"",name:"dimensions",required:!0,type:{name:"Range"}},pageSetup:{defaultValue:null,description:"Contains information related to how a worksheet is printed",name:"pageSetup",required:!0,type:{name:"Partial<PageSetup>"}},headerFooter:{defaultValue:null,description:"Worksheet Header and Footer",name:"headerFooter",required:!0,type:{name:"Partial<HeaderFooter>"}},state:{defaultValue:null,description:"Worksheet State",name:"state",required:!0,type:{name:"WorksheetState"}},properties:{defaultValue:null,description:"Worksheet Properties",name:"properties",required:!0,type:{name:"WorksheetProperties"}},views:{defaultValue:null,description:"Open panes representing the sheet",name:"views",required:!0,type:{name:"(Partial<WorksheetViewCommon & WorksheetViewNormal> | Partial<WorksheetViewCommon & WorksheetViewFrozen> | Partial<...>)[]"}},autoFilter:{defaultValue:null,description:"Apply an auto filter to your worksheet.",name:"autoFilter",required:!1,type:{name:"AutoFilter"}},destroy:{defaultValue:null,description:"",name:"destroy",required:!0,type:{name:"() => void"}},actualRowCount:{defaultValue:null,description:"A count of the number of rows that have values. If a mid-document row is empty, it will not be included in the count.",name:"actualRowCount",required:!0,type:{name:"number"}},columnCount:{defaultValue:null,description:"The total column size of the document. Equal to the maximum cell count from all of the rows",name:"columnCount",required:!0,type:{name:"number"}},actualColumnCount:{defaultValue:null,description:"A count of the number of columns that have values.",name:"actualColumnCount",required:!0,type:{name:"number"}},getColumnKey:{defaultValue:null,description:"",name:"getColumnKey",required:!0,type:{name:"(key: string) => Partial<Column>"}},setColumnKey:{defaultValue:null,description:"",name:"setColumnKey",required:!0,type:{name:"(key: string, value: Partial<Column>) => void"}},deleteColumnKey:{defaultValue:null,description:"",name:"deleteColumnKey",required:!0,type:{name:"(key: string) => void"}},eachColumnKey:{defaultValue:null,description:"",name:"eachColumnKey",required:!0,type:{name:"(callback: (col: Partial<Column>, index: number) => void) => void"}},getColumn:{defaultValue:null,description:"Access an individual columns by key, letter and 1-based column number",name:"getColumn",required:!0,type:{name:"(indexOrKey: string | number) => Partial<Column>"}},spliceColumns:{defaultValue:null,description:"Cut one or more columns (columns to the right are shifted left)\nand optionally insert more\r\n\r\nIf column properties have been definde, they will be cut or moved accordingly\r\n\r\nKnown Issue: If a splice causes any merged cells to move, the results may be unpredictable\r\n\r\nAlso: If the worksheet has more rows than values in the colulmn inserts,\r\nthe rows will still be shifted as if the values existed",name:"spliceColumns",required:!0,type:{name:"(start: number, count: number, ...insert: any[][]) => void"}},columns:{defaultValue:null,description:"Add column headers and define column keys and widths.\n\r\nNote: these column structures are a workbook-building convenience only,\r\napart from the column width, they will not be fully persisted.",name:"columns",required:!0,type:{name:"Partial<Column>[]"}},rowCount:{defaultValue:null,description:"The total row size of the document. Equal to the row number of the last row that has values.",name:"rowCount",required:!0,type:{name:"number"}},lastRow:{defaultValue:null,description:"Get the last editable row in a worksheet (or undefined if there are none)",name:"lastRow",required:!0,type:{name:"Row"}},findRow:{defaultValue:null,description:"",name:"findRow",required:!0,type:{name:"(row: number) => Row"}},spliceRows:{defaultValue:null,description:"Cut one or more rows (rows below are shifted up)\nand optionally insert more\r\n\r\nKnown Issue: If a splice causes any merged cells to move, the results may be unpredictable",name:"spliceRows",required:!0,type:{name:"(start: number, count: number, ...insert: any[][]) => void"}},addRow:{defaultValue:null,description:"Add a couple of Rows by key-value, after the last current row, using the column keys,\nor add a row by contiguous Array (assign to columns A, B & C)",name:"addRow",required:!0,type:{name:"(data: any, styleOption?: string) => Row"}},addRows:{defaultValue:null,description:"Add multiple rows by providing an array of arrays or key-value pairs",name:"addRows",required:!0,type:{name:"(rows: any[], styleOption?: string) => void"}},insertRow:{defaultValue:null,description:"Insert a Row by key-value, at the pos (shifiting down all rows from pos),\nusing the column keys, or add a row by contiguous Array (assign to columns A, B & C)",name:"insertRow",required:!0,type:{name:"(pos: number, value: any, styleOption?: string) => Row"}},insertRows:{defaultValue:null,description:"Insert multiple rows at pos (shifiting down all rows from pos)\nby providing an array of arrays or key-value pairs",name:"insertRows",required:!0,type:{name:"(pos: number, values: any[], styleOption?: string) => void"}},duplicateRow:{defaultValue:null,description:"Duplicate rows and insert new rows",name:"duplicateRow",required:!0,type:{name:"(rowNum: number, count: number, insert: boolean) => void"}},getRow:{defaultValue:null,description:"Get or create row by 1-based index",name:"getRow",required:!0,type:{name:"(index: number) => Row"}},eachRow:{defaultValue:null,description:"Iterate over all rows that have values in a worksheet\nIterate over all rows (including empty rows) in a worksheet",name:"eachRow",required:!0,type:{name:"{ (callback: (row: Row, rowNumber: number) => void): void; (opt: { includeEmpty: boolean; }, callback: (row: Row, rowNumber: number) => void): void; }"}},getSheetValues:{defaultValue:null,description:"return all rows as sparse array",name:"getSheetValues",required:!0,type:{name:"() => Row[]"}},findCell:{defaultValue:null,description:"returns the cell at [r,c] or address given by r. If not found, return undefined",name:"findCell",required:!0,type:{name:"(r: string | number, c: string | number) => Cell"}},getCell:{defaultValue:null,description:"Get or create cell",name:"getCell",required:!0,type:{name:"(r: string | number, c?: string | number) => Cell"}},mergeCells:{defaultValue:null,description:"Merge cells, either:\n\r\ntlbr string, e.g. `'A4:B5'`\r\n\r\ntl string, br string, e.g. `'G10', 'H11'`\r\n\r\nt, l, b, r numbers, e.g. `10,11,12,13`",name:"mergeCells",required:!0,type:{name:"{ (): void; (v: Range): void; (v: string): void; (v: Location): void; (top: number, left: number, bottom: number, right: number, sheetName?: string): void; (tl: string, br: string, sheetName?: string): void; (v: [...]): void; (v: [...]): void; (v: [...]): void; (v: [...]): void; }"}},mergeCellsWithoutStyle:{defaultValue:null,description:"",name:"mergeCellsWithoutStyle",required:!0,type:{name:"{ (): void; (v: Range): void; (v: string): void; (v: Location): void; (top: number, left: number, bottom: number, right: number, sheetName?: string): void; (tl: string, br: string, sheetName?: string): void; (v: [...]): void; (v: [...]): void; (v: [...]): void; (v: [...]): void; }"}},unMergeCells:{defaultValue:null,description:"unmerging the cells breaks the style links",name:"unMergeCells",required:!0,type:{name:"{ (): void; (v: Range): void; (v: string): void; (v: Location): void; (top: number, left: number, bottom: number, right: number, sheetName?: string): void; (tl: string, br: string, sheetName?: string): void; (v: [...]): void; (v: [...]): void; (v: [...]): void; (v: [...]): void; }"}},fillFormula:{defaultValue:null,description:"",name:"fillFormula",required:!0,type:{name:"(range: string | Range | Location, formula: string, results?: ((r: number, c: number) => string | number) | number[] | number[][]) => void"}},addBackgroundImage:{defaultValue:null,description:"Using the image id from `Workbook.addImage`, set the background to the worksheet",name:"addBackgroundImage",required:!0,type:{name:"(imageId: number) => void"}},getBackgroundImageId:{defaultValue:null,description:"",name:"getBackgroundImageId",required:!0,type:{name:"() => string"}},addImage:{defaultValue:null,description:"Using the image id from `Workbook.addImage`,\nembed an image within the worksheet to cover a range",name:"addImage",required:!0,type:{name:"(imageId: number, range: string | ({ editAs?: string; } & ImageRange & { hyperlinks?: ImageHyperlinkValue; }) | ({ editAs?: string; } & ImagePosition & { ...; })) => void"}},getImages:{defaultValue:null,description:"",name:"getImages",required:!0,type:{name:'() => { type: "image"; imageId: string; range: ImageRange; }[]'}},commit:{defaultValue:null,description:"",name:"commit",required:!0,type:{name:"() => void"}},model:{defaultValue:null,description:"",name:"model",required:!0,type:{name:"WorksheetModel"}},protect:{defaultValue:null,description:"Worksheet protection",name:"protect",required:!0,type:{name:"(password: string, options: Partial<WorksheetProtection>) => Promise<void>"}},unprotect:{defaultValue:null,description:"",name:"unprotect",required:!0,type:{name:"() => void"}},addTable:{defaultValue:null,description:"Add a new table and return a reference to it",name:"addTable",required:!0,type:{name:"(tableProperties: TableProperties) => Table"}},getTable:{defaultValue:null,description:"fetch table by name or id",name:"getTable",required:!0,type:{name:"(name: string) => Table"}},removeTable:{defaultValue:null,description:"delete table by name or id",name:"removeTable",required:!0,type:{name:"(name: string) => void"}},getTables:{defaultValue:null,description:"fetch table",name:"getTables",required:!0,type:{name:"() => [Table, void][]"}},addConditionalFormatting:{defaultValue:null,description:"add conditionalFormattingOptions",name:"addConditionalFormatting",required:!0,type:{name:"(cf: ConditionalFormattingOptions) => void"}},removeConditionalFormatting:{defaultValue:null,description:"delete conditionalFormattingOptions",name:"removeConditionalFormatting",required:!0,type:{name:"(filter: any) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/parser.ts#getRowDataFromSheet"]={docgenInfo:getRowDataFromSheet.__docgenInfo,name:"getRowDataFromSheet",path:"src/tools/parser.ts#getRowDataFromSheet"})}catch(__react_docgen_typescript_loader_error){}try{createStateFromWorkbook.displayName="createStateFromWorkbook",createStateFromWorkbook.__docgenInfo={description:"",displayName:"createStateFromWorkbook",props:{creator:{defaultValue:null,description:"",name:"creator",required:!0,type:{name:"string"}},lastModifiedBy:{defaultValue:null,description:"",name:"lastModifiedBy",required:!0,type:{name:"string"}},created:{defaultValue:null,description:"",name:"created",required:!0,type:{name:"Date"}},modified:{defaultValue:null,description:"",name:"modified",required:!0,type:{name:"Date"}},lastPrinted:{defaultValue:null,description:"",name:"lastPrinted",required:!0,type:{name:"Date"}},properties:{defaultValue:null,description:"",name:"properties",required:!0,type:{name:"WorkbookProperties"}},calcProperties:{defaultValue:null,description:"Workbook calculation Properties",name:"calcProperties",required:!0,type:{name:"CalculationProperties"}},xlsx:{defaultValue:null,description:"xlsx file format operations",name:"xlsx",required:!0,type:{name:"Xlsx"}},csv:{defaultValue:null,description:"csv file format operations",name:"csv",required:!0,type:{name:"Csv"}},nextId:{defaultValue:null,description:"",name:"nextId",required:!0,type:{name:"number"}},definedNames:{defaultValue:null,description:"",name:"definedNames",required:!0,type:{name:"DefinedNames"}},model:{defaultValue:null,description:"",name:"model",required:!0,type:{name:"WorkbookModel"}},views:{defaultValue:null,description:"The Workbook views controls how many separate windows Excel will open when viewing the workbook.",name:"views",required:!0,type:{name:"WorkbookView[]"}},worksheets:{defaultValue:null,description:"return a clone of worksheets in order",name:"worksheets",required:!0,type:{name:"Worksheet[]"}},addWorksheet:{defaultValue:null,description:"Add a new worksheet and return a reference to it",name:"addWorksheet",required:!0,type:{name:"(name?: string, options?: Partial<AddWorksheetOptions>) => Worksheet"}},removeWorksheetEx:{defaultValue:null,description:"",name:"removeWorksheetEx",required:!0,type:{name:"(worksheet: Worksheet) => void"}},removeWorksheet:{defaultValue:null,description:"",name:"removeWorksheet",required:!0,type:{name:"(indexOrName: string | number) => void"}},getWorksheet:{defaultValue:null,description:"fetch sheet by name or id",name:"getWorksheet",required:!0,type:{name:"(indexOrName: string | number) => Worksheet"}},eachSheet:{defaultValue:null,description:"Iterate over all sheets.\n\r\nNote: `workbook.worksheets.forEach` will still work but this is better.",name:"eachSheet",required:!0,type:{name:"(callback: (worksheet: Worksheet, id: number) => void) => void"}},clearThemes:{defaultValue:null,description:"",name:"clearThemes",required:!0,type:{name:"() => void"}},addImage:{defaultValue:null,description:"Add Image to Workbook and return the id",name:"addImage",required:!0,type:{name:"(img: Image) => number"}},getImage:{defaultValue:null,description:"",name:"getImage",required:!0,type:{name:"(id: number) => Image"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/parser.ts#createStateFromWorkbook"]={docgenInfo:createStateFromWorkbook.__docgenInfo,name:"createStateFromWorkbook",path:"src/tools/parser.ts#createStateFromWorkbook"})}catch(__react_docgen_typescript_loader_error){}},264:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return isFloat}));var isFloat=function isFloat(n){return n===+n&&n!==(0|n)},isInteger=function isInteger(n){return n===+n&&n===(0|n)};try{isFloat.displayName="isFloat",isFloat.__docgenInfo={description:"",displayName:"isFloat",props:{toString:{defaultValue:null,description:"Returns a string representation of an object.\n@param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.",name:"toString",required:!1,type:{name:"(radix?: number) => string"}},toFixed:{defaultValue:null,description:"Returns a string representing a number in fixed-point notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toFixed",required:!0,type:{name:"(fractionDigits?: number) => string"}},toExponential:{defaultValue:null,description:"Returns a string containing a number represented in exponential notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toExponential",required:!0,type:{name:"(fractionDigits?: number) => string"}},toPrecision:{defaultValue:null,description:"Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.\n@param precision Number of significant digits. Must be in the range 1 - 21, inclusive.",name:"toPrecision",required:!0,type:{name:"(precision?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => number"}},toLocaleString:{defaultValue:null,description:"Converts a number to a string by using the current or specified locale.\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n@param options An object that contains one or more properties that specify comparison options.",name:"toLocaleString",required:!1,type:{name:"(locales?: string | string[], options?: NumberFormatOptions) => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/validation.ts#isFloat"]={docgenInfo:isFloat.__docgenInfo,name:"isFloat",path:"src/tools/validation.ts#isFloat"})}catch(__react_docgen_typescript_loader_error){}try{isInteger.displayName="isInteger",isInteger.__docgenInfo={description:"",displayName:"isInteger",props:{toString:{defaultValue:null,description:"Returns a string representation of an object.\n@param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.",name:"toString",required:!1,type:{name:"(radix?: number) => string"}},toFixed:{defaultValue:null,description:"Returns a string representing a number in fixed-point notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toFixed",required:!0,type:{name:"(fractionDigits?: number) => string"}},toExponential:{defaultValue:null,description:"Returns a string containing a number represented in exponential notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toExponential",required:!0,type:{name:"(fractionDigits?: number) => string"}},toPrecision:{defaultValue:null,description:"Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.\n@param precision Number of significant digits. Must be in the range 1 - 21, inclusive.",name:"toPrecision",required:!0,type:{name:"(precision?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => number"}},toLocaleString:{defaultValue:null,description:"Converts a number to a string by using the current or specified locale.\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n@param options An object that contains one or more properties that specify comparison options.",name:"toLocaleString",required:!1,type:{name:"(locales?: string | string[], options?: NumberFormatOptions) => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/validation.ts#isInteger"]={docgenInfo:isInteger.__docgenInfo,name:"isInteger",path:"src/tools/validation.ts#isInteger"})}catch(__react_docgen_typescript_loader_error){}},265:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return applyTintToColor}));var applyTintToColor=function applyTintToColor(color,ratio){return(color=ratio>=0?function lightenBy(color,ratio){var lightness=color.lightness();return color.lightness(lightness+(100-lightness)*ratio)}(color,ratio):function darkenBy(color,ratio){return color.lightness(color.lightness()*(1-ratio))}(color,-ratio)).hex()}},266:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return generateNewSheetName}));__webpack_require__(52),__webpack_require__(77),__webpack_require__(201),__webpack_require__(53);var _regex__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(97),generateNewSheetName=function generateNewSheetName(sheetNames){var uniqueSheetNumber=sheetNames.length+1;return sheetNames.forEach((function(name){var match=name.match(_regex__WEBPACK_IMPORTED_MODULE_4__.e);match&&uniqueSheetNumber<=+match[1]&&(uniqueSheetNumber=Math.max(uniqueSheetNumber,+match[1]+1))})),"Sheet"+uniqueSheetNumber};try{generateNewSheetName.displayName="generateNewSheetName",generateNewSheetName.__docgenInfo={description:"",displayName:"generateNewSheetName",props:{length:{defaultValue:null,description:"Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.",name:"length",required:!0,type:{name:"number"}},toString:{defaultValue:null,description:"Returns a string representation of an array.",name:"toString",required:!1,type:{name:"() => string"}},toLocaleString:{defaultValue:null,description:"Returns a string representation of an array. The elements are converted to string using their toLocalString methods.",name:"toLocaleString",required:!1,type:{name:"() => string"}},pop:{defaultValue:null,description:"Removes the last element from an array and returns it.",name:"pop",required:!0,type:{name:"() => string"}},push:{defaultValue:null,description:"Appends new elements to an array, and returns the new length of the array.\n@param items New elements of the Array.",name:"push",required:!0,type:{name:"(...items: string[]) => number"}},concat:{defaultValue:null,description:"Combines two or more arrays.\nCombines two or more arrays.\n@param items Additional items to add to the end of array1.\n@param items Additional items to add to the end of array1.",name:"concat",required:!0,type:{name:"{ (...items: ConcatArray<string>[]): string[]; (...items: (string | ConcatArray<string>)[]): string[]; }"}},join:{defaultValue:null,description:"Adds all the elements of an array separated by the specified separator string.\n@param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.",name:"join",required:!0,type:{name:"(separator?: string) => string"}},reverse:{defaultValue:null,description:"Reverses the elements in an Array.",name:"reverse",required:!0,type:{name:"() => string[]"}},shift:{defaultValue:null,description:"Removes the first element from an array and returns it.",name:"shift",required:!0,type:{name:"() => string"}},slice:{defaultValue:null,description:"Returns a section of an array.\n@param start The beginning of the specified portion of the array.\n@param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string[]"}},sort:{defaultValue:null,description:"Sorts an array.\n@param compareFn Function used to determine the order of the elements. It is expected to return\ra negative value if first argument is less than second argument, zero if they're equal and a positive\rvalue otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\r```ts\r[11,2,22,1].sort((a, b) => a - b)\r```",name:"sort",required:!0,type:{name:"(compareFn?: (a: string, b: string) => number) => ISheetNames"}},splice:{defaultValue:null,description:"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\nRemoves elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\n@param start The zero-based location in the array from which to start removing elements.\n@param deleteCount The number of elements to remove.\n@param start The zero-based location in the array from which to start removing elements.\n@param deleteCount The number of elements to remove.\n@param items Elements to insert into the array in place of the deleted elements.",name:"splice",required:!0,type:{name:"{ (start: number, deleteCount?: number): string[]; (start: number, deleteCount: number, ...items: string[]): string[]; }"}},unshift:{defaultValue:null,description:"Inserts new elements at the start of an array.\n@param items Elements to insert at the start of the Array.",name:"unshift",required:!0,type:{name:"(...items: string[]) => number"}},indexOf:{defaultValue:null,description:"Returns the index of the first occurrence of a value in an array.\n@param searchElement The value to locate in the array.\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.",name:"indexOf",required:!0,type:{name:"(searchElement: string, fromIndex?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the index of the last occurrence of a specified value in an array.\n@param searchElement The value to locate in the array.\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.",name:"lastIndexOf",required:!0,type:{name:"(searchElement: string, fromIndex?: number) => number"}},every:{defaultValue:null,description:"Determines whether all the members of an array satisfy the specified test.\n@param callbackfn A function that accepts up to three arguments. The every method calls\rthe callbackfn function for each element in the array until the callbackfn returns a value\rwhich is coercible to the Boolean value false, or until the end of the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.",name:"every",required:!0,type:{name:"(callbackfn: (value: string, index: number, array: string[]) => unknown, thisArg?: any) => boolean"}},some:{defaultValue:null,description:"Determines whether the specified callback function returns true for any element of an array.\n@param callbackfn A function that accepts up to three arguments. The some method calls\rthe callbackfn function for each element in the array until the callbackfn returns a value\rwhich is coercible to the Boolean value true, or until the end of the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.",name:"some",required:!0,type:{name:"(callbackfn: (value: string, index: number, array: string[]) => unknown, thisArg?: any) => boolean"}},forEach:{defaultValue:null,description:"Performs the specified action for each element in an array.\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"forEach",required:!0,type:{name:"(callbackfn: (value: string, index: number, array: string[]) => void, thisArg?: any) => void"}},map:{defaultValue:null,description:"Calls a defined callback function on each element of an array, and returns an array that contains the results.\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"map",required:!0,type:{name:"<U>(callbackfn: (value: string, index: number, array: string[]) => U, thisArg?: any) => U[]"}},filter:{defaultValue:null,description:"Returns the elements of an array that meet the condition specified in a callback function.\nReturns the elements of an array that meet the condition specified in a callback function.\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"filter",required:!0,type:{name:"{ <S extends string>(callbackfn: (value: string, index: number, array: string[]) => value is S, thisArg?: any): S[]; (callbackfn: (value: string, index: number, array: string[]) => unknown, thisArg?: any): string[]; }"}},reduce:{defaultValue:null,description:"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",name:"reduce",required:!0,type:{name:"{ (callbackfn: (previousValue: string, currentValue: string, currentIndex: number, array: string[]) => string): string; (callbackfn: (previousValue: string, currentValue: string, currentIndex: number, array: string[]) => string, initialValue: string): string; <U>(callbackfn: (previousValue: U, currentValue: string, ..."}},reduceRight:{defaultValue:null,description:"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",name:"reduceRight",required:!0,type:{name:"{ (callbackfn: (previousValue: string, currentValue: string, currentIndex: number, array: string[]) => string): string; (callbackfn: (previousValue: string, currentValue: string, currentIndex: number, array: string[]) => string, initialValue: string): string; <U>(callbackfn: (previousValue: U, currentValue: string, ..."}},find:{defaultValue:null,description:"Returns the value of the first element in the array where predicate is true, and undefined\notherwise.\n@param predicate find calls predicate once for each element of the array, in ascending\rorder, until it finds one where predicate returns true. If such an element is found, find\rimmediately returns that element value. Otherwise, find returns undefined.\n@param thisArg If provided, it will be used as the this value for each invocation of\rpredicate. If it is not provided, undefined is used instead.",name:"find",required:!0,type:{name:"{ <S extends string>(predicate: (this: void, value: string, index: number, obj: string[]) => value is S, thisArg?: any): S; (predicate: (value: string, index: number, obj: string[]) => unknown, thisArg?: any): string; }"}},findIndex:{defaultValue:null,description:"Returns the index of the first element in the array where predicate is true, and -1\notherwise.\n@param predicate find calls predicate once for each element of the array, in ascending\rorder, until it finds one where predicate returns true. If such an element is found,\rfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\n@param thisArg If provided, it will be used as the this value for each invocation of\rpredicate. If it is not provided, undefined is used instead.",name:"findIndex",required:!0,type:{name:"(predicate: (value: string, index: number, obj: string[]) => unknown, thisArg?: any) => number"}},fill:{defaultValue:null,description:"Returns the this object after filling the section identified by start and end with value\n@param value value to fill array section with\n@param start index to start filling the array at. If start is negative, it is treated as\rlength+start where length is the length of the array.\n@param end index to stop filling the array at. If end is negative, it is treated as\rlength+end.",name:"fill",required:!0,type:{name:"(value: string, start?: number, end?: number) => ISheetNames"}},copyWithin:{defaultValue:null,description:"Returns the this object after copying a section of the array identified by start and end\nto the same array starting at position target\n@param target If target is negative, it is treated as length+target where length is the\rlength of the array.\n@param start If start is negative, it is treated as length+start. If end is negative, it\ris treated as length+end.\n@param end If not specified, length of the this object is used as its default value.",name:"copyWithin",required:!0,type:{name:"(target: number, start: number, end?: number) => ISheetNames"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},entries:{defaultValue:null,description:"Returns an iterable of key, value pairs for every entry in the array",name:"entries",required:!0,type:{name:"() => IterableIterator<[number, string]>"}},keys:{defaultValue:null,description:"Returns an iterable of keys in the array",name:"keys",required:!0,type:{name:"() => IterableIterator<number>"}},values:{defaultValue:null,description:"Returns an iterable of values in the array",name:"values",required:!0,type:{name:"() => IterableIterator<string>"}},"__@unscopables":{defaultValue:null,description:"Returns an object whose properties have the value 'true'\nwhen they will be absent when used in a 'with' statement.",name:"__@unscopables",required:!0,type:{name:"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }"}},includes:{defaultValue:null,description:"Determines whether an array includes a certain element, returning true or false as appropriate.\n@param searchElement The element to search for.\n@param fromIndex The position in this array at which to begin searching for searchElement.",name:"includes",required:!0,type:{name:"(searchElement: string, fromIndex?: number) => boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/sheet.ts#generateNewSheetName"]={docgenInfo:generateNewSheetName.__docgenInfo,name:"generateNewSheetName",path:"src/tools/sheet.ts#generateNewSheetName"})}catch(__react_docgen_typescript_loader_error){}},357:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__(41);var react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__),draft_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(28),_src_Excel__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(272),_samples_formulas_json__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(558),_src_redux_store__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(7),_src_redux_selectors_base__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(4),_src_tools_formula_formula__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(90),__assign=function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},initialState=Object(_src_tools_formula_formula__WEBPACK_IMPORTED_MODULE_7__.d)(__assign(__assign(__assign({},_src_redux_store__WEBPACK_IMPORTED_MODULE_5__.c),Object(_src_redux_selectors_base__WEBPACK_IMPORTED_MODULE_6__.k)(JSON.parse(JSON.stringify(_samples_formulas_json__WEBPACK_IMPORTED_MODULE_4__)))),{cellEditorState:draft_js__WEBPACK_IMPORTED_MODULE_2__.EditorState.createEmpty()}));__webpack_exports__.default=function Formulas(){return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_src_Excel__WEBPACK_IMPORTED_MODULE_3__.a,{key:"formula",initialState:initialState})}},358:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_src_Excel__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(272);__webpack_exports__.default=function NonRoute(){return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_src_Excel__WEBPACK_IMPORTED_MODULE_1__.a,null)}},364:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return getPositionFromCellId}));__webpack_require__(77),__webpack_require__(247);var getPositionFromCellId=function getPositionFromCellId(currentTarget){var _a=currentTarget.attrs.id.split("="),type=_a[0],address=_a[1];return{type:type,position:JSON.parse(address)}};try{getPositionFromCellId.displayName="getPositionFromCellId",getPositionFromCellId.__docgenInfo={description:"",displayName:"getPositionFromCellId",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/konva.ts#getPositionFromCellId"]={docgenInfo:getPositionFromCellId.__docgenInfo,name:"getPositionFromCellId",path:"src/tools/konva.ts#getPositionFromCellId"})}catch(__react_docgen_typescript_loader_error){}},42:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"i",(function(){return getMinPositionFromArea})),__webpack_require__.d(__webpack_exports__,"c",(function(){return checkIsPositionEqualOtherPosition})),__webpack_require__.d(__webpack_exports__,"e",(function(){return getAreaFromPosition})),__webpack_require__.d(__webpack_exports__,"b",(function(){return checkIsAreaEqualPosition})),__webpack_require__.d(__webpack_exports__,"k",(function(){return getOrderedAreaFromPositions})),__webpack_require__.d(__webpack_exports__,"j",(function(){return getOrderedAreaFromArea})),__webpack_require__.d(__webpack_exports__,"a",(function(){return checkIsAreaEqualOtherArea})),__webpack_require__.d(__webpack_exports__,"f",(function(){return getAreaRanges})),__webpack_require__.d(__webpack_exports__,"d",(function(){return getAndAddArea})),__webpack_require__.d(__webpack_exports__,"h",(function(){return getCellMapSetFromAreas})),__webpack_require__.d(__webpack_exports__,"g",(function(){return getAreaStyleDimension}));__webpack_require__(350),__webpack_require__(52),__webpack_require__(68),__webpack_require__(104),__webpack_require__(41),__webpack_require__(48),__webpack_require__(199),__webpack_require__(78),__webpack_require__(53),__webpack_require__(79),__webpack_require__(109),__webpack_require__(23);var __assign=function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},__spreadArrays=function(){for(var s=0,i=0,il=arguments.length;i<il;i++)s+=arguments[i].length;var r=Array(s),k=0;for(i=0;i<il;i++)for(var a=arguments[i],j=0,jl=a.length;j<jl;j++,k++)r[k]=a[j];return r},getMinPositionFromArea=function getMinPositionFromArea(_a){var start=_a.start,end=_a.end;return{x:Math.min(start.x,end.x),y:Math.min(start.y,end.y)}},getMaxPositionFromArea=function getMaxPositionFromArea(_a){var start=_a.start,end=_a.end;return{x:Math.max(start.x,end.x),y:Math.max(start.y,end.y)}},getAreaRangesFromOrderedArea=function getAreaRangesFromOrderedArea(orderedArea){return{xRange:{start:orderedArea.start.x,end:orderedArea.end.x},yRange:{start:orderedArea.start.y,end:orderedArea.end.y}}},checkIsPositionEqualOtherPosition=function checkIsPositionEqualOtherPosition(position,otherPosition){return position.x===otherPosition.x&&position.y===otherPosition.y},getAreaFromPosition=function getAreaFromPosition(position){return{start:__assign({},position),end:__assign({},position)}},checkIsAreaEqualPosition=function checkIsAreaEqualPosition(_a){var start=_a.start,end=_a.end;return start.x===end.x&&start.y===end.y},checkIsRangeContainedInOtherRange=function checkIsRangeContainedInOtherRange(range,otherRange){return otherRange.start<=range.start&&range.end<=otherRange.end},getOrderedAreaFromPositions=function getOrderedAreaFromPositions(position,position2){return{start:{x:Math.min(position.x,position2.x),y:Math.min(position.y,position2.y)},end:{x:Math.max(position.x,position2.x),y:Math.max(position.y,position2.y)}}},getOrderedAreaFromArea=function getOrderedAreaFromArea(area){return{start:getMinPositionFromArea(area),end:getMaxPositionFromArea(area)}},checkIsAreaEqualOtherArea=function checkIsAreaEqualOtherArea(area,otherArea){var orderedArea=getOrderedAreaFromArea(area),otherOrderedArea=getOrderedAreaFromArea(otherArea);return checkIsPositionEqualOtherPosition(orderedArea.start,otherOrderedArea.start)&&checkIsPositionEqualOtherPosition(orderedArea.end,otherOrderedArea.end)},getAreaRanges=function getAreaRanges(area){var orderedArea=getOrderedAreaFromArea(area);return getAreaRangesFromOrderedArea(orderedArea)},getAndAddAreaFromSuperAreaIndex=function getAndAddAreaFromSuperAreaIndex(superAreaIndex,area,areas){return __spreadArrays(areas.slice(0,superAreaIndex),function getAreaDifference(areaToSubtract,area){var areaDifference=[],areaRange=getAreaRanges(area),areaToSubtractRange=getAreaRanges(areaToSubtract),minSX=areaRange.xRange.start,midLeftSX=areaToSubtractRange.xRange.start,midRightSX=areaToSubtractRange.xRange.end,maxSX=areaRange.xRange.end,minSY=areaRange.yRange.start,midTopSY=areaToSubtractRange.yRange.start,midBottomSY=areaToSubtractRange.yRange.end,maxSY=areaRange.yRange.end;return minSY!==midTopSY&&areaDifference.push({start:{x:minSX,y:minSY},end:{x:maxSX,y:midTopSY-1}}),minSX!==midLeftSX&&areaDifference.push({start:{x:minSX,y:midTopSY},end:{x:midLeftSX-1,y:midBottomSY}}),maxSX!==midRightSX&&areaDifference.push({start:{x:midRightSX+1,y:midTopSY},end:{x:maxSX,y:midBottomSY}}),maxSY!==midBottomSY&&areaDifference.push({start:{x:minSX,y:midBottomSY+1},end:{x:maxSX,y:maxSY}}),areaDifference}(area,areas[superAreaIndex]),areas.slice(superAreaIndex+1))},getFirstSuperAreaIndex=function getFirstSuperAreaIndex(area,areas){var orderedArea=getOrderedAreaFromArea(area),areaRanges=getAreaRangesFromOrderedArea(orderedArea);return areas.findIndex((function(elementArea){var potentialSuperArea=getOrderedAreaFromArea(elementArea),potentialSuperAreaRanges=getAreaRangesFromOrderedArea(potentialSuperArea);return function checkIsAreaRangeContainedInOtherAreaRange(areaRange,otherAreaRange){return checkIsRangeContainedInOtherRange(areaRange.xRange,otherAreaRange.xRange)&&checkIsRangeContainedInOtherRange(areaRange.yRange,otherAreaRange.yRange)}(areaRanges,potentialSuperAreaRanges)}))},getAndAddArea=function getAndAddArea(area,areas){var superAreaIndex=getFirstSuperAreaIndex(area,areas);return{superAreaIndex:superAreaIndex,newAreas:superAreaIndex>-1?getAndAddAreaFromSuperAreaIndex(superAreaIndex,area,areas):__spreadArrays(areas,[area])}},getCellMapSetFromAreas=function getCellMapSetFromAreas(areas){var cellMapSet={};return areas.forEach((function(area){for(var _a=getAreaRanges(area),xRange=_a.xRange,yRange=_a.yRange,rowIndex=yRange.start;rowIndex<=yRange.end;rowIndex+=1){cellMapSet[rowIndex]||(cellMapSet[rowIndex]=new Set);for(var columnIndex=xRange.start;columnIndex<=xRange.end;columnIndex+=1)cellMapSet[rowIndex].add(columnIndex)}})),cellMapSet},getAreaStyleDimension=function getAreaStyleDimension(selectionArea,columnStart,rowStart,columnOffsets,columnStartBound,rowOffsets,rowStartBound,columnEnd,rowEnd){var orderedArea=getOrderedAreaFromArea(selectionArea);orderedArea.start.x=Math.max(columnStart,orderedArea.start.x),orderedArea.start.y=Math.max(rowStart,orderedArea.start.y);var x=columnOffsets[orderedArea.start.x]-columnOffsets[columnStart]+columnOffsets[columnStartBound],y=rowOffsets[orderedArea.start.y]-rowOffsets[rowStart]+rowOffsets[rowStartBound];return{width:Math.min(columnOffsets[columnEnd]-x,columnOffsets[orderedArea.end.x+1]-columnOffsets[orderedArea.start.x]),height:Math.min(rowOffsets[rowEnd]-y,rowOffsets[orderedArea.end.y+1]-rowOffsets[orderedArea.start.y]),x:x,y:y}};try{getMinPositionFromArea.displayName="getMinPositionFromArea",getMinPositionFromArea.__docgenInfo={description:"",displayName:"getMinPositionFromArea",props:{start:{defaultValue:null,description:"",name:"start",required:!0,type:{name:"IPosition"}},end:{defaultValue:null,description:"",name:"end",required:!0,type:{name:"IPosition"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/area.ts#getMinPositionFromArea"]={docgenInfo:getMinPositionFromArea.__docgenInfo,name:"getMinPositionFromArea",path:"src/tools/area.ts#getMinPositionFromArea"})}catch(__react_docgen_typescript_loader_error){}try{getMaxPositionFromArea.displayName="getMaxPositionFromArea",getMaxPositionFromArea.__docgenInfo={description:"",displayName:"getMaxPositionFromArea",props:{start:{defaultValue:null,description:"",name:"start",required:!0,type:{name:"IPosition"}},end:{defaultValue:null,description:"",name:"end",required:!0,type:{name:"IPosition"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/area.ts#getMaxPositionFromArea"]={docgenInfo:getMaxPositionFromArea.__docgenInfo,name:"getMaxPositionFromArea",path:"src/tools/area.ts#getMaxPositionFromArea"})}catch(__react_docgen_typescript_loader_error){}try{getAreaRangesFromOrderedArea.displayName="getAreaRangesFromOrderedArea",getAreaRangesFromOrderedArea.__docgenInfo={description:"",displayName:"getAreaRangesFromOrderedArea",props:{start:{defaultValue:null,description:"",name:"start",required:!0,type:{name:"IPosition"}},end:{defaultValue:null,description:"",name:"end",required:!0,type:{name:"IPosition"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/area.ts#getAreaRangesFromOrderedArea"]={docgenInfo:getAreaRangesFromOrderedArea.__docgenInfo,name:"getAreaRangesFromOrderedArea",path:"src/tools/area.ts#getAreaRangesFromOrderedArea"})}catch(__react_docgen_typescript_loader_error){}try{getAreaFromPosition.displayName="getAreaFromPosition",getAreaFromPosition.__docgenInfo={description:"",displayName:"getAreaFromPosition",props:{x:{defaultValue:null,description:"",name:"x",required:!0,type:{name:"number"}},y:{defaultValue:null,description:"",name:"y",required:!0,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/area.ts#getAreaFromPosition"]={docgenInfo:getAreaFromPosition.__docgenInfo,name:"getAreaFromPosition",path:"src/tools/area.ts#getAreaFromPosition"})}catch(__react_docgen_typescript_loader_error){}try{checkIsAreaEqualPosition.displayName="checkIsAreaEqualPosition",checkIsAreaEqualPosition.__docgenInfo={description:"",displayName:"checkIsAreaEqualPosition",props:{start:{defaultValue:null,description:"",name:"start",required:!0,type:{name:"IPosition"}},end:{defaultValue:null,description:"",name:"end",required:!0,type:{name:"IPosition"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/area.ts#checkIsAreaEqualPosition"]={docgenInfo:checkIsAreaEqualPosition.__docgenInfo,name:"checkIsAreaEqualPosition",path:"src/tools/area.ts#checkIsAreaEqualPosition"})}catch(__react_docgen_typescript_loader_error){}try{getOrderedAreaFromArea.displayName="getOrderedAreaFromArea",getOrderedAreaFromArea.__docgenInfo={description:"",displayName:"getOrderedAreaFromArea",props:{start:{defaultValue:null,description:"",name:"start",required:!0,type:{name:"IPosition"}},end:{defaultValue:null,description:"",name:"end",required:!0,type:{name:"IPosition"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/area.ts#getOrderedAreaFromArea"]={docgenInfo:getOrderedAreaFromArea.__docgenInfo,name:"getOrderedAreaFromArea",path:"src/tools/area.ts#getOrderedAreaFromArea"})}catch(__react_docgen_typescript_loader_error){}try{getAreaRanges.displayName="getAreaRanges",getAreaRanges.__docgenInfo={description:"",displayName:"getAreaRanges",props:{start:{defaultValue:null,description:"",name:"start",required:!0,type:{name:"IPosition"}},end:{defaultValue:null,description:"",name:"end",required:!0,type:{name:"IPosition"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/area.ts#getAreaRanges"]={docgenInfo:getAreaRanges.__docgenInfo,name:"getAreaRanges",path:"src/tools/area.ts#getAreaRanges"})}catch(__react_docgen_typescript_loader_error){}try{getFirstSuperAreaIndex.displayName="getFirstSuperAreaIndex",getFirstSuperAreaIndex.__docgenInfo={description:"Finds the index of the first superset of area",displayName:"getFirstSuperAreaIndex",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/area.ts#getFirstSuperAreaIndex"]={docgenInfo:getFirstSuperAreaIndex.__docgenInfo,name:"getFirstSuperAreaIndex",path:"src/tools/area.ts#getFirstSuperAreaIndex"})}catch(__react_docgen_typescript_loader_error){}try{getCellMapSetFromAreas.displayName="getCellMapSetFromAreas",getCellMapSetFromAreas.__docgenInfo={description:"",displayName:"getCellMapSetFromAreas",props:{length:{defaultValue:null,description:"Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.",name:"length",required:!0,type:{name:"number"}},toString:{defaultValue:null,description:"Returns a string representation of an array.",name:"toString",required:!1,type:{name:"() => string"}},toLocaleString:{defaultValue:null,description:"Returns a string representation of an array. The elements are converted to string using their toLocalString methods.",name:"toLocaleString",required:!1,type:{name:"() => string"}},pop:{defaultValue:null,description:"Removes the last element from an array and returns it.",name:"pop",required:!0,type:{name:"() => IArea"}},push:{defaultValue:null,description:"Appends new elements to an array, and returns the new length of the array.\n@param items New elements of the Array.",name:"push",required:!0,type:{name:"(...items: IArea[]) => number"}},concat:{defaultValue:null,description:"Combines two or more arrays.\nCombines two or more arrays.\n@param items Additional items to add to the end of array1.\n@param items Additional items to add to the end of array1.",name:"concat",required:!0,type:{name:"{ (...items: ConcatArray<IArea>[]): IArea[]; (...items: (IArea | ConcatArray<IArea>)[]): IArea[]; }"}},join:{defaultValue:null,description:"Adds all the elements of an array separated by the specified separator string.\n@param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.",name:"join",required:!0,type:{name:"(separator?: string) => string"}},reverse:{defaultValue:null,description:"Reverses the elements in an Array.",name:"reverse",required:!0,type:{name:"() => IArea[]"}},shift:{defaultValue:null,description:"Removes the first element from an array and returns it.",name:"shift",required:!0,type:{name:"() => IArea"}},slice:{defaultValue:null,description:"Returns a section of an array.\n@param start The beginning of the specified portion of the array.\n@param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => IArea[]"}},sort:{defaultValue:null,description:"Sorts an array.\n@param compareFn Function used to determine the order of the elements. It is expected to return\ra negative value if first argument is less than second argument, zero if they're equal and a positive\rvalue otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\r```ts\r[11,2,22,1].sort((a, b) => a - b)\r```",name:"sort",required:!0,type:{name:"(compareFn?: (a: IArea, b: IArea) => number) => IArea[]"}},splice:{defaultValue:null,description:"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\nRemoves elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\n@param start The zero-based location in the array from which to start removing elements.\n@param deleteCount The number of elements to remove.\n@param start The zero-based location in the array from which to start removing elements.\n@param deleteCount The number of elements to remove.\n@param items Elements to insert into the array in place of the deleted elements.",name:"splice",required:!0,type:{name:"{ (start: number, deleteCount?: number): IArea[]; (start: number, deleteCount: number, ...items: IArea[]): IArea[]; }"}},unshift:{defaultValue:null,description:"Inserts new elements at the start of an array.\n@param items Elements to insert at the start of the Array.",name:"unshift",required:!0,type:{name:"(...items: IArea[]) => number"}},indexOf:{defaultValue:null,description:"Returns the index of the first occurrence of a value in an array.\n@param searchElement The value to locate in the array.\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.",name:"indexOf",required:!0,type:{name:"(searchElement: IArea, fromIndex?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the index of the last occurrence of a specified value in an array.\n@param searchElement The value to locate in the array.\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.",name:"lastIndexOf",required:!0,type:{name:"(searchElement: IArea, fromIndex?: number) => number"}},every:{defaultValue:null,description:"Determines whether all the members of an array satisfy the specified test.\n@param callbackfn A function that accepts up to three arguments. The every method calls\rthe callbackfn function for each element in the array until the callbackfn returns a value\rwhich is coercible to the Boolean value false, or until the end of the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.",name:"every",required:!0,type:{name:"(callbackfn: (value: IArea, index: number, array: IArea[]) => unknown, thisArg?: any) => boolean"}},some:{defaultValue:null,description:"Determines whether the specified callback function returns true for any element of an array.\n@param callbackfn A function that accepts up to three arguments. The some method calls\rthe callbackfn function for each element in the array until the callbackfn returns a value\rwhich is coercible to the Boolean value true, or until the end of the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.",name:"some",required:!0,type:{name:"(callbackfn: (value: IArea, index: number, array: IArea[]) => unknown, thisArg?: any) => boolean"}},forEach:{defaultValue:null,description:"Performs the specified action for each element in an array.\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"forEach",required:!0,type:{name:"(callbackfn: (value: IArea, index: number, array: IArea[]) => void, thisArg?: any) => void"}},map:{defaultValue:null,description:"Calls a defined callback function on each element of an array, and returns an array that contains the results.\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"map",required:!0,type:{name:"<U>(callbackfn: (value: IArea, index: number, array: IArea[]) => U, thisArg?: any) => U[]"}},filter:{defaultValue:null,description:"Returns the elements of an array that meet the condition specified in a callback function.\nReturns the elements of an array that meet the condition specified in a callback function.\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"filter",required:!0,type:{name:"{ <S extends IArea>(callbackfn: (value: IArea, index: number, array: IArea[]) => value is S, thisArg?: any): S[]; (callbackfn: (value: IArea, index: number, array: IArea[]) => unknown, thisArg?: any): IArea[]; }"}},reduce:{defaultValue:null,description:"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",name:"reduce",required:!0,type:{name:"{ (callbackfn: (previousValue: IArea, currentValue: IArea, currentIndex: number, array: IArea[]) => IArea): IArea; (callbackfn: (previousValue: IArea, currentValue: IArea, currentIndex: number, array: IArea[]) => IArea, initialValue: IArea): IArea; <U>(callbackfn: (previousValue: U, currentValue: IArea, currentIndex..."}},reduceRight:{defaultValue:null,description:"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",name:"reduceRight",required:!0,type:{name:"{ (callbackfn: (previousValue: IArea, currentValue: IArea, currentIndex: number, array: IArea[]) => IArea): IArea; (callbackfn: (previousValue: IArea, currentValue: IArea, currentIndex: number, array: IArea[]) => IArea, initialValue: IArea): IArea; <U>(callbackfn: (previousValue: U, currentValue: IArea, currentIndex..."}},find:{defaultValue:null,description:"Returns the value of the first element in the array where predicate is true, and undefined\notherwise.\n@param predicate find calls predicate once for each element of the array, in ascending\rorder, until it finds one where predicate returns true. If such an element is found, find\rimmediately returns that element value. Otherwise, find returns undefined.\n@param thisArg If provided, it will be used as the this value for each invocation of\rpredicate. If it is not provided, undefined is used instead.",name:"find",required:!0,type:{name:"{ <S extends IArea>(predicate: (this: void, value: IArea, index: number, obj: IArea[]) => value is S, thisArg?: any): S; (predicate: (value: IArea, index: number, obj: IArea[]) => unknown, thisArg?: any): IArea; }"}},findIndex:{defaultValue:null,description:"Returns the index of the first element in the array where predicate is true, and -1\notherwise.\n@param predicate find calls predicate once for each element of the array, in ascending\rorder, until it finds one where predicate returns true. If such an element is found,\rfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\n@param thisArg If provided, it will be used as the this value for each invocation of\rpredicate. If it is not provided, undefined is used instead.",name:"findIndex",required:!0,type:{name:"(predicate: (value: IArea, index: number, obj: IArea[]) => unknown, thisArg?: any) => number"}},fill:{defaultValue:null,description:"Returns the this object after filling the section identified by start and end with value\n@param value value to fill array section with\n@param start index to start filling the array at. If start is negative, it is treated as\rlength+start where length is the length of the array.\n@param end index to stop filling the array at. If end is negative, it is treated as\rlength+end.",name:"fill",required:!0,type:{name:"(value: IArea, start?: number, end?: number) => IArea[]"}},copyWithin:{defaultValue:null,description:"Returns the this object after copying a section of the array identified by start and end\nto the same array starting at position target\n@param target If target is negative, it is treated as length+target where length is the\rlength of the array.\n@param start If start is negative, it is treated as length+start. If end is negative, it\ris treated as length+end.\n@param end If not specified, length of the this object is used as its default value.",name:"copyWithin",required:!0,type:{name:"(target: number, start: number, end?: number) => IArea[]"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<IArea>"}},entries:{defaultValue:null,description:"Returns an iterable of key, value pairs for every entry in the array",name:"entries",required:!0,type:{name:"() => IterableIterator<[number, IArea]>"}},keys:{defaultValue:null,description:"Returns an iterable of keys in the array",name:"keys",required:!0,type:{name:"() => IterableIterator<number>"}},values:{defaultValue:null,description:"Returns an iterable of values in the array",name:"values",required:!0,type:{name:"() => IterableIterator<IArea>"}},"__@unscopables":{defaultValue:null,description:"Returns an object whose properties have the value 'true'\nwhen they will be absent when used in a 'with' statement.",name:"__@unscopables",required:!0,type:{name:"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }"}},includes:{defaultValue:null,description:"Determines whether an array includes a certain element, returning true or false as appropriate.\n@param searchElement The element to search for.\n@param fromIndex The position in this array at which to begin searching for searchElement.",name:"includes",required:!0,type:{name:"(searchElement: IArea, fromIndex?: number) => boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/area.ts#getCellMapSetFromAreas"]={docgenInfo:getCellMapSetFromAreas.__docgenInfo,name:"getCellMapSetFromAreas",path:"src/tools/area.ts#getCellMapSetFromAreas"})}catch(__react_docgen_typescript_loader_error){}},47:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return checkIsBlockBold})),__webpack_require__.d(__webpack_exports__,"b",(function(){return checkIsBlockItalic})),__webpack_require__.d(__webpack_exports__,"c",(function(){return checkIsBlockStrikethrough})),__webpack_require__.d(__webpack_exports__,"d",(function(){return checkIsBlockUndeline})),__webpack_require__.d(__webpack_exports__,"f",(function(){return getSelectionState})),__webpack_require__.d(__webpack_exports__,"h",(function(){return setItalicStyle})),__webpack_require__.d(__webpack_exports__,"g",(function(){return setBoldStyle})),__webpack_require__.d(__webpack_exports__,"i",(function(){return setStrikethroughStyle})),__webpack_require__.d(__webpack_exports__,"j",(function(){return setUnderlineStyle})),__webpack_require__.d(__webpack_exports__,"l",(function(){return unsetItalicStyle})),__webpack_require__.d(__webpack_exports__,"k",(function(){return unsetBoldStyle})),__webpack_require__.d(__webpack_exports__,"n",(function(){return unsetUnderlineStyle})),__webpack_require__.d(__webpack_exports__,"m",(function(){return unsetStrikethroughStyle})),__webpack_require__.d(__webpack_exports__,"e",(function(){return getFontStyleFromEditorState}));__webpack_require__(136),__webpack_require__(60),__webpack_require__(77),__webpack_require__(137),__webpack_require__(422),__webpack_require__(1017);var checkIsBlockBold=function checkIsBlockBold(style){return"bold"===style.fontWeight},checkIsBlockItalic=function checkIsBlockItalic(style){return"italic"===style.fontStyle},checkIsBlockStrikethrough=function checkIsBlockStrikethrough(style){return style.textDecoration&&style.textDecoration.includes("line-through")},checkIsBlockUndeline=function checkIsBlockUndeline(style){return style.textDecoration&&style.textDecoration.includes("underline")},getSelectionState=function getSelectionState(editorState){var currentContent=editorState.getCurrentContent();return editorState.getSelection().merge({anchorKey:currentContent.getFirstBlock().getKey(),anchorOffset:0,focusOffset:currentContent.getLastBlock().getText().length,focusKey:currentContent.getLastBlock().getKey()})},setItalicStyle=function setItalicStyle(style){style.fontStyle="italic"},setBoldStyle=function setBoldStyle(style){style.fontWeight="bold"},setStrikethroughStyle=function setStrikethroughStyle(style){void 0===style.textDecoration&&(style.textDecoration="line-through"),style.textDecoration&&!style.textDecoration.includes("line-through")&&(style.textDecoration+=" line-through")},setUnderlineStyle=function setUnderlineStyle(style){void 0===style.textDecoration&&(style.textDecoration="underline"),style.textDecoration&&!style.textDecoration.includes("underline")&&(style.textDecoration+=" underline")},unsetItalicStyle=function unsetItalicStyle(style){return delete style.fontStyle},unsetBoldStyle=function unsetBoldStyle(style){return delete style.fontWeight},unsetUnderlineStyle=function unsetUnderlineStyle(style){style.textDecoration&&style.textDecoration.includes("underline")&&(style.textDecoration=style.textDecoration.replace("underline","").trim()),""===style.textDecoration&&delete style.textDecoration},unsetStrikethroughStyle=function unsetStrikethroughStyle(style){style.textDecoration&&style.textDecoration.includes("line-through")&&(style.textDecoration=style.textDecoration.replace("line-through","").trim()),""===style.textDecoration&&delete style.textDecoration},getFirstSelectionState=function getFirstSelectionState(editorState){var currentContent=editorState.getCurrentContent();return editorState.getSelection().merge({anchorKey:currentContent.getFirstBlock().getKey(),anchorOffset:0,focusOffset:0,focusKey:currentContent.getFirstBlock().getKey()})},getFontStyleFromEditorState=function getFontStyleFromEditorState(editorState){var style={},inlineStyle=editorState.getCurrentInlineStyle();return inlineStyle.has("BOLD")&&setBoldStyle(style),inlineStyle.has("ITALIC")&&setItalicStyle(style),inlineStyle.has("STRIKETHROUGH")&&setStrikethroughStyle(style),inlineStyle.has("UNDERLINE")&&setUnderlineStyle(style),Object.keys(style).length?style:null};try{checkIsBlockBold.displayName="checkIsBlockBold",checkIsBlockBold.__docgenInfo={description:"",displayName:"checkIsBlockBold",props:{fontWeight:{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:'"normal" | "bold"'}},fontStyle:{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:'"normal" | "italic"'}},fontFamily:{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string"}},fontSize:{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"ICSSLength"}},textDecoration:{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"ITextDecorationStyle"}},verticalAlign:{defaultValue:null,description:"",name:"verticalAlign",required:!1,type:{name:'"sub" | "super"'}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/style.ts#checkIsBlockBold"]={docgenInfo:checkIsBlockBold.__docgenInfo,name:"checkIsBlockBold",path:"src/tools/style.ts#checkIsBlockBold"})}catch(__react_docgen_typescript_loader_error){}try{checkIsBlockItalic.displayName="checkIsBlockItalic",checkIsBlockItalic.__docgenInfo={description:"",displayName:"checkIsBlockItalic",props:{fontWeight:{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:'"normal" | "bold"'}},fontStyle:{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:'"normal" | "italic"'}},fontFamily:{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string"}},fontSize:{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"ICSSLength"}},textDecoration:{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"ITextDecorationStyle"}},verticalAlign:{defaultValue:null,description:"",name:"verticalAlign",required:!1,type:{name:'"sub" | "super"'}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/style.ts#checkIsBlockItalic"]={docgenInfo:checkIsBlockItalic.__docgenInfo,name:"checkIsBlockItalic",path:"src/tools/style.ts#checkIsBlockItalic"})}catch(__react_docgen_typescript_loader_error){}try{checkIsBlockStrikethrough.displayName="checkIsBlockStrikethrough",checkIsBlockStrikethrough.__docgenInfo={description:"",displayName:"checkIsBlockStrikethrough",props:{fontWeight:{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:'"normal" | "bold"'}},fontStyle:{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:'"normal" | "italic"'}},fontFamily:{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string"}},fontSize:{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"ICSSLength"}},textDecoration:{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"ITextDecorationStyle"}},verticalAlign:{defaultValue:null,description:"",name:"verticalAlign",required:!1,type:{name:'"sub" | "super"'}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/style.ts#checkIsBlockStrikethrough"]={docgenInfo:checkIsBlockStrikethrough.__docgenInfo,name:"checkIsBlockStrikethrough",path:"src/tools/style.ts#checkIsBlockStrikethrough"})}catch(__react_docgen_typescript_loader_error){}try{checkIsBlockUndeline.displayName="checkIsBlockUndeline",checkIsBlockUndeline.__docgenInfo={description:"",displayName:"checkIsBlockUndeline",props:{fontWeight:{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:'"normal" | "bold"'}},fontStyle:{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:'"normal" | "italic"'}},fontFamily:{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string"}},fontSize:{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"ICSSLength"}},textDecoration:{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"ITextDecorationStyle"}},verticalAlign:{defaultValue:null,description:"",name:"verticalAlign",required:!1,type:{name:'"sub" | "super"'}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/style.ts#checkIsBlockUndeline"]={docgenInfo:checkIsBlockUndeline.__docgenInfo,name:"checkIsBlockUndeline",path:"src/tools/style.ts#checkIsBlockUndeline"})}catch(__react_docgen_typescript_loader_error){}try{getSelectionState.displayName="getSelectionState",getSelectionState.__docgenInfo={description:"",displayName:"getSelectionState",props:{toJS:{defaultValue:null,description:"Deeply converts this Iterable to equivalent JS.\n\n`Iterable.Indexeds`, and `Iterable.Sets` become Arrays, while\n`Iterable.Keyeds` become Objects.",name:"toJS",required:!0,type:{name:"() => Object"}},getAllowUndo:{defaultValue:null,description:"",name:"getAllowUndo",required:!0,type:{name:"() => boolean"}},getCurrentContent:{defaultValue:null,description:"",name:"getCurrentContent",required:!0,type:{name:"() => ContentState"}},getUndoStack:{defaultValue:null,description:"",name:"getUndoStack",required:!0,type:{name:"() => Stack<ContentState>"}},getRedoStack:{defaultValue:null,description:"",name:"getRedoStack",required:!0,type:{name:"() => Stack<ContentState>"}},getSelection:{defaultValue:null,description:"",name:"getSelection",required:!0,type:{name:"() => SelectionState"}},getDecorator:{defaultValue:null,description:"",name:"getDecorator",required:!0,type:{name:"() => DraftDecoratorType"}},isInCompositionMode:{defaultValue:null,description:"",name:"isInCompositionMode",required:!0,type:{name:"() => boolean"}},mustForceSelection:{defaultValue:null,description:"",name:"mustForceSelection",required:!0,type:{name:"() => boolean"}},getNativelyRenderedContent:{defaultValue:null,description:"",name:"getNativelyRenderedContent",required:!0,type:{name:"() => ContentState"}},getLastChangeType:{defaultValue:null,description:"",name:"getLastChangeType",required:!0,type:{name:"() => EditorChangeType"}},getInlineStyleOverride:{defaultValue:null,description:'While editing, the user may apply inline style commands with a collapsed\ncursor, intending to type text that adopts the specified style. In this\ncase, we track the specified style as an "override" that takes precedence\nover the inline style of the text adjacent to the cursor.\n\nIf null, there is no override in place.',name:"getInlineStyleOverride",required:!0,type:{name:"() => DraftInlineStyle"}},getCurrentInlineStyle:{defaultValue:null,description:"Get the appropriate inline style for the editor state. If an\noverride is in place, use it. Otherwise, the current style is\nbased on the location of the selection state.",name:"getCurrentInlineStyle",required:!0,type:{name:"() => DraftInlineStyle"}},getBlockTree:{defaultValue:null,description:"",name:"getBlockTree",required:!0,type:{name:"(blockKey: string) => List<any>"}},isSelectionAtStartOfContent:{defaultValue:null,description:"",name:"isSelectionAtStartOfContent",required:!0,type:{name:"() => boolean"}},isSelectionAtEndOfContent:{defaultValue:null,description:"",name:"isSelectionAtEndOfContent",required:!0,type:{name:"() => boolean"}},getDirectionMap:{defaultValue:null,description:"",name:"getDirectionMap",required:!0,type:{name:"() => OrderedMap<any, any>"}},set:{defaultValue:null,description:"Returns a new Map also containing the new key, value pair. If an equivalent\nkey already exists in this Map, it will be replaced.",name:"set",required:!0,type:{name:"(key: string, value: any) => Map<string, any>"}},delete:{defaultValue:null,description:"Returns a new Map which excludes this `key`.\n\nNote: `delete` cannot be safely used in IE8, but is provided to mirror\nthe ES6 collection API.\n@alias remove",name:"delete",required:!0,type:{name:"(key: string) => Map<string, any>"}},remove:{defaultValue:null,description:"",name:"remove",required:!0,type:{name:"(key: string) => Map<string, any>"}},clear:{defaultValue:null,description:"Returns a new Map containing no keys or values.",name:"clear",required:!0,type:{name:"() => Map<string, any>"}},update:{defaultValue:null,description:"Returns a new Map having updated the value at this `key` with the return\nvalue of calling `updater` with the existing value, or `notSetValue` if\nthe key was not set. If called with only a single argument, `updater` is\ncalled with the Map itself.\n\nEquivalent to: `map.set(key, updater(map.get(key, notSetValue)))`.",name:"update",required:!0,type:{name:"{ (updater: (value: Map<string, any>) => Map<string, any>): Map<string, any>; (key: string, updater: (value: any) => any): Map<string, any>; (key: string, notSetValue: any, updater: (value: any) => any): Map<...>; }"}},merge:{defaultValue:null,description:"Returns a new Map resulting from merging the provided Iterables\n(or JS objects) into this Map. In other words, this takes each entry of\neach iterable and sets it on this Map.\n\nIf any of the values provided to `merge` are not Iterable (would return\nfalse for `Immutable.Iterable.isIterable`) then they are deeply converted\nvia `Immutable.fromJS` before being merged. However, if the value is an\nIterable but includes non-iterable JS objects or arrays, those nested\nvalues will be preserved.\n\n     var x = Immutable.Map({a: 10, b: 20, c: 30});\n     var y = Immutable.Map({b: 40, a: 50, d: 60});\n     x.merge(y) // { a: 50, b: 40, c: 30, d: 60 }\n     y.merge(x) // { b: 20, a: 10, d: 60, c: 30 }",name:"merge",required:!0,type:{name:"{ (...iterables: Iterable<string, any>[]): Map<string, any>; (...iterables: { [key: string]: any; }[]): Map<string, any>; }"}},mergeWith:{defaultValue:null,description:"Like `merge()`, `mergeWith()` returns a new Map resulting from merging\nthe provided Iterables (or JS objects) into this Map, but uses the\n`merger` function for dealing with conflicts.\n\n     var x = Immutable.Map({a: 10, b: 20, c: 30});\n     var y = Immutable.Map({b: 40, a: 50, d: 60});\n     x.mergeWith((prev, next) => prev / next, y) // { a: 0.2, b: 0.5, c: 30, d: 60 }\n     y.mergeWith((prev, next) => prev / next, x) // { b: 2, a: 5, d: 60, c: 30 }",name:"mergeWith",required:!0,type:{name:"{ (merger: (previous?: any, next?: any, key?: string) => any, ...iterables: Iterable<string, any>[]): Map<string, any>; (merger: (previous?: any, next?: any, key?: string) => any, ...iterables: { ...; }[]): Map<...>; }"}},mergeDeep:{defaultValue:null,description:"Like `merge()`, but when two Iterables conflict, it merges them as well,\nrecursing deeply through the nested data.\n\n     var x = Immutable.fromJS({a: { x: 10, y: 10 }, b: { x: 20, y: 50 } });\n     var y = Immutable.fromJS({a: { x: 2 }, b: { y: 5 }, c: { z: 3 } });\n     x.mergeDeep(y) // {a: { x: 2, y: 10 }, b: { x: 20, y: 5 }, c: { z: 3 } }",name:"mergeDeep",required:!0,type:{name:"{ (...iterables: Iterable<string, any>[]): Map<string, any>; (...iterables: { [key: string]: any; }[]): Map<string, any>; }"}},mergeDeepWith:{defaultValue:null,description:"Like `mergeDeep()`, but when two non-Iterables conflict, it uses the\n`merger` function to determine the resulting value.\n\n     var x = Immutable.fromJS({a: { x: 10, y: 10 }, b: { x: 20, y: 50 } });\n     var y = Immutable.fromJS({a: { x: 2 }, b: { y: 5 }, c: { z: 3 } });\n     x.mergeDeepWith((prev, next) => prev / next, y)\n     // {a: { x: 5, y: 10 }, b: { x: 20, y: 10 }, c: { z: 3 } }",name:"mergeDeepWith",required:!0,type:{name:"{ (merger: (previous?: any, next?: any, key?: string) => any, ...iterables: Iterable<string, any>[]): Map<string, any>; (merger: (previous?: any, next?: any, key?: string) => any, ...iterables: { ...; }[]): Map<...>; }"}},setIn:{defaultValue:null,description:"Returns a new Map having set `value` at this `keyPath`. If any keys in\n`keyPath` do not exist, a new immutable Map will be created at that key.",name:"setIn",required:!0,type:{name:"{ (keyPath: any[], value: any): Map<string, any>; (KeyPath: Iterable<any, any>, value: any): Map<string, any>; }"}},deleteIn:{defaultValue:null,description:"Returns a new Map having removed the value at this `keyPath`. If any keys\nin `keyPath` do not exist, no change will occur.\n@alias removeIn",name:"deleteIn",required:!0,type:{name:"{ (keyPath: any[]): Map<string, any>; (keyPath: Iterable<any, any>): Map<string, any>; }"}},removeIn:{defaultValue:null,description:"",name:"removeIn",required:!0,type:{name:"{ (keyPath: any[]): Map<string, any>; (keyPath: Iterable<any, any>): Map<string, any>; }"}},updateIn:{defaultValue:null,description:"Returns a new Map having applied the `updater` to the entry found at the\nkeyPath.\n\nIf any keys in `keyPath` do not exist, new Immutable `Map`s will\nbe created at those keys. If the `keyPath` does not already contain a\nvalue, the `updater` function will be called with `notSetValue`, if\nprovided, otherwise `undefined`.\n\n     var data = Immutable.fromJS({ a: { b: { c: 10 } } });\n     data = data.updateIn(['a', 'b', 'c'], val => val * 2);\n     // { a: { b: { c: 20 } } }\n\nIf the `updater` function returns the same value it was called with, then\nno change will occur. This is still true if `notSetValue` is provided.\n\n     var data1 = Immutable.fromJS({ a: { b: { c: 10 } } });\n     data2 = data1.updateIn(['x', 'y', 'z'], 100, val => val);\n     assert(data2 === data1);",name:"updateIn",required:!0,type:{name:"{ (keyPath: any[], updater: (value: any) => any): Map<string, any>; (keyPath: any[], notSetValue: any, updater: (value: any) => any): Map<string, any>; (keyPath: Iterable<any, any>, updater: (value: any) => any): Map<...>; (keyPath: Iterable<...>, notSetValue: any, updater: (value: any) => any): Map<...>; }"}},mergeIn:{defaultValue:null,description:"A combination of `updateIn` and `merge`, returning a new Map, but\nperforming the merge at a point arrived at by following the keyPath.\nIn other words, these two lines are equivalent:\n\n     x.updateIn(['a', 'b', 'c'], abc => abc.merge(y));\n     x.mergeIn(['a', 'b', 'c'], y);",name:"mergeIn",required:!0,type:{name:"{ (keyPath: Iterable<any, any>, ...iterables: Iterable<string, any>[]): Map<string, any>; (keyPath: any[], ...iterables: Iterable<string, any>[]): Map<...>; (keyPath: any[], ...iterables: { ...; }[]): Map<...>; }"}},mergeDeepIn:{defaultValue:null,description:"A combination of `updateIn` and `mergeDeep`, returning a new Map, but\nperforming the deep merge at a point arrived at by following the keyPath.\nIn other words, these two lines are equivalent:\n\n     x.updateIn(['a', 'b', 'c'], abc => abc.mergeDeep(y));\n     x.mergeDeepIn(['a', 'b', 'c'], y);",name:"mergeDeepIn",required:!0,type:{name:"{ (keyPath: Iterable<any, any>, ...iterables: Iterable<string, any>[]): Map<string, any>; (keyPath: any[], ...iterables: Iterable<string, any>[]): Map<...>; (keyPath: any[], ...iterables: { ...; }[]): Map<...>; }"}},withMutations:{defaultValue:null,description:"Every time you call one of the above functions, a new immutable Map is\ncreated. If a pure function calls a number of these to produce a final\nreturn value, then a penalty on performance and memory has been paid by\ncreating all of the intermediate immutable Maps.\n\nIf you need to apply a series of mutations to produce a new immutable\nMap, `withMutations()` creates a temporary mutable copy of the Map which\ncan apply mutations in a highly performant manner. In fact, this is\nexactly how complex mutations like `merge` are done.\n\nAs an example, this results in the creation of 2, not 4, new Maps:\n\n     var map1 = Immutable.Map();\n     var map2 = map1.withMutations(map => {\n       map.set('a', 1).set('b', 2).set('c', 3);\n     });\n     assert(map1.size === 0);\n     assert(map2.size === 3);\n\nNote: Not all methods can be used on a mutable collection or within\n`withMutations`! Only `set` and `merge` may be used mutatively.",name:"withMutations",required:!0,type:{name:"(mutator: (mutable: Map<string, any>) => any) => Map<string, any>"}},asMutable:{defaultValue:null,description:"Another way to avoid creation of intermediate Immutable maps is to create\na mutable copy of this collection. Mutable copies *always* return `this`,\nand thus shouldn't be used for equality. Your function should never return\na mutable copy of a collection, only use it internally to create a new\ncollection. If possible, use `withMutations` as it provides an easier to\nuse API.\n\nNote: if the collection is already mutable, `asMutable` returns itself.\n\nNote: Not all methods can be used on a mutable collection or within\n`withMutations`! Only `set` and `merge` may be used mutatively.",name:"asMutable",required:!0,type:{name:"() => Map<string, any>"}},asImmutable:{defaultValue:null,description:"The yin to `asMutable`'s yang. Because it applies to mutable collections,\nthis operation is *mutable* and returns itself. Once performed, the mutable\ncopy has become immutable and can be safely returned from a function.",name:"asImmutable",required:!0,type:{name:"() => Map<string, any>"}},toSeq:{defaultValue:null,description:"Returns Seq.Keyed.\n@override",name:"toSeq",required:!0,type:{name:"() => Keyed<string, any>"}},size:{defaultValue:null,description:"All collections maintain their current `size` as an integer.",name:"size",required:!0,type:{name:"number"}},equals:{defaultValue:null,description:"True if this and the other Iterable have value equality, as defined\nby `Immutable.is()`.\n\nNote: This is equivalent to `Immutable.is(this, other)`, but provided to\nallow for chained expressions.",name:"equals",required:!0,type:{name:"(other: Iterable<string, any>) => boolean"}},hashCode:{defaultValue:null,description:"Computes and returns the hashed identity for this Iterable.\n\nThe `hashCode` of an Iterable is used to determine potential equality,\nand is used when adding this to a `Set` or as a key in a `Map`, enabling\nlookup via a different instance.\n\n     var a = List.of(1, 2, 3);\n     var b = List.of(1, 2, 3);\n     assert(a !== b); // different instances\n     var set = Set.of(a);\n     assert(set.has(b) === true);\n\nIf two values have the same `hashCode`, they are [not guaranteed\nto be equal][Hash Collision]. If two values have different `hashCode`s,\nthey must not be equal.\n\n[Hash Collision]: http://en.wikipedia.org/wiki/Collision_(computer_science)",name:"hashCode",required:!0,type:{name:"() => number"}},get:{defaultValue:null,description:"Returns the value associated with the provided key, or notSetValue if\nthe Iterable does not contain this key.\n\nNote: it is possible a key may be associated with an `undefined` value,\nso if `notSetValue` is not provided and this method returns `undefined`,\nthat does not guarantee the key was not found.",name:"get",required:!0,type:{name:"(key: string, notSetValue?: any) => any"}},has:{defaultValue:null,description:"True if a key exists within this `Iterable`.",name:"has",required:!0,type:{name:"(key: string) => boolean"}},includes:{defaultValue:null,description:"True if a value exists within this `Iterable`.\n@alias contains",name:"includes",required:!0,type:{name:"(value: any) => boolean"}},contains:{defaultValue:null,description:"",name:"contains",required:!0,type:{name:"(value: any) => boolean"}},first:{defaultValue:null,description:"The first value in the Iterable.",name:"first",required:!0,type:{name:"() => any"}},last:{defaultValue:null,description:"The last value in the Iterable.",name:"last",required:!0,type:{name:"() => any"}},getIn:{defaultValue:null,description:"Returns the value found by following a path of keys or indices through\nnested Iterables.",name:"getIn",required:!0,type:{name:"{ (searchKeyPath: any[], notSetValue?: any): any; (searchKeyPath: Iterable<any, any>, notSetValue?: any): any; }"}},hasIn:{defaultValue:null,description:"True if the result of following a path of keys or indices through nested\nIterables results in a set value.",name:"hasIn",required:!0,type:{name:"{ (searchKeyPath: any[]): boolean; (searchKeyPath: Iterable<any, any>): boolean; }"}},toArray:{defaultValue:null,description:"Shallowly converts this iterable to an Array, discarding keys.",name:"toArray",required:!0,type:{name:"() => any[]"}},toObject:{defaultValue:null,description:"Shallowly converts this Iterable to an Object.\n\nThrows if keys are not strings.",name:"toObject",required:!0,type:{name:"() => { [key: string]: any; }"}},toMap:{defaultValue:null,description:"Converts this Iterable to a Map, Throws if keys are not hashable.\n\nNote: This is equivalent to `Map(this.toKeyedSeq())`, but provided\nfor convenience and to allow for chained expressions.",name:"toMap",required:!0,type:{name:"() => Map<string, any>"}},toOrderedMap:{defaultValue:null,description:"Converts this Iterable to a Map, maintaining the order of iteration.\n\nNote: This is equivalent to `OrderedMap(this.toKeyedSeq())`, but\nprovided for convenience and to allow for chained expressions.",name:"toOrderedMap",required:!0,type:{name:"() => Map<string, any>"}},toSet:{defaultValue:null,description:"Converts this Iterable to a Set, discarding keys. Throws if values\nare not hashable.\n\nNote: This is equivalent to `Set(this)`, but provided to allow for\nchained expressions.",name:"toSet",required:!0,type:{name:"() => Set<any>"}},toOrderedSet:{defaultValue:null,description:"Converts this Iterable to a Set, maintaining the order of iteration and\ndiscarding keys.\n\nNote: This is equivalent to `OrderedSet(this.valueSeq())`, but provided\nfor convenience and to allow for chained expressions.",name:"toOrderedSet",required:!0,type:{name:"() => Set<any>"}},toList:{defaultValue:null,description:"Converts this Iterable to a List, discarding keys.\n\nNote: This is equivalent to `List(this)`, but provided to allow\nfor chained expressions.",name:"toList",required:!0,type:{name:"() => List<any>"}},toStack:{defaultValue:null,description:"Converts this Iterable to a Stack, discarding keys. Throws if values\nare not hashable.\n\nNote: This is equivalent to `Stack(this)`, but provided to allow for\nchained expressions.",name:"toStack",required:!0,type:{name:"() => Stack<any>"}},toKeyedSeq:{defaultValue:null,description:"Returns a Seq.Keyed from this Iterable where indices are treated as keys.\n\nThis is useful if you want to operate on an\nIterable.Indexed and preserve the [index, value] pairs.\n\nThe returned Seq will have identical iteration order as\nthis Iterable.\n\nExample:\n\n     var indexedSeq = Immutable.Seq.of('A', 'B', 'C');\n     indexedSeq.filter(v => v === 'B').toString() // Seq [ 'B' ]\n     var keyedSeq = indexedSeq.toKeyedSeq();\n     keyedSeq.filter(v => v === 'B').toString() // Seq { 1: 'B' }",name:"toKeyedSeq",required:!0,type:{name:"() => Keyed<string, any>"}},toIndexedSeq:{defaultValue:null,description:"Returns an Seq.Indexed of the values of this Iterable, discarding keys.",name:"toIndexedSeq",required:!0,type:{name:"() => Indexed<any>"}},toSetSeq:{defaultValue:null,description:"Returns a Seq.Set of the values of this Iterable, discarding keys.",name:"toSetSeq",required:!0,type:{name:"() => Set<any>"}},keys:{defaultValue:null,description:"An iterator of this `Iterable`'s keys.",name:"keys",required:!0,type:{name:"() => Iterator<string>"}},values:{defaultValue:null,description:"An iterator of this `Iterable`'s values.",name:"values",required:!0,type:{name:"() => Iterator<any>"}},entries:{defaultValue:null,description:"An iterator of this `Iterable`'s entries as `[key, value]` tuples.",name:"entries",required:!0,type:{name:"() => Iterator<any[]>"}},keySeq:{defaultValue:null,description:"Returns a new Seq.Indexed of the keys of this Iterable,\ndiscarding values.",name:"keySeq",required:!0,type:{name:"() => Indexed<string>"}},valueSeq:{defaultValue:null,description:"Returns an Seq.Indexed of the values of this Iterable, discarding keys.",name:"valueSeq",required:!0,type:{name:"() => Indexed<any>"}},entrySeq:{defaultValue:null,description:"Returns a new Seq.Indexed of [key, value] tuples.",name:"entrySeq",required:!0,type:{name:"() => Indexed<any[]>"}},map:{defaultValue:null,description:"Returns a new Iterable of the same type with values passed through a\n`mapper` function.\n\n     Seq({ a: 1, b: 2 }).map(x => 10 * x)\n     // Seq { a: 10, b: 20 }",name:"map",required:!0,type:{name:"<M>(mapper: (value?: any, key?: string, iter?: Iterable<string, any>) => M, context?: any) => Iterable<string, M>"}},filter:{defaultValue:null,description:"Returns a new Iterable of the same type with only the entries for which\nthe `predicate` function returns true.\n\n     Seq({a:1,b:2,c:3,d:4}).filter(x => x % 2 === 0)\n     // Seq { b: 2, d: 4 }",name:"filter",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => Iterable<string, any>"}},filterNot:{defaultValue:null,description:"Returns a new Iterable of the same type with only the entries for which\nthe `predicate` function returns false.\n\n     Seq({a:1,b:2,c:3,d:4}).filterNot(x => x % 2 === 0)\n     // Seq { a: 1, c: 3 }",name:"filterNot",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => Iterable<string, any>"}},reverse:{defaultValue:null,description:"Returns a new Iterable of the same type in reverse order.",name:"reverse",required:!0,type:{name:"() => Iterable<string, any>"}},sort:{defaultValue:null,description:"Returns a new Iterable of the same type which includes the same entries,\nstably sorted by using a `comparator`.\n\nIf a `comparator` is not provided, a default comparator uses `<` and `>`.\n\n`comparator(valueA, valueB)`:\n\n   * Returns `0` if the elements should not be swapped.\n   * Returns `-1` (or any negative number) if `valueA` comes before `valueB`\n   * Returns `1` (or any positive number) if `valueA` comes after `valueB`\n   * Is pure, i.e. it must always return the same value for the same pair\n     of values.\n\nWhen sorting collections which have no defined order, their ordered\nequivalents will be returned. e.g. `map.sort()` returns OrderedMap.",name:"sort",required:!0,type:{name:"(comparator?: (valueA: any, valueB: any) => number) => Iterable<string, any>"}},sortBy:{defaultValue:null,description:"Like `sort`, but also accepts a `comparatorValueMapper` which allows for\nsorting by more sophisticated means:\n\n     hitters.sortBy(hitter => hitter.avgHits);",name:"sortBy",required:!0,type:{name:"<C>(comparatorValueMapper: (value?: any, key?: string, iter?: Iterable<string, any>) => C, comparator?: (valueA: C, valueB: C) => number) => Iterable<string, any>"}},groupBy:{defaultValue:null,description:"Returns a `Iterable.Keyed` of `Iterable.Keyeds`, grouped by the return\nvalue of the `grouper` function.\n\nNote: This is always an eager operation.",name:"groupBy",required:!0,type:{name:"<G>(grouper: (value?: any, key?: string, iter?: Iterable<string, any>) => G, context?: any) => Keyed<G, Iterable<string, any>>"}},forEach:{defaultValue:null,description:"The `sideEffect` is executed for every entry in the Iterable.\n\nUnlike `Array#forEach`, if any call of `sideEffect` returns\n`false`, the iteration will stop. Returns the number of entries iterated\n(including the last iteration which returned false).",name:"forEach",required:!0,type:{name:"(sideEffect: (value?: any, key?: string, iter?: Iterable<string, any>) => any, context?: any) => number"}},slice:{defaultValue:null,description:"Returns a new Iterable of the same type representing a portion of this\nIterable from start up to but not including end.\n\nIf begin is negative, it is offset from the end of the Iterable. e.g.\n`slice(-2)` returns a Iterable of the last two entries. If it is not\nprovided the new Iterable will begin at the beginning of this Iterable.\n\nIf end is negative, it is offset from the end of the Iterable. e.g.\n`slice(0, -1)` returns an Iterable of everything but the last entry. If\nit is not provided, the new Iterable will continue through the end of\nthis Iterable.\n\nIf the requested slice is equivalent to the current Iterable, then it\nwill return itself.",name:"slice",required:!0,type:{name:"(begin?: number, end?: number) => Iterable<string, any>"}},rest:{defaultValue:null,description:"Returns a new Iterable of the same type containing all entries except\nthe first.",name:"rest",required:!0,type:{name:"() => Iterable<string, any>"}},butLast:{defaultValue:null,description:"Returns a new Iterable of the same type containing all entries except\nthe last.",name:"butLast",required:!0,type:{name:"() => Iterable<string, any>"}},skip:{defaultValue:null,description:"Returns a new Iterable of the same type which excludes the first `amount`\nentries from this Iterable.",name:"skip",required:!0,type:{name:"(amount: number) => Iterable<string, any>"}},skipLast:{defaultValue:null,description:"Returns a new Iterable of the same type which excludes the last `amount`\nentries from this Iterable.",name:"skipLast",required:!0,type:{name:"(amount: number) => Iterable<string, any>"}},skipWhile:{defaultValue:null,description:"Returns a new Iterable of the same type which includes entries starting\nfrom when `predicate` first returns false.\n\n     Seq.of('dog','frog','cat','hat','god')\n       .skipWhile(x => x.match(/g/))\n     // Seq [ 'cat', 'hat', 'god' ]",name:"skipWhile",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => Iterable<string, any>"}},skipUntil:{defaultValue:null,description:"Returns a new Iterable of the same type which includes entries starting\nfrom when `predicate` first returns true.\n\n     Seq.of('dog','frog','cat','hat','god')\n       .skipUntil(x => x.match(/hat/))\n     // Seq [ 'hat', 'god' ]",name:"skipUntil",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => Iterable<string, any>"}},take:{defaultValue:null,description:"Returns a new Iterable of the same type which includes the first `amount`\nentries from this Iterable.",name:"take",required:!0,type:{name:"(amount: number) => Iterable<string, any>"}},takeLast:{defaultValue:null,description:"Returns a new Iterable of the same type which includes the last `amount`\nentries from this Iterable.",name:"takeLast",required:!0,type:{name:"(amount: number) => Iterable<string, any>"}},takeWhile:{defaultValue:null,description:"Returns a new Iterable of the same type which includes entries from this\nIterable as long as the `predicate` returns true.\n\n     Seq.of('dog','frog','cat','hat','god')\n       .takeWhile(x => x.match(/o/))\n     // Seq [ 'dog', 'frog' ]",name:"takeWhile",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => Iterable<string, any>"}},takeUntil:{defaultValue:null,description:"Returns a new Iterable of the same type which includes entries from this\nIterable as long as the `predicate` returns false.\n\n     Seq.of('dog','frog','cat','hat','god').takeUntil(x => x.match(/at/))\n     // ['dog', 'frog']",name:"takeUntil",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => Iterable<string, any>"}},concat:{defaultValue:null,description:"Returns a new Iterable of the same type with other values and\niterable-like concatenated to this one.\n\nFor Seqs, all entries will be present in\nthe resulting iterable, even if they have the same key.",name:"concat",required:!0,type:{name:"(...valuesOrIterables: any[]) => Iterable<string, any>"}},flatten:{defaultValue:null,description:"Flattens nested Iterables.\n\nWill deeply flatten the Iterable by default, returning an Iterable of the\nsame type, but a `depth` can be provided in the form of a number or\nboolean (where true means to shallowly flatten one level). A depth of 0\n(or shallow: false) will deeply flatten.\n\nFlattens only others Iterable, not Arrays or Objects.\n\nNote: `flatten(true)` operates on Iterable<any, Iterable<K, V>> and\nreturns Iterable<K, V>",name:"flatten",required:!0,type:{name:"{ (depth?: number): Iterable<any, any>; (shallow?: boolean): Iterable<any, any>; }"}},flatMap:{defaultValue:null,description:"Flat-maps the Iterable, returning an Iterable of the same type.\n\nSimilar to `iter.map(...).flatten(true)`.",name:"flatMap",required:!0,type:{name:"{ <MK, MV>(mapper: (value?: any, key?: string, iter?: Iterable<string, any>) => Iterable<MK, MV>, context?: any): Iterable<MK, MV>; <MK, MV>(mapper: (value?: any, key?: string, iter?: Iterable<...>) => any, context?: any): Iterable<...>; }"}},reduce:{defaultValue:null,description:"Reduces the Iterable to a value by calling the `reducer` for every entry\nin the Iterable and passing along the reduced value.\n\nIf `initialReduction` is not provided, or is null, the first item in the\nIterable will be used.\n@see `Array#reduce`.",name:"reduce",required:!0,type:{name:"<R>(reducer: (reduction?: R, value?: any, key?: string, iter?: Iterable<string, any>) => R, initialReduction?: R, context?: any) => R"}},reduceRight:{defaultValue:null,description:"Reduces the Iterable in reverse (from the right side).\n\nNote: Similar to this.reverse().reduce(), and provided for parity\nwith `Array#reduceRight`.",name:"reduceRight",required:!0,type:{name:"<R>(reducer: (reduction?: R, value?: any, key?: string, iter?: Iterable<string, any>) => R, initialReduction?: R, context?: any) => R"}},every:{defaultValue:null,description:"True if `predicate` returns true for all entries in the Iterable.",name:"every",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => boolean"}},some:{defaultValue:null,description:"True if `predicate` returns true for any entry in the Iterable.",name:"some",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => boolean"}},join:{defaultValue:null,description:'Joins values together as a string, inserting a separator between each.\nThe default separator is `","`.',name:"join",required:!0,type:{name:"(separator?: string) => string"}},isEmpty:{defaultValue:null,description:"Returns true if this Iterable includes no values.\n\nFor some lazy `Seq`, `isEmpty` might need to iterate to determine\nemptiness. At most one iteration will occur.",name:"isEmpty",required:!0,type:{name:"() => boolean"}},count:{defaultValue:null,description:"Returns the size of this Iterable.\n\nRegardless of if this Iterable can describe its size lazily (some Seqs\ncannot), this method will always return the correct size. E.g. it\nevaluates a lazy `Seq` if necessary.\n\nIf `predicate` is provided, then this returns the count of entries in the\nIterable for which the `predicate` returns true.",name:"count",required:!0,type:{name:"{ (): number; (predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any): number; }"}},countBy:{defaultValue:null,description:"Returns a `Seq.Keyed` of counts, grouped by the return value of\nthe `grouper` function.\n\nNote: This is not a lazy operation.",name:"countBy",required:!0,type:{name:"<G>(grouper: (value?: any, key?: string, iter?: Iterable<string, any>) => G, context?: any) => Map<G, number>"}},find:{defaultValue:null,description:"Returns the value for which the `predicate` returns true.",name:"find",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any, notSetValue?: any) => any"}},findLast:{defaultValue:null,description:"Returns the last value for which the `predicate` returns true.\n\nNote: `predicate` will be called for each entry in reverse.",name:"findLast",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any, notSetValue?: any) => any"}},findEntry:{defaultValue:null,description:"Returns the [key, value] entry for which the `predicate` returns true.",name:"findEntry",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any, notSetValue?: any) => any[]"}},findLastEntry:{defaultValue:null,description:"Returns the last [key, value] entry for which the `predicate`\nreturns true.\n\nNote: `predicate` will be called for each entry in reverse.",name:"findLastEntry",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any, notSetValue?: any) => any[]"}},max:{defaultValue:null,description:"Returns the maximum value in this collection. If any values are\ncomparatively equivalent, the first one found will be returned.\n\nThe `comparator` is used in the same way as `Iterable#sort`. If it is not\nprovided, the default comparator is `>`.\n\nWhen two values are considered equivalent, the first encountered will be\nreturned. Otherwise, `max` will operate independent of the order of input\nas long as the comparator is commutative. The default comparator `>` is\ncommutative *only* when types do not differ.\n\nIf `comparator` returns 0 and either value is NaN, undefined, or null,\nthat value will be returned.",name:"max",required:!0,type:{name:"(comparator?: (valueA: any, valueB: any) => number) => any"}},maxBy:{defaultValue:null,description:"Like `max`, but also accepts a `comparatorValueMapper` which allows for\ncomparing by more sophisticated means:\n\n     hitters.maxBy(hitter => hitter.avgHits);",name:"maxBy",required:!0,type:{name:"<C>(comparatorValueMapper: (value?: any, key?: string, iter?: Iterable<string, any>) => C, comparator?: (valueA: C, valueB: C) => number) => any"}},min:{defaultValue:null,description:"Returns the minimum value in this collection. If any values are\ncomparatively equivalent, the first one found will be returned.\n\nThe `comparator` is used in the same way as `Iterable#sort`. If it is not\nprovided, the default comparator is `<`.\n\nWhen two values are considered equivalent, the first encountered will be\nreturned. Otherwise, `min` will operate independent of the order of input\nas long as the comparator is commutative. The default comparator `<` is\ncommutative *only* when types do not differ.\n\nIf `comparator` returns 0 and either value is NaN, undefined, or null,\nthat value will be returned.",name:"min",required:!0,type:{name:"(comparator?: (valueA: any, valueB: any) => number) => any"}},minBy:{defaultValue:null,description:"Like `min`, but also accepts a `comparatorValueMapper` which allows for\ncomparing by more sophisticated means:\n\n     hitters.minBy(hitter => hitter.avgHits);",name:"minBy",required:!0,type:{name:"<C>(comparatorValueMapper: (value?: any, key?: string, iter?: Iterable<string, any>) => C, comparator?: (valueA: C, valueB: C) => number) => any"}},isSubset:{defaultValue:null,description:"True if `iter` includes every value in this Iterable.",name:"isSubset",required:!0,type:{name:"{ (iter: Iterable<any, any>): boolean; (iter: any[]): boolean; }"}},isSuperset:{defaultValue:null,description:"True if this Iterable includes every value in `iter`.",name:"isSuperset",required:!0,type:{name:"{ (iter: Iterable<any, any>): boolean; (iter: any[]): boolean; }"}},flip:{defaultValue:null,description:"Returns a new Iterable.Keyed of the same type where the keys and values\nhave been flipped.\n\n     Seq({ a: 'z', b: 'y' }).flip() // { z: 'a', y: 'b' }",name:"flip",required:!0,type:{name:"() => Keyed<any, string>"}},mapKeys:{defaultValue:null,description:"Returns a new Iterable.Keyed of the same type with keys passed through\na `mapper` function.\n\n     Seq({ a: 1, b: 2 })\n       .mapKeys(x => x.toUpperCase())\n     // Seq { A: 1, B: 2 }",name:"mapKeys",required:!0,type:{name:"<M>(mapper: (key?: string, value?: any, iter?: Keyed<string, any>) => M, context?: any) => Keyed<M, any>"}},mapEntries:{defaultValue:null,description:"Returns a new Iterable.Keyed of the same type with entries\n([key, value] tuples) passed through a `mapper` function.\n\n     Seq({ a: 1, b: 2 })\n       .mapEntries(([k, v]) => [k.toUpperCase(), v * 2])\n     // Seq { A: 2, B: 4 }",name:"mapEntries",required:!0,type:{name:"<KM, VM>(mapper: (entry?: any[], index?: number, iter?: Keyed<string, any>) => any[], context?: any) => Keyed<KM, VM>"}},keyOf:{defaultValue:null,description:"Returns the key associated with the search value, or undefined.",name:"keyOf",required:!0,type:{name:"(searchValue: any) => string"}},lastKeyOf:{defaultValue:null,description:"Returns the last key associated with the search value, or undefined.",name:"lastKeyOf",required:!0,type:{name:"(searchValue: any) => string"}},findKey:{defaultValue:null,description:"Returns the key for which the `predicate` returns true.",name:"findKey",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Keyed<string, any>) => boolean, context?: any) => string"}},findLastKey:{defaultValue:null,description:"Returns the last key for which the `predicate` returns true.\n\nNote: `predicate` will be called for each entry in reverse.",name:"findLastKey",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Keyed<string, any>) => boolean, context?: any) => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/style.ts#getSelectionState"]={docgenInfo:getSelectionState.__docgenInfo,name:"getSelectionState",path:"src/tools/style.ts#getSelectionState"})}catch(__react_docgen_typescript_loader_error){}try{setItalicStyle.displayName="setItalicStyle",setItalicStyle.__docgenInfo={description:"",displayName:"setItalicStyle",props:{fontWeight:{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:'"normal" | "bold"'}},fontStyle:{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:'"normal" | "italic"'}},fontFamily:{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string"}},fontSize:{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"ICSSLength"}},textDecoration:{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"ITextDecorationStyle"}},verticalAlign:{defaultValue:null,description:"",name:"verticalAlign",required:!1,type:{name:'"sub" | "super"'}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/style.ts#setItalicStyle"]={docgenInfo:setItalicStyle.__docgenInfo,name:"setItalicStyle",path:"src/tools/style.ts#setItalicStyle"})}catch(__react_docgen_typescript_loader_error){}try{setBoldStyle.displayName="setBoldStyle",setBoldStyle.__docgenInfo={description:"",displayName:"setBoldStyle",props:{fontWeight:{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:'"normal" | "bold"'}},fontStyle:{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:'"normal" | "italic"'}},fontFamily:{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string"}},fontSize:{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"ICSSLength"}},textDecoration:{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"ITextDecorationStyle"}},verticalAlign:{defaultValue:null,description:"",name:"verticalAlign",required:!1,type:{name:'"sub" | "super"'}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/style.ts#setBoldStyle"]={docgenInfo:setBoldStyle.__docgenInfo,name:"setBoldStyle",path:"src/tools/style.ts#setBoldStyle"})}catch(__react_docgen_typescript_loader_error){}try{setStrikethroughStyle.displayName="setStrikethroughStyle",setStrikethroughStyle.__docgenInfo={description:"",displayName:"setStrikethroughStyle",props:{fontWeight:{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:'"normal" | "bold"'}},fontStyle:{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:'"normal" | "italic"'}},fontFamily:{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string"}},fontSize:{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"ICSSLength"}},textDecoration:{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"ITextDecorationStyle"}},verticalAlign:{defaultValue:null,description:"",name:"verticalAlign",required:!1,type:{name:'"sub" | "super"'}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/style.ts#setStrikethroughStyle"]={docgenInfo:setStrikethroughStyle.__docgenInfo,name:"setStrikethroughStyle",path:"src/tools/style.ts#setStrikethroughStyle"})}catch(__react_docgen_typescript_loader_error){}try{setUnderlineStyle.displayName="setUnderlineStyle",setUnderlineStyle.__docgenInfo={description:"",displayName:"setUnderlineStyle",props:{fontWeight:{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:'"normal" | "bold"'}},fontStyle:{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:'"normal" | "italic"'}},fontFamily:{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string"}},fontSize:{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"ICSSLength"}},textDecoration:{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"ITextDecorationStyle"}},verticalAlign:{defaultValue:null,description:"",name:"verticalAlign",required:!1,type:{name:'"sub" | "super"'}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/style.ts#setUnderlineStyle"]={docgenInfo:setUnderlineStyle.__docgenInfo,name:"setUnderlineStyle",path:"src/tools/style.ts#setUnderlineStyle"})}catch(__react_docgen_typescript_loader_error){}try{unsetItalicStyle.displayName="unsetItalicStyle",unsetItalicStyle.__docgenInfo={description:"",displayName:"unsetItalicStyle",props:{fontWeight:{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:'"normal" | "bold"'}},fontStyle:{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:'"normal" | "italic"'}},fontFamily:{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string"}},fontSize:{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"ICSSLength"}},textDecoration:{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"ITextDecorationStyle"}},verticalAlign:{defaultValue:null,description:"",name:"verticalAlign",required:!1,type:{name:'"sub" | "super"'}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/style.ts#unsetItalicStyle"]={docgenInfo:unsetItalicStyle.__docgenInfo,name:"unsetItalicStyle",path:"src/tools/style.ts#unsetItalicStyle"})}catch(__react_docgen_typescript_loader_error){}try{unsetBoldStyle.displayName="unsetBoldStyle",unsetBoldStyle.__docgenInfo={description:"",displayName:"unsetBoldStyle",props:{fontWeight:{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:'"normal" | "bold"'}},fontStyle:{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:'"normal" | "italic"'}},fontFamily:{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string"}},fontSize:{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"ICSSLength"}},textDecoration:{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"ITextDecorationStyle"}},verticalAlign:{defaultValue:null,description:"",name:"verticalAlign",required:!1,type:{name:'"sub" | "super"'}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/style.ts#unsetBoldStyle"]={docgenInfo:unsetBoldStyle.__docgenInfo,name:"unsetBoldStyle",path:"src/tools/style.ts#unsetBoldStyle"})}catch(__react_docgen_typescript_loader_error){}try{unsetUnderlineStyle.displayName="unsetUnderlineStyle",unsetUnderlineStyle.__docgenInfo={description:"",displayName:"unsetUnderlineStyle",props:{fontWeight:{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:'"normal" | "bold"'}},fontStyle:{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:'"normal" | "italic"'}},fontFamily:{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string"}},fontSize:{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"ICSSLength"}},textDecoration:{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"ITextDecorationStyle"}},verticalAlign:{defaultValue:null,description:"",name:"verticalAlign",required:!1,type:{name:'"sub" | "super"'}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/style.ts#unsetUnderlineStyle"]={docgenInfo:unsetUnderlineStyle.__docgenInfo,name:"unsetUnderlineStyle",path:"src/tools/style.ts#unsetUnderlineStyle"})}catch(__react_docgen_typescript_loader_error){}try{unsetStrikethroughStyle.displayName="unsetStrikethroughStyle",unsetStrikethroughStyle.__docgenInfo={description:"",displayName:"unsetStrikethroughStyle",props:{fontWeight:{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:'"normal" | "bold"'}},fontStyle:{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:'"normal" | "italic"'}},fontFamily:{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string"}},fontSize:{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"ICSSLength"}},textDecoration:{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:"ITextDecorationStyle"}},verticalAlign:{defaultValue:null,description:"",name:"verticalAlign",required:!1,type:{name:'"sub" | "super"'}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/style.ts#unsetStrikethroughStyle"]={docgenInfo:unsetStrikethroughStyle.__docgenInfo,name:"unsetStrikethroughStyle",path:"src/tools/style.ts#unsetStrikethroughStyle"})}catch(__react_docgen_typescript_loader_error){}try{getFirstSelectionState.displayName="getFirstSelectionState",getFirstSelectionState.__docgenInfo={description:"",displayName:"getFirstSelectionState",props:{toJS:{defaultValue:null,description:"Deeply converts this Iterable to equivalent JS.\n\n`Iterable.Indexeds`, and `Iterable.Sets` become Arrays, while\n`Iterable.Keyeds` become Objects.",name:"toJS",required:!0,type:{name:"() => Object"}},getAllowUndo:{defaultValue:null,description:"",name:"getAllowUndo",required:!0,type:{name:"() => boolean"}},getCurrentContent:{defaultValue:null,description:"",name:"getCurrentContent",required:!0,type:{name:"() => ContentState"}},getUndoStack:{defaultValue:null,description:"",name:"getUndoStack",required:!0,type:{name:"() => Stack<ContentState>"}},getRedoStack:{defaultValue:null,description:"",name:"getRedoStack",required:!0,type:{name:"() => Stack<ContentState>"}},getSelection:{defaultValue:null,description:"",name:"getSelection",required:!0,type:{name:"() => SelectionState"}},getDecorator:{defaultValue:null,description:"",name:"getDecorator",required:!0,type:{name:"() => DraftDecoratorType"}},isInCompositionMode:{defaultValue:null,description:"",name:"isInCompositionMode",required:!0,type:{name:"() => boolean"}},mustForceSelection:{defaultValue:null,description:"",name:"mustForceSelection",required:!0,type:{name:"() => boolean"}},getNativelyRenderedContent:{defaultValue:null,description:"",name:"getNativelyRenderedContent",required:!0,type:{name:"() => ContentState"}},getLastChangeType:{defaultValue:null,description:"",name:"getLastChangeType",required:!0,type:{name:"() => EditorChangeType"}},getInlineStyleOverride:{defaultValue:null,description:'While editing, the user may apply inline style commands with a collapsed\ncursor, intending to type text that adopts the specified style. In this\ncase, we track the specified style as an "override" that takes precedence\nover the inline style of the text adjacent to the cursor.\n\nIf null, there is no override in place.',name:"getInlineStyleOverride",required:!0,type:{name:"() => DraftInlineStyle"}},getCurrentInlineStyle:{defaultValue:null,description:"Get the appropriate inline style for the editor state. If an\noverride is in place, use it. Otherwise, the current style is\nbased on the location of the selection state.",name:"getCurrentInlineStyle",required:!0,type:{name:"() => DraftInlineStyle"}},getBlockTree:{defaultValue:null,description:"",name:"getBlockTree",required:!0,type:{name:"(blockKey: string) => List<any>"}},isSelectionAtStartOfContent:{defaultValue:null,description:"",name:"isSelectionAtStartOfContent",required:!0,type:{name:"() => boolean"}},isSelectionAtEndOfContent:{defaultValue:null,description:"",name:"isSelectionAtEndOfContent",required:!0,type:{name:"() => boolean"}},getDirectionMap:{defaultValue:null,description:"",name:"getDirectionMap",required:!0,type:{name:"() => OrderedMap<any, any>"}},set:{defaultValue:null,description:"Returns a new Map also containing the new key, value pair. If an equivalent\nkey already exists in this Map, it will be replaced.",name:"set",required:!0,type:{name:"(key: string, value: any) => Map<string, any>"}},delete:{defaultValue:null,description:"Returns a new Map which excludes this `key`.\n\nNote: `delete` cannot be safely used in IE8, but is provided to mirror\nthe ES6 collection API.\n@alias remove",name:"delete",required:!0,type:{name:"(key: string) => Map<string, any>"}},remove:{defaultValue:null,description:"",name:"remove",required:!0,type:{name:"(key: string) => Map<string, any>"}},clear:{defaultValue:null,description:"Returns a new Map containing no keys or values.",name:"clear",required:!0,type:{name:"() => Map<string, any>"}},update:{defaultValue:null,description:"Returns a new Map having updated the value at this `key` with the return\nvalue of calling `updater` with the existing value, or `notSetValue` if\nthe key was not set. If called with only a single argument, `updater` is\ncalled with the Map itself.\n\nEquivalent to: `map.set(key, updater(map.get(key, notSetValue)))`.",name:"update",required:!0,type:{name:"{ (updater: (value: Map<string, any>) => Map<string, any>): Map<string, any>; (key: string, updater: (value: any) => any): Map<string, any>; (key: string, notSetValue: any, updater: (value: any) => any): Map<...>; }"}},merge:{defaultValue:null,description:"Returns a new Map resulting from merging the provided Iterables\n(or JS objects) into this Map. In other words, this takes each entry of\neach iterable and sets it on this Map.\n\nIf any of the values provided to `merge` are not Iterable (would return\nfalse for `Immutable.Iterable.isIterable`) then they are deeply converted\nvia `Immutable.fromJS` before being merged. However, if the value is an\nIterable but includes non-iterable JS objects or arrays, those nested\nvalues will be preserved.\n\n     var x = Immutable.Map({a: 10, b: 20, c: 30});\n     var y = Immutable.Map({b: 40, a: 50, d: 60});\n     x.merge(y) // { a: 50, b: 40, c: 30, d: 60 }\n     y.merge(x) // { b: 20, a: 10, d: 60, c: 30 }",name:"merge",required:!0,type:{name:"{ (...iterables: Iterable<string, any>[]): Map<string, any>; (...iterables: { [key: string]: any; }[]): Map<string, any>; }"}},mergeWith:{defaultValue:null,description:"Like `merge()`, `mergeWith()` returns a new Map resulting from merging\nthe provided Iterables (or JS objects) into this Map, but uses the\n`merger` function for dealing with conflicts.\n\n     var x = Immutable.Map({a: 10, b: 20, c: 30});\n     var y = Immutable.Map({b: 40, a: 50, d: 60});\n     x.mergeWith((prev, next) => prev / next, y) // { a: 0.2, b: 0.5, c: 30, d: 60 }\n     y.mergeWith((prev, next) => prev / next, x) // { b: 2, a: 5, d: 60, c: 30 }",name:"mergeWith",required:!0,type:{name:"{ (merger: (previous?: any, next?: any, key?: string) => any, ...iterables: Iterable<string, any>[]): Map<string, any>; (merger: (previous?: any, next?: any, key?: string) => any, ...iterables: { ...; }[]): Map<...>; }"}},mergeDeep:{defaultValue:null,description:"Like `merge()`, but when two Iterables conflict, it merges them as well,\nrecursing deeply through the nested data.\n\n     var x = Immutable.fromJS({a: { x: 10, y: 10 }, b: { x: 20, y: 50 } });\n     var y = Immutable.fromJS({a: { x: 2 }, b: { y: 5 }, c: { z: 3 } });\n     x.mergeDeep(y) // {a: { x: 2, y: 10 }, b: { x: 20, y: 5 }, c: { z: 3 } }",name:"mergeDeep",required:!0,type:{name:"{ (...iterables: Iterable<string, any>[]): Map<string, any>; (...iterables: { [key: string]: any; }[]): Map<string, any>; }"}},mergeDeepWith:{defaultValue:null,description:"Like `mergeDeep()`, but when two non-Iterables conflict, it uses the\n`merger` function to determine the resulting value.\n\n     var x = Immutable.fromJS({a: { x: 10, y: 10 }, b: { x: 20, y: 50 } });\n     var y = Immutable.fromJS({a: { x: 2 }, b: { y: 5 }, c: { z: 3 } });\n     x.mergeDeepWith((prev, next) => prev / next, y)\n     // {a: { x: 5, y: 10 }, b: { x: 20, y: 10 }, c: { z: 3 } }",name:"mergeDeepWith",required:!0,type:{name:"{ (merger: (previous?: any, next?: any, key?: string) => any, ...iterables: Iterable<string, any>[]): Map<string, any>; (merger: (previous?: any, next?: any, key?: string) => any, ...iterables: { ...; }[]): Map<...>; }"}},setIn:{defaultValue:null,description:"Returns a new Map having set `value` at this `keyPath`. If any keys in\n`keyPath` do not exist, a new immutable Map will be created at that key.",name:"setIn",required:!0,type:{name:"{ (keyPath: any[], value: any): Map<string, any>; (KeyPath: Iterable<any, any>, value: any): Map<string, any>; }"}},deleteIn:{defaultValue:null,description:"Returns a new Map having removed the value at this `keyPath`. If any keys\nin `keyPath` do not exist, no change will occur.\n@alias removeIn",name:"deleteIn",required:!0,type:{name:"{ (keyPath: any[]): Map<string, any>; (keyPath: Iterable<any, any>): Map<string, any>; }"}},removeIn:{defaultValue:null,description:"",name:"removeIn",required:!0,type:{name:"{ (keyPath: any[]): Map<string, any>; (keyPath: Iterable<any, any>): Map<string, any>; }"}},updateIn:{defaultValue:null,description:"Returns a new Map having applied the `updater` to the entry found at the\nkeyPath.\n\nIf any keys in `keyPath` do not exist, new Immutable `Map`s will\nbe created at those keys. If the `keyPath` does not already contain a\nvalue, the `updater` function will be called with `notSetValue`, if\nprovided, otherwise `undefined`.\n\n     var data = Immutable.fromJS({ a: { b: { c: 10 } } });\n     data = data.updateIn(['a', 'b', 'c'], val => val * 2);\n     // { a: { b: { c: 20 } } }\n\nIf the `updater` function returns the same value it was called with, then\nno change will occur. This is still true if `notSetValue` is provided.\n\n     var data1 = Immutable.fromJS({ a: { b: { c: 10 } } });\n     data2 = data1.updateIn(['x', 'y', 'z'], 100, val => val);\n     assert(data2 === data1);",name:"updateIn",required:!0,type:{name:"{ (keyPath: any[], updater: (value: any) => any): Map<string, any>; (keyPath: any[], notSetValue: any, updater: (value: any) => any): Map<string, any>; (keyPath: Iterable<any, any>, updater: (value: any) => any): Map<...>; (keyPath: Iterable<...>, notSetValue: any, updater: (value: any) => any): Map<...>; }"}},mergeIn:{defaultValue:null,description:"A combination of `updateIn` and `merge`, returning a new Map, but\nperforming the merge at a point arrived at by following the keyPath.\nIn other words, these two lines are equivalent:\n\n     x.updateIn(['a', 'b', 'c'], abc => abc.merge(y));\n     x.mergeIn(['a', 'b', 'c'], y);",name:"mergeIn",required:!0,type:{name:"{ (keyPath: Iterable<any, any>, ...iterables: Iterable<string, any>[]): Map<string, any>; (keyPath: any[], ...iterables: Iterable<string, any>[]): Map<...>; (keyPath: any[], ...iterables: { ...; }[]): Map<...>; }"}},mergeDeepIn:{defaultValue:null,description:"A combination of `updateIn` and `mergeDeep`, returning a new Map, but\nperforming the deep merge at a point arrived at by following the keyPath.\nIn other words, these two lines are equivalent:\n\n     x.updateIn(['a', 'b', 'c'], abc => abc.mergeDeep(y));\n     x.mergeDeepIn(['a', 'b', 'c'], y);",name:"mergeDeepIn",required:!0,type:{name:"{ (keyPath: Iterable<any, any>, ...iterables: Iterable<string, any>[]): Map<string, any>; (keyPath: any[], ...iterables: Iterable<string, any>[]): Map<...>; (keyPath: any[], ...iterables: { ...; }[]): Map<...>; }"}},withMutations:{defaultValue:null,description:"Every time you call one of the above functions, a new immutable Map is\ncreated. If a pure function calls a number of these to produce a final\nreturn value, then a penalty on performance and memory has been paid by\ncreating all of the intermediate immutable Maps.\n\nIf you need to apply a series of mutations to produce a new immutable\nMap, `withMutations()` creates a temporary mutable copy of the Map which\ncan apply mutations in a highly performant manner. In fact, this is\nexactly how complex mutations like `merge` are done.\n\nAs an example, this results in the creation of 2, not 4, new Maps:\n\n     var map1 = Immutable.Map();\n     var map2 = map1.withMutations(map => {\n       map.set('a', 1).set('b', 2).set('c', 3);\n     });\n     assert(map1.size === 0);\n     assert(map2.size === 3);\n\nNote: Not all methods can be used on a mutable collection or within\n`withMutations`! Only `set` and `merge` may be used mutatively.",name:"withMutations",required:!0,type:{name:"(mutator: (mutable: Map<string, any>) => any) => Map<string, any>"}},asMutable:{defaultValue:null,description:"Another way to avoid creation of intermediate Immutable maps is to create\na mutable copy of this collection. Mutable copies *always* return `this`,\nand thus shouldn't be used for equality. Your function should never return\na mutable copy of a collection, only use it internally to create a new\ncollection. If possible, use `withMutations` as it provides an easier to\nuse API.\n\nNote: if the collection is already mutable, `asMutable` returns itself.\n\nNote: Not all methods can be used on a mutable collection or within\n`withMutations`! Only `set` and `merge` may be used mutatively.",name:"asMutable",required:!0,type:{name:"() => Map<string, any>"}},asImmutable:{defaultValue:null,description:"The yin to `asMutable`'s yang. Because it applies to mutable collections,\nthis operation is *mutable* and returns itself. Once performed, the mutable\ncopy has become immutable and can be safely returned from a function.",name:"asImmutable",required:!0,type:{name:"() => Map<string, any>"}},toSeq:{defaultValue:null,description:"Returns Seq.Keyed.\n@override",name:"toSeq",required:!0,type:{name:"() => Keyed<string, any>"}},size:{defaultValue:null,description:"All collections maintain their current `size` as an integer.",name:"size",required:!0,type:{name:"number"}},equals:{defaultValue:null,description:"True if this and the other Iterable have value equality, as defined\nby `Immutable.is()`.\n\nNote: This is equivalent to `Immutable.is(this, other)`, but provided to\nallow for chained expressions.",name:"equals",required:!0,type:{name:"(other: Iterable<string, any>) => boolean"}},hashCode:{defaultValue:null,description:"Computes and returns the hashed identity for this Iterable.\n\nThe `hashCode` of an Iterable is used to determine potential equality,\nand is used when adding this to a `Set` or as a key in a `Map`, enabling\nlookup via a different instance.\n\n     var a = List.of(1, 2, 3);\n     var b = List.of(1, 2, 3);\n     assert(a !== b); // different instances\n     var set = Set.of(a);\n     assert(set.has(b) === true);\n\nIf two values have the same `hashCode`, they are [not guaranteed\nto be equal][Hash Collision]. If two values have different `hashCode`s,\nthey must not be equal.\n\n[Hash Collision]: http://en.wikipedia.org/wiki/Collision_(computer_science)",name:"hashCode",required:!0,type:{name:"() => number"}},get:{defaultValue:null,description:"Returns the value associated with the provided key, or notSetValue if\nthe Iterable does not contain this key.\n\nNote: it is possible a key may be associated with an `undefined` value,\nso if `notSetValue` is not provided and this method returns `undefined`,\nthat does not guarantee the key was not found.",name:"get",required:!0,type:{name:"(key: string, notSetValue?: any) => any"}},has:{defaultValue:null,description:"True if a key exists within this `Iterable`.",name:"has",required:!0,type:{name:"(key: string) => boolean"}},includes:{defaultValue:null,description:"True if a value exists within this `Iterable`.\n@alias contains",name:"includes",required:!0,type:{name:"(value: any) => boolean"}},contains:{defaultValue:null,description:"",name:"contains",required:!0,type:{name:"(value: any) => boolean"}},first:{defaultValue:null,description:"The first value in the Iterable.",name:"first",required:!0,type:{name:"() => any"}},last:{defaultValue:null,description:"The last value in the Iterable.",name:"last",required:!0,type:{name:"() => any"}},getIn:{defaultValue:null,description:"Returns the value found by following a path of keys or indices through\nnested Iterables.",name:"getIn",required:!0,type:{name:"{ (searchKeyPath: any[], notSetValue?: any): any; (searchKeyPath: Iterable<any, any>, notSetValue?: any): any; }"}},hasIn:{defaultValue:null,description:"True if the result of following a path of keys or indices through nested\nIterables results in a set value.",name:"hasIn",required:!0,type:{name:"{ (searchKeyPath: any[]): boolean; (searchKeyPath: Iterable<any, any>): boolean; }"}},toArray:{defaultValue:null,description:"Shallowly converts this iterable to an Array, discarding keys.",name:"toArray",required:!0,type:{name:"() => any[]"}},toObject:{defaultValue:null,description:"Shallowly converts this Iterable to an Object.\n\nThrows if keys are not strings.",name:"toObject",required:!0,type:{name:"() => { [key: string]: any; }"}},toMap:{defaultValue:null,description:"Converts this Iterable to a Map, Throws if keys are not hashable.\n\nNote: This is equivalent to `Map(this.toKeyedSeq())`, but provided\nfor convenience and to allow for chained expressions.",name:"toMap",required:!0,type:{name:"() => Map<string, any>"}},toOrderedMap:{defaultValue:null,description:"Converts this Iterable to a Map, maintaining the order of iteration.\n\nNote: This is equivalent to `OrderedMap(this.toKeyedSeq())`, but\nprovided for convenience and to allow for chained expressions.",name:"toOrderedMap",required:!0,type:{name:"() => Map<string, any>"}},toSet:{defaultValue:null,description:"Converts this Iterable to a Set, discarding keys. Throws if values\nare not hashable.\n\nNote: This is equivalent to `Set(this)`, but provided to allow for\nchained expressions.",name:"toSet",required:!0,type:{name:"() => Set<any>"}},toOrderedSet:{defaultValue:null,description:"Converts this Iterable to a Set, maintaining the order of iteration and\ndiscarding keys.\n\nNote: This is equivalent to `OrderedSet(this.valueSeq())`, but provided\nfor convenience and to allow for chained expressions.",name:"toOrderedSet",required:!0,type:{name:"() => Set<any>"}},toList:{defaultValue:null,description:"Converts this Iterable to a List, discarding keys.\n\nNote: This is equivalent to `List(this)`, but provided to allow\nfor chained expressions.",name:"toList",required:!0,type:{name:"() => List<any>"}},toStack:{defaultValue:null,description:"Converts this Iterable to a Stack, discarding keys. Throws if values\nare not hashable.\n\nNote: This is equivalent to `Stack(this)`, but provided to allow for\nchained expressions.",name:"toStack",required:!0,type:{name:"() => Stack<any>"}},toKeyedSeq:{defaultValue:null,description:"Returns a Seq.Keyed from this Iterable where indices are treated as keys.\n\nThis is useful if you want to operate on an\nIterable.Indexed and preserve the [index, value] pairs.\n\nThe returned Seq will have identical iteration order as\nthis Iterable.\n\nExample:\n\n     var indexedSeq = Immutable.Seq.of('A', 'B', 'C');\n     indexedSeq.filter(v => v === 'B').toString() // Seq [ 'B' ]\n     var keyedSeq = indexedSeq.toKeyedSeq();\n     keyedSeq.filter(v => v === 'B').toString() // Seq { 1: 'B' }",name:"toKeyedSeq",required:!0,type:{name:"() => Keyed<string, any>"}},toIndexedSeq:{defaultValue:null,description:"Returns an Seq.Indexed of the values of this Iterable, discarding keys.",name:"toIndexedSeq",required:!0,type:{name:"() => Indexed<any>"}},toSetSeq:{defaultValue:null,description:"Returns a Seq.Set of the values of this Iterable, discarding keys.",name:"toSetSeq",required:!0,type:{name:"() => Set<any>"}},keys:{defaultValue:null,description:"An iterator of this `Iterable`'s keys.",name:"keys",required:!0,type:{name:"() => Iterator<string>"}},values:{defaultValue:null,description:"An iterator of this `Iterable`'s values.",name:"values",required:!0,type:{name:"() => Iterator<any>"}},entries:{defaultValue:null,description:"An iterator of this `Iterable`'s entries as `[key, value]` tuples.",name:"entries",required:!0,type:{name:"() => Iterator<any[]>"}},keySeq:{defaultValue:null,description:"Returns a new Seq.Indexed of the keys of this Iterable,\ndiscarding values.",name:"keySeq",required:!0,type:{name:"() => Indexed<string>"}},valueSeq:{defaultValue:null,description:"Returns an Seq.Indexed of the values of this Iterable, discarding keys.",name:"valueSeq",required:!0,type:{name:"() => Indexed<any>"}},entrySeq:{defaultValue:null,description:"Returns a new Seq.Indexed of [key, value] tuples.",name:"entrySeq",required:!0,type:{name:"() => Indexed<any[]>"}},map:{defaultValue:null,description:"Returns a new Iterable of the same type with values passed through a\n`mapper` function.\n\n     Seq({ a: 1, b: 2 }).map(x => 10 * x)\n     // Seq { a: 10, b: 20 }",name:"map",required:!0,type:{name:"<M>(mapper: (value?: any, key?: string, iter?: Iterable<string, any>) => M, context?: any) => Iterable<string, M>"}},filter:{defaultValue:null,description:"Returns a new Iterable of the same type with only the entries for which\nthe `predicate` function returns true.\n\n     Seq({a:1,b:2,c:3,d:4}).filter(x => x % 2 === 0)\n     // Seq { b: 2, d: 4 }",name:"filter",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => Iterable<string, any>"}},filterNot:{defaultValue:null,description:"Returns a new Iterable of the same type with only the entries for which\nthe `predicate` function returns false.\n\n     Seq({a:1,b:2,c:3,d:4}).filterNot(x => x % 2 === 0)\n     // Seq { a: 1, c: 3 }",name:"filterNot",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => Iterable<string, any>"}},reverse:{defaultValue:null,description:"Returns a new Iterable of the same type in reverse order.",name:"reverse",required:!0,type:{name:"() => Iterable<string, any>"}},sort:{defaultValue:null,description:"Returns a new Iterable of the same type which includes the same entries,\nstably sorted by using a `comparator`.\n\nIf a `comparator` is not provided, a default comparator uses `<` and `>`.\n\n`comparator(valueA, valueB)`:\n\n   * Returns `0` if the elements should not be swapped.\n   * Returns `-1` (or any negative number) if `valueA` comes before `valueB`\n   * Returns `1` (or any positive number) if `valueA` comes after `valueB`\n   * Is pure, i.e. it must always return the same value for the same pair\n     of values.\n\nWhen sorting collections which have no defined order, their ordered\nequivalents will be returned. e.g. `map.sort()` returns OrderedMap.",name:"sort",required:!0,type:{name:"(comparator?: (valueA: any, valueB: any) => number) => Iterable<string, any>"}},sortBy:{defaultValue:null,description:"Like `sort`, but also accepts a `comparatorValueMapper` which allows for\nsorting by more sophisticated means:\n\n     hitters.sortBy(hitter => hitter.avgHits);",name:"sortBy",required:!0,type:{name:"<C>(comparatorValueMapper: (value?: any, key?: string, iter?: Iterable<string, any>) => C, comparator?: (valueA: C, valueB: C) => number) => Iterable<string, any>"}},groupBy:{defaultValue:null,description:"Returns a `Iterable.Keyed` of `Iterable.Keyeds`, grouped by the return\nvalue of the `grouper` function.\n\nNote: This is always an eager operation.",name:"groupBy",required:!0,type:{name:"<G>(grouper: (value?: any, key?: string, iter?: Iterable<string, any>) => G, context?: any) => Keyed<G, Iterable<string, any>>"}},forEach:{defaultValue:null,description:"The `sideEffect` is executed for every entry in the Iterable.\n\nUnlike `Array#forEach`, if any call of `sideEffect` returns\n`false`, the iteration will stop. Returns the number of entries iterated\n(including the last iteration which returned false).",name:"forEach",required:!0,type:{name:"(sideEffect: (value?: any, key?: string, iter?: Iterable<string, any>) => any, context?: any) => number"}},slice:{defaultValue:null,description:"Returns a new Iterable of the same type representing a portion of this\nIterable from start up to but not including end.\n\nIf begin is negative, it is offset from the end of the Iterable. e.g.\n`slice(-2)` returns a Iterable of the last two entries. If it is not\nprovided the new Iterable will begin at the beginning of this Iterable.\n\nIf end is negative, it is offset from the end of the Iterable. e.g.\n`slice(0, -1)` returns an Iterable of everything but the last entry. If\nit is not provided, the new Iterable will continue through the end of\nthis Iterable.\n\nIf the requested slice is equivalent to the current Iterable, then it\nwill return itself.",name:"slice",required:!0,type:{name:"(begin?: number, end?: number) => Iterable<string, any>"}},rest:{defaultValue:null,description:"Returns a new Iterable of the same type containing all entries except\nthe first.",name:"rest",required:!0,type:{name:"() => Iterable<string, any>"}},butLast:{defaultValue:null,description:"Returns a new Iterable of the same type containing all entries except\nthe last.",name:"butLast",required:!0,type:{name:"() => Iterable<string, any>"}},skip:{defaultValue:null,description:"Returns a new Iterable of the same type which excludes the first `amount`\nentries from this Iterable.",name:"skip",required:!0,type:{name:"(amount: number) => Iterable<string, any>"}},skipLast:{defaultValue:null,description:"Returns a new Iterable of the same type which excludes the last `amount`\nentries from this Iterable.",name:"skipLast",required:!0,type:{name:"(amount: number) => Iterable<string, any>"}},skipWhile:{defaultValue:null,description:"Returns a new Iterable of the same type which includes entries starting\nfrom when `predicate` first returns false.\n\n     Seq.of('dog','frog','cat','hat','god')\n       .skipWhile(x => x.match(/g/))\n     // Seq [ 'cat', 'hat', 'god' ]",name:"skipWhile",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => Iterable<string, any>"}},skipUntil:{defaultValue:null,description:"Returns a new Iterable of the same type which includes entries starting\nfrom when `predicate` first returns true.\n\n     Seq.of('dog','frog','cat','hat','god')\n       .skipUntil(x => x.match(/hat/))\n     // Seq [ 'hat', 'god' ]",name:"skipUntil",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => Iterable<string, any>"}},take:{defaultValue:null,description:"Returns a new Iterable of the same type which includes the first `amount`\nentries from this Iterable.",name:"take",required:!0,type:{name:"(amount: number) => Iterable<string, any>"}},takeLast:{defaultValue:null,description:"Returns a new Iterable of the same type which includes the last `amount`\nentries from this Iterable.",name:"takeLast",required:!0,type:{name:"(amount: number) => Iterable<string, any>"}},takeWhile:{defaultValue:null,description:"Returns a new Iterable of the same type which includes entries from this\nIterable as long as the `predicate` returns true.\n\n     Seq.of('dog','frog','cat','hat','god')\n       .takeWhile(x => x.match(/o/))\n     // Seq [ 'dog', 'frog' ]",name:"takeWhile",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => Iterable<string, any>"}},takeUntil:{defaultValue:null,description:"Returns a new Iterable of the same type which includes entries from this\nIterable as long as the `predicate` returns false.\n\n     Seq.of('dog','frog','cat','hat','god').takeUntil(x => x.match(/at/))\n     // ['dog', 'frog']",name:"takeUntil",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => Iterable<string, any>"}},concat:{defaultValue:null,description:"Returns a new Iterable of the same type with other values and\niterable-like concatenated to this one.\n\nFor Seqs, all entries will be present in\nthe resulting iterable, even if they have the same key.",name:"concat",required:!0,type:{name:"(...valuesOrIterables: any[]) => Iterable<string, any>"}},flatten:{defaultValue:null,description:"Flattens nested Iterables.\n\nWill deeply flatten the Iterable by default, returning an Iterable of the\nsame type, but a `depth` can be provided in the form of a number or\nboolean (where true means to shallowly flatten one level). A depth of 0\n(or shallow: false) will deeply flatten.\n\nFlattens only others Iterable, not Arrays or Objects.\n\nNote: `flatten(true)` operates on Iterable<any, Iterable<K, V>> and\nreturns Iterable<K, V>",name:"flatten",required:!0,type:{name:"{ (depth?: number): Iterable<any, any>; (shallow?: boolean): Iterable<any, any>; }"}},flatMap:{defaultValue:null,description:"Flat-maps the Iterable, returning an Iterable of the same type.\n\nSimilar to `iter.map(...).flatten(true)`.",name:"flatMap",required:!0,type:{name:"{ <MK, MV>(mapper: (value?: any, key?: string, iter?: Iterable<string, any>) => Iterable<MK, MV>, context?: any): Iterable<MK, MV>; <MK, MV>(mapper: (value?: any, key?: string, iter?: Iterable<...>) => any, context?: any): Iterable<...>; }"}},reduce:{defaultValue:null,description:"Reduces the Iterable to a value by calling the `reducer` for every entry\nin the Iterable and passing along the reduced value.\n\nIf `initialReduction` is not provided, or is null, the first item in the\nIterable will be used.\n@see `Array#reduce`.",name:"reduce",required:!0,type:{name:"<R>(reducer: (reduction?: R, value?: any, key?: string, iter?: Iterable<string, any>) => R, initialReduction?: R, context?: any) => R"}},reduceRight:{defaultValue:null,description:"Reduces the Iterable in reverse (from the right side).\n\nNote: Similar to this.reverse().reduce(), and provided for parity\nwith `Array#reduceRight`.",name:"reduceRight",required:!0,type:{name:"<R>(reducer: (reduction?: R, value?: any, key?: string, iter?: Iterable<string, any>) => R, initialReduction?: R, context?: any) => R"}},every:{defaultValue:null,description:"True if `predicate` returns true for all entries in the Iterable.",name:"every",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => boolean"}},some:{defaultValue:null,description:"True if `predicate` returns true for any entry in the Iterable.",name:"some",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => boolean"}},join:{defaultValue:null,description:'Joins values together as a string, inserting a separator between each.\nThe default separator is `","`.',name:"join",required:!0,type:{name:"(separator?: string) => string"}},isEmpty:{defaultValue:null,description:"Returns true if this Iterable includes no values.\n\nFor some lazy `Seq`, `isEmpty` might need to iterate to determine\nemptiness. At most one iteration will occur.",name:"isEmpty",required:!0,type:{name:"() => boolean"}},count:{defaultValue:null,description:"Returns the size of this Iterable.\n\nRegardless of if this Iterable can describe its size lazily (some Seqs\ncannot), this method will always return the correct size. E.g. it\nevaluates a lazy `Seq` if necessary.\n\nIf `predicate` is provided, then this returns the count of entries in the\nIterable for which the `predicate` returns true.",name:"count",required:!0,type:{name:"{ (): number; (predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any): number; }"}},countBy:{defaultValue:null,description:"Returns a `Seq.Keyed` of counts, grouped by the return value of\nthe `grouper` function.\n\nNote: This is not a lazy operation.",name:"countBy",required:!0,type:{name:"<G>(grouper: (value?: any, key?: string, iter?: Iterable<string, any>) => G, context?: any) => Map<G, number>"}},find:{defaultValue:null,description:"Returns the value for which the `predicate` returns true.",name:"find",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any, notSetValue?: any) => any"}},findLast:{defaultValue:null,description:"Returns the last value for which the `predicate` returns true.\n\nNote: `predicate` will be called for each entry in reverse.",name:"findLast",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any, notSetValue?: any) => any"}},findEntry:{defaultValue:null,description:"Returns the [key, value] entry for which the `predicate` returns true.",name:"findEntry",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any, notSetValue?: any) => any[]"}},findLastEntry:{defaultValue:null,description:"Returns the last [key, value] entry for which the `predicate`\nreturns true.\n\nNote: `predicate` will be called for each entry in reverse.",name:"findLastEntry",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any, notSetValue?: any) => any[]"}},max:{defaultValue:null,description:"Returns the maximum value in this collection. If any values are\ncomparatively equivalent, the first one found will be returned.\n\nThe `comparator` is used in the same way as `Iterable#sort`. If it is not\nprovided, the default comparator is `>`.\n\nWhen two values are considered equivalent, the first encountered will be\nreturned. Otherwise, `max` will operate independent of the order of input\nas long as the comparator is commutative. The default comparator `>` is\ncommutative *only* when types do not differ.\n\nIf `comparator` returns 0 and either value is NaN, undefined, or null,\nthat value will be returned.",name:"max",required:!0,type:{name:"(comparator?: (valueA: any, valueB: any) => number) => any"}},maxBy:{defaultValue:null,description:"Like `max`, but also accepts a `comparatorValueMapper` which allows for\ncomparing by more sophisticated means:\n\n     hitters.maxBy(hitter => hitter.avgHits);",name:"maxBy",required:!0,type:{name:"<C>(comparatorValueMapper: (value?: any, key?: string, iter?: Iterable<string, any>) => C, comparator?: (valueA: C, valueB: C) => number) => any"}},min:{defaultValue:null,description:"Returns the minimum value in this collection. If any values are\ncomparatively equivalent, the first one found will be returned.\n\nThe `comparator` is used in the same way as `Iterable#sort`. If it is not\nprovided, the default comparator is `<`.\n\nWhen two values are considered equivalent, the first encountered will be\nreturned. Otherwise, `min` will operate independent of the order of input\nas long as the comparator is commutative. The default comparator `<` is\ncommutative *only* when types do not differ.\n\nIf `comparator` returns 0 and either value is NaN, undefined, or null,\nthat value will be returned.",name:"min",required:!0,type:{name:"(comparator?: (valueA: any, valueB: any) => number) => any"}},minBy:{defaultValue:null,description:"Like `min`, but also accepts a `comparatorValueMapper` which allows for\ncomparing by more sophisticated means:\n\n     hitters.minBy(hitter => hitter.avgHits);",name:"minBy",required:!0,type:{name:"<C>(comparatorValueMapper: (value?: any, key?: string, iter?: Iterable<string, any>) => C, comparator?: (valueA: C, valueB: C) => number) => any"}},isSubset:{defaultValue:null,description:"True if `iter` includes every value in this Iterable.",name:"isSubset",required:!0,type:{name:"{ (iter: Iterable<any, any>): boolean; (iter: any[]): boolean; }"}},isSuperset:{defaultValue:null,description:"True if this Iterable includes every value in `iter`.",name:"isSuperset",required:!0,type:{name:"{ (iter: Iterable<any, any>): boolean; (iter: any[]): boolean; }"}},flip:{defaultValue:null,description:"Returns a new Iterable.Keyed of the same type where the keys and values\nhave been flipped.\n\n     Seq({ a: 'z', b: 'y' }).flip() // { z: 'a', y: 'b' }",name:"flip",required:!0,type:{name:"() => Keyed<any, string>"}},mapKeys:{defaultValue:null,description:"Returns a new Iterable.Keyed of the same type with keys passed through\na `mapper` function.\n\n     Seq({ a: 1, b: 2 })\n       .mapKeys(x => x.toUpperCase())\n     // Seq { A: 1, B: 2 }",name:"mapKeys",required:!0,type:{name:"<M>(mapper: (key?: string, value?: any, iter?: Keyed<string, any>) => M, context?: any) => Keyed<M, any>"}},mapEntries:{defaultValue:null,description:"Returns a new Iterable.Keyed of the same type with entries\n([key, value] tuples) passed through a `mapper` function.\n\n     Seq({ a: 1, b: 2 })\n       .mapEntries(([k, v]) => [k.toUpperCase(), v * 2])\n     // Seq { A: 2, B: 4 }",name:"mapEntries",required:!0,type:{name:"<KM, VM>(mapper: (entry?: any[], index?: number, iter?: Keyed<string, any>) => any[], context?: any) => Keyed<KM, VM>"}},keyOf:{defaultValue:null,description:"Returns the key associated with the search value, or undefined.",name:"keyOf",required:!0,type:{name:"(searchValue: any) => string"}},lastKeyOf:{defaultValue:null,description:"Returns the last key associated with the search value, or undefined.",name:"lastKeyOf",required:!0,type:{name:"(searchValue: any) => string"}},findKey:{defaultValue:null,description:"Returns the key for which the `predicate` returns true.",name:"findKey",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Keyed<string, any>) => boolean, context?: any) => string"}},findLastKey:{defaultValue:null,description:"Returns the last key for which the `predicate` returns true.\n\nNote: `predicate` will be called for each entry in reverse.",name:"findLastKey",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Keyed<string, any>) => boolean, context?: any) => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/style.ts#getFirstSelectionState"]={docgenInfo:getFirstSelectionState.__docgenInfo,name:"getFirstSelectionState",path:"src/tools/style.ts#getFirstSelectionState"})}catch(__react_docgen_typescript_loader_error){}try{getFontStyleFromEditorState.displayName="getFontStyleFromEditorState",getFontStyleFromEditorState.__docgenInfo={description:"",displayName:"getFontStyleFromEditorState",props:{toJS:{defaultValue:null,description:"Deeply converts this Iterable to equivalent JS.\n\n`Iterable.Indexeds`, and `Iterable.Sets` become Arrays, while\n`Iterable.Keyeds` become Objects.",name:"toJS",required:!0,type:{name:"() => Object"}},getAllowUndo:{defaultValue:null,description:"",name:"getAllowUndo",required:!0,type:{name:"() => boolean"}},getCurrentContent:{defaultValue:null,description:"",name:"getCurrentContent",required:!0,type:{name:"() => ContentState"}},getUndoStack:{defaultValue:null,description:"",name:"getUndoStack",required:!0,type:{name:"() => Stack<ContentState>"}},getRedoStack:{defaultValue:null,description:"",name:"getRedoStack",required:!0,type:{name:"() => Stack<ContentState>"}},getSelection:{defaultValue:null,description:"",name:"getSelection",required:!0,type:{name:"() => SelectionState"}},getDecorator:{defaultValue:null,description:"",name:"getDecorator",required:!0,type:{name:"() => DraftDecoratorType"}},isInCompositionMode:{defaultValue:null,description:"",name:"isInCompositionMode",required:!0,type:{name:"() => boolean"}},mustForceSelection:{defaultValue:null,description:"",name:"mustForceSelection",required:!0,type:{name:"() => boolean"}},getNativelyRenderedContent:{defaultValue:null,description:"",name:"getNativelyRenderedContent",required:!0,type:{name:"() => ContentState"}},getLastChangeType:{defaultValue:null,description:"",name:"getLastChangeType",required:!0,type:{name:"() => EditorChangeType"}},getInlineStyleOverride:{defaultValue:null,description:'While editing, the user may apply inline style commands with a collapsed\ncursor, intending to type text that adopts the specified style. In this\ncase, we track the specified style as an "override" that takes precedence\nover the inline style of the text adjacent to the cursor.\n\nIf null, there is no override in place.',name:"getInlineStyleOverride",required:!0,type:{name:"() => DraftInlineStyle"}},getCurrentInlineStyle:{defaultValue:null,description:"Get the appropriate inline style for the editor state. If an\noverride is in place, use it. Otherwise, the current style is\nbased on the location of the selection state.",name:"getCurrentInlineStyle",required:!0,type:{name:"() => DraftInlineStyle"}},getBlockTree:{defaultValue:null,description:"",name:"getBlockTree",required:!0,type:{name:"(blockKey: string) => List<any>"}},isSelectionAtStartOfContent:{defaultValue:null,description:"",name:"isSelectionAtStartOfContent",required:!0,type:{name:"() => boolean"}},isSelectionAtEndOfContent:{defaultValue:null,description:"",name:"isSelectionAtEndOfContent",required:!0,type:{name:"() => boolean"}},getDirectionMap:{defaultValue:null,description:"",name:"getDirectionMap",required:!0,type:{name:"() => OrderedMap<any, any>"}},set:{defaultValue:null,description:"Returns a new Map also containing the new key, value pair. If an equivalent\nkey already exists in this Map, it will be replaced.",name:"set",required:!0,type:{name:"(key: string, value: any) => Map<string, any>"}},delete:{defaultValue:null,description:"Returns a new Map which excludes this `key`.\n\nNote: `delete` cannot be safely used in IE8, but is provided to mirror\nthe ES6 collection API.\n@alias remove",name:"delete",required:!0,type:{name:"(key: string) => Map<string, any>"}},remove:{defaultValue:null,description:"",name:"remove",required:!0,type:{name:"(key: string) => Map<string, any>"}},clear:{defaultValue:null,description:"Returns a new Map containing no keys or values.",name:"clear",required:!0,type:{name:"() => Map<string, any>"}},update:{defaultValue:null,description:"Returns a new Map having updated the value at this `key` with the return\nvalue of calling `updater` with the existing value, or `notSetValue` if\nthe key was not set. If called with only a single argument, `updater` is\ncalled with the Map itself.\n\nEquivalent to: `map.set(key, updater(map.get(key, notSetValue)))`.",name:"update",required:!0,type:{name:"{ (updater: (value: Map<string, any>) => Map<string, any>): Map<string, any>; (key: string, updater: (value: any) => any): Map<string, any>; (key: string, notSetValue: any, updater: (value: any) => any): Map<...>; }"}},merge:{defaultValue:null,description:"Returns a new Map resulting from merging the provided Iterables\n(or JS objects) into this Map. In other words, this takes each entry of\neach iterable and sets it on this Map.\n\nIf any of the values provided to `merge` are not Iterable (would return\nfalse for `Immutable.Iterable.isIterable`) then they are deeply converted\nvia `Immutable.fromJS` before being merged. However, if the value is an\nIterable but includes non-iterable JS objects or arrays, those nested\nvalues will be preserved.\n\n     var x = Immutable.Map({a: 10, b: 20, c: 30});\n     var y = Immutable.Map({b: 40, a: 50, d: 60});\n     x.merge(y) // { a: 50, b: 40, c: 30, d: 60 }\n     y.merge(x) // { b: 20, a: 10, d: 60, c: 30 }",name:"merge",required:!0,type:{name:"{ (...iterables: Iterable<string, any>[]): Map<string, any>; (...iterables: { [key: string]: any; }[]): Map<string, any>; }"}},mergeWith:{defaultValue:null,description:"Like `merge()`, `mergeWith()` returns a new Map resulting from merging\nthe provided Iterables (or JS objects) into this Map, but uses the\n`merger` function for dealing with conflicts.\n\n     var x = Immutable.Map({a: 10, b: 20, c: 30});\n     var y = Immutable.Map({b: 40, a: 50, d: 60});\n     x.mergeWith((prev, next) => prev / next, y) // { a: 0.2, b: 0.5, c: 30, d: 60 }\n     y.mergeWith((prev, next) => prev / next, x) // { b: 2, a: 5, d: 60, c: 30 }",name:"mergeWith",required:!0,type:{name:"{ (merger: (previous?: any, next?: any, key?: string) => any, ...iterables: Iterable<string, any>[]): Map<string, any>; (merger: (previous?: any, next?: any, key?: string) => any, ...iterables: { ...; }[]): Map<...>; }"}},mergeDeep:{defaultValue:null,description:"Like `merge()`, but when two Iterables conflict, it merges them as well,\nrecursing deeply through the nested data.\n\n     var x = Immutable.fromJS({a: { x: 10, y: 10 }, b: { x: 20, y: 50 } });\n     var y = Immutable.fromJS({a: { x: 2 }, b: { y: 5 }, c: { z: 3 } });\n     x.mergeDeep(y) // {a: { x: 2, y: 10 }, b: { x: 20, y: 5 }, c: { z: 3 } }",name:"mergeDeep",required:!0,type:{name:"{ (...iterables: Iterable<string, any>[]): Map<string, any>; (...iterables: { [key: string]: any; }[]): Map<string, any>; }"}},mergeDeepWith:{defaultValue:null,description:"Like `mergeDeep()`, but when two non-Iterables conflict, it uses the\n`merger` function to determine the resulting value.\n\n     var x = Immutable.fromJS({a: { x: 10, y: 10 }, b: { x: 20, y: 50 } });\n     var y = Immutable.fromJS({a: { x: 2 }, b: { y: 5 }, c: { z: 3 } });\n     x.mergeDeepWith((prev, next) => prev / next, y)\n     // {a: { x: 5, y: 10 }, b: { x: 20, y: 10 }, c: { z: 3 } }",name:"mergeDeepWith",required:!0,type:{name:"{ (merger: (previous?: any, next?: any, key?: string) => any, ...iterables: Iterable<string, any>[]): Map<string, any>; (merger: (previous?: any, next?: any, key?: string) => any, ...iterables: { ...; }[]): Map<...>; }"}},setIn:{defaultValue:null,description:"Returns a new Map having set `value` at this `keyPath`. If any keys in\n`keyPath` do not exist, a new immutable Map will be created at that key.",name:"setIn",required:!0,type:{name:"{ (keyPath: any[], value: any): Map<string, any>; (KeyPath: Iterable<any, any>, value: any): Map<string, any>; }"}},deleteIn:{defaultValue:null,description:"Returns a new Map having removed the value at this `keyPath`. If any keys\nin `keyPath` do not exist, no change will occur.\n@alias removeIn",name:"deleteIn",required:!0,type:{name:"{ (keyPath: any[]): Map<string, any>; (keyPath: Iterable<any, any>): Map<string, any>; }"}},removeIn:{defaultValue:null,description:"",name:"removeIn",required:!0,type:{name:"{ (keyPath: any[]): Map<string, any>; (keyPath: Iterable<any, any>): Map<string, any>; }"}},updateIn:{defaultValue:null,description:"Returns a new Map having applied the `updater` to the entry found at the\nkeyPath.\n\nIf any keys in `keyPath` do not exist, new Immutable `Map`s will\nbe created at those keys. If the `keyPath` does not already contain a\nvalue, the `updater` function will be called with `notSetValue`, if\nprovided, otherwise `undefined`.\n\n     var data = Immutable.fromJS({ a: { b: { c: 10 } } });\n     data = data.updateIn(['a', 'b', 'c'], val => val * 2);\n     // { a: { b: { c: 20 } } }\n\nIf the `updater` function returns the same value it was called with, then\nno change will occur. This is still true if `notSetValue` is provided.\n\n     var data1 = Immutable.fromJS({ a: { b: { c: 10 } } });\n     data2 = data1.updateIn(['x', 'y', 'z'], 100, val => val);\n     assert(data2 === data1);",name:"updateIn",required:!0,type:{name:"{ (keyPath: any[], updater: (value: any) => any): Map<string, any>; (keyPath: any[], notSetValue: any, updater: (value: any) => any): Map<string, any>; (keyPath: Iterable<any, any>, updater: (value: any) => any): Map<...>; (keyPath: Iterable<...>, notSetValue: any, updater: (value: any) => any): Map<...>; }"}},mergeIn:{defaultValue:null,description:"A combination of `updateIn` and `merge`, returning a new Map, but\nperforming the merge at a point arrived at by following the keyPath.\nIn other words, these two lines are equivalent:\n\n     x.updateIn(['a', 'b', 'c'], abc => abc.merge(y));\n     x.mergeIn(['a', 'b', 'c'], y);",name:"mergeIn",required:!0,type:{name:"{ (keyPath: Iterable<any, any>, ...iterables: Iterable<string, any>[]): Map<string, any>; (keyPath: any[], ...iterables: Iterable<string, any>[]): Map<...>; (keyPath: any[], ...iterables: { ...; }[]): Map<...>; }"}},mergeDeepIn:{defaultValue:null,description:"A combination of `updateIn` and `mergeDeep`, returning a new Map, but\nperforming the deep merge at a point arrived at by following the keyPath.\nIn other words, these two lines are equivalent:\n\n     x.updateIn(['a', 'b', 'c'], abc => abc.mergeDeep(y));\n     x.mergeDeepIn(['a', 'b', 'c'], y);",name:"mergeDeepIn",required:!0,type:{name:"{ (keyPath: Iterable<any, any>, ...iterables: Iterable<string, any>[]): Map<string, any>; (keyPath: any[], ...iterables: Iterable<string, any>[]): Map<...>; (keyPath: any[], ...iterables: { ...; }[]): Map<...>; }"}},withMutations:{defaultValue:null,description:"Every time you call one of the above functions, a new immutable Map is\ncreated. If a pure function calls a number of these to produce a final\nreturn value, then a penalty on performance and memory has been paid by\ncreating all of the intermediate immutable Maps.\n\nIf you need to apply a series of mutations to produce a new immutable\nMap, `withMutations()` creates a temporary mutable copy of the Map which\ncan apply mutations in a highly performant manner. In fact, this is\nexactly how complex mutations like `merge` are done.\n\nAs an example, this results in the creation of 2, not 4, new Maps:\n\n     var map1 = Immutable.Map();\n     var map2 = map1.withMutations(map => {\n       map.set('a', 1).set('b', 2).set('c', 3);\n     });\n     assert(map1.size === 0);\n     assert(map2.size === 3);\n\nNote: Not all methods can be used on a mutable collection or within\n`withMutations`! Only `set` and `merge` may be used mutatively.",name:"withMutations",required:!0,type:{name:"(mutator: (mutable: Map<string, any>) => any) => Map<string, any>"}},asMutable:{defaultValue:null,description:"Another way to avoid creation of intermediate Immutable maps is to create\na mutable copy of this collection. Mutable copies *always* return `this`,\nand thus shouldn't be used for equality. Your function should never return\na mutable copy of a collection, only use it internally to create a new\ncollection. If possible, use `withMutations` as it provides an easier to\nuse API.\n\nNote: if the collection is already mutable, `asMutable` returns itself.\n\nNote: Not all methods can be used on a mutable collection or within\n`withMutations`! Only `set` and `merge` may be used mutatively.",name:"asMutable",required:!0,type:{name:"() => Map<string, any>"}},asImmutable:{defaultValue:null,description:"The yin to `asMutable`'s yang. Because it applies to mutable collections,\nthis operation is *mutable* and returns itself. Once performed, the mutable\ncopy has become immutable and can be safely returned from a function.",name:"asImmutable",required:!0,type:{name:"() => Map<string, any>"}},toSeq:{defaultValue:null,description:"Returns Seq.Keyed.\n@override",name:"toSeq",required:!0,type:{name:"() => Keyed<string, any>"}},size:{defaultValue:null,description:"All collections maintain their current `size` as an integer.",name:"size",required:!0,type:{name:"number"}},equals:{defaultValue:null,description:"True if this and the other Iterable have value equality, as defined\nby `Immutable.is()`.\n\nNote: This is equivalent to `Immutable.is(this, other)`, but provided to\nallow for chained expressions.",name:"equals",required:!0,type:{name:"(other: Iterable<string, any>) => boolean"}},hashCode:{defaultValue:null,description:"Computes and returns the hashed identity for this Iterable.\n\nThe `hashCode` of an Iterable is used to determine potential equality,\nand is used when adding this to a `Set` or as a key in a `Map`, enabling\nlookup via a different instance.\n\n     var a = List.of(1, 2, 3);\n     var b = List.of(1, 2, 3);\n     assert(a !== b); // different instances\n     var set = Set.of(a);\n     assert(set.has(b) === true);\n\nIf two values have the same `hashCode`, they are [not guaranteed\nto be equal][Hash Collision]. If two values have different `hashCode`s,\nthey must not be equal.\n\n[Hash Collision]: http://en.wikipedia.org/wiki/Collision_(computer_science)",name:"hashCode",required:!0,type:{name:"() => number"}},get:{defaultValue:null,description:"Returns the value associated with the provided key, or notSetValue if\nthe Iterable does not contain this key.\n\nNote: it is possible a key may be associated with an `undefined` value,\nso if `notSetValue` is not provided and this method returns `undefined`,\nthat does not guarantee the key was not found.",name:"get",required:!0,type:{name:"(key: string, notSetValue?: any) => any"}},has:{defaultValue:null,description:"True if a key exists within this `Iterable`.",name:"has",required:!0,type:{name:"(key: string) => boolean"}},includes:{defaultValue:null,description:"True if a value exists within this `Iterable`.\n@alias contains",name:"includes",required:!0,type:{name:"(value: any) => boolean"}},contains:{defaultValue:null,description:"",name:"contains",required:!0,type:{name:"(value: any) => boolean"}},first:{defaultValue:null,description:"The first value in the Iterable.",name:"first",required:!0,type:{name:"() => any"}},last:{defaultValue:null,description:"The last value in the Iterable.",name:"last",required:!0,type:{name:"() => any"}},getIn:{defaultValue:null,description:"Returns the value found by following a path of keys or indices through\nnested Iterables.",name:"getIn",required:!0,type:{name:"{ (searchKeyPath: any[], notSetValue?: any): any; (searchKeyPath: Iterable<any, any>, notSetValue?: any): any; }"}},hasIn:{defaultValue:null,description:"True if the result of following a path of keys or indices through nested\nIterables results in a set value.",name:"hasIn",required:!0,type:{name:"{ (searchKeyPath: any[]): boolean; (searchKeyPath: Iterable<any, any>): boolean; }"}},toArray:{defaultValue:null,description:"Shallowly converts this iterable to an Array, discarding keys.",name:"toArray",required:!0,type:{name:"() => any[]"}},toObject:{defaultValue:null,description:"Shallowly converts this Iterable to an Object.\n\nThrows if keys are not strings.",name:"toObject",required:!0,type:{name:"() => { [key: string]: any; }"}},toMap:{defaultValue:null,description:"Converts this Iterable to a Map, Throws if keys are not hashable.\n\nNote: This is equivalent to `Map(this.toKeyedSeq())`, but provided\nfor convenience and to allow for chained expressions.",name:"toMap",required:!0,type:{name:"() => Map<string, any>"}},toOrderedMap:{defaultValue:null,description:"Converts this Iterable to a Map, maintaining the order of iteration.\n\nNote: This is equivalent to `OrderedMap(this.toKeyedSeq())`, but\nprovided for convenience and to allow for chained expressions.",name:"toOrderedMap",required:!0,type:{name:"() => Map<string, any>"}},toSet:{defaultValue:null,description:"Converts this Iterable to a Set, discarding keys. Throws if values\nare not hashable.\n\nNote: This is equivalent to `Set(this)`, but provided to allow for\nchained expressions.",name:"toSet",required:!0,type:{name:"() => Set<any>"}},toOrderedSet:{defaultValue:null,description:"Converts this Iterable to a Set, maintaining the order of iteration and\ndiscarding keys.\n\nNote: This is equivalent to `OrderedSet(this.valueSeq())`, but provided\nfor convenience and to allow for chained expressions.",name:"toOrderedSet",required:!0,type:{name:"() => Set<any>"}},toList:{defaultValue:null,description:"Converts this Iterable to a List, discarding keys.\n\nNote: This is equivalent to `List(this)`, but provided to allow\nfor chained expressions.",name:"toList",required:!0,type:{name:"() => List<any>"}},toStack:{defaultValue:null,description:"Converts this Iterable to a Stack, discarding keys. Throws if values\nare not hashable.\n\nNote: This is equivalent to `Stack(this)`, but provided to allow for\nchained expressions.",name:"toStack",required:!0,type:{name:"() => Stack<any>"}},toKeyedSeq:{defaultValue:null,description:"Returns a Seq.Keyed from this Iterable where indices are treated as keys.\n\nThis is useful if you want to operate on an\nIterable.Indexed and preserve the [index, value] pairs.\n\nThe returned Seq will have identical iteration order as\nthis Iterable.\n\nExample:\n\n     var indexedSeq = Immutable.Seq.of('A', 'B', 'C');\n     indexedSeq.filter(v => v === 'B').toString() // Seq [ 'B' ]\n     var keyedSeq = indexedSeq.toKeyedSeq();\n     keyedSeq.filter(v => v === 'B').toString() // Seq { 1: 'B' }",name:"toKeyedSeq",required:!0,type:{name:"() => Keyed<string, any>"}},toIndexedSeq:{defaultValue:null,description:"Returns an Seq.Indexed of the values of this Iterable, discarding keys.",name:"toIndexedSeq",required:!0,type:{name:"() => Indexed<any>"}},toSetSeq:{defaultValue:null,description:"Returns a Seq.Set of the values of this Iterable, discarding keys.",name:"toSetSeq",required:!0,type:{name:"() => Set<any>"}},keys:{defaultValue:null,description:"An iterator of this `Iterable`'s keys.",name:"keys",required:!0,type:{name:"() => Iterator<string>"}},values:{defaultValue:null,description:"An iterator of this `Iterable`'s values.",name:"values",required:!0,type:{name:"() => Iterator<any>"}},entries:{defaultValue:null,description:"An iterator of this `Iterable`'s entries as `[key, value]` tuples.",name:"entries",required:!0,type:{name:"() => Iterator<any[]>"}},keySeq:{defaultValue:null,description:"Returns a new Seq.Indexed of the keys of this Iterable,\ndiscarding values.",name:"keySeq",required:!0,type:{name:"() => Indexed<string>"}},valueSeq:{defaultValue:null,description:"Returns an Seq.Indexed of the values of this Iterable, discarding keys.",name:"valueSeq",required:!0,type:{name:"() => Indexed<any>"}},entrySeq:{defaultValue:null,description:"Returns a new Seq.Indexed of [key, value] tuples.",name:"entrySeq",required:!0,type:{name:"() => Indexed<any[]>"}},map:{defaultValue:null,description:"Returns a new Iterable of the same type with values passed through a\n`mapper` function.\n\n     Seq({ a: 1, b: 2 }).map(x => 10 * x)\n     // Seq { a: 10, b: 20 }",name:"map",required:!0,type:{name:"<M>(mapper: (value?: any, key?: string, iter?: Iterable<string, any>) => M, context?: any) => Iterable<string, M>"}},filter:{defaultValue:null,description:"Returns a new Iterable of the same type with only the entries for which\nthe `predicate` function returns true.\n\n     Seq({a:1,b:2,c:3,d:4}).filter(x => x % 2 === 0)\n     // Seq { b: 2, d: 4 }",name:"filter",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => Iterable<string, any>"}},filterNot:{defaultValue:null,description:"Returns a new Iterable of the same type with only the entries for which\nthe `predicate` function returns false.\n\n     Seq({a:1,b:2,c:3,d:4}).filterNot(x => x % 2 === 0)\n     // Seq { a: 1, c: 3 }",name:"filterNot",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => Iterable<string, any>"}},reverse:{defaultValue:null,description:"Returns a new Iterable of the same type in reverse order.",name:"reverse",required:!0,type:{name:"() => Iterable<string, any>"}},sort:{defaultValue:null,description:"Returns a new Iterable of the same type which includes the same entries,\nstably sorted by using a `comparator`.\n\nIf a `comparator` is not provided, a default comparator uses `<` and `>`.\n\n`comparator(valueA, valueB)`:\n\n   * Returns `0` if the elements should not be swapped.\n   * Returns `-1` (or any negative number) if `valueA` comes before `valueB`\n   * Returns `1` (or any positive number) if `valueA` comes after `valueB`\n   * Is pure, i.e. it must always return the same value for the same pair\n     of values.\n\nWhen sorting collections which have no defined order, their ordered\nequivalents will be returned. e.g. `map.sort()` returns OrderedMap.",name:"sort",required:!0,type:{name:"(comparator?: (valueA: any, valueB: any) => number) => Iterable<string, any>"}},sortBy:{defaultValue:null,description:"Like `sort`, but also accepts a `comparatorValueMapper` which allows for\nsorting by more sophisticated means:\n\n     hitters.sortBy(hitter => hitter.avgHits);",name:"sortBy",required:!0,type:{name:"<C>(comparatorValueMapper: (value?: any, key?: string, iter?: Iterable<string, any>) => C, comparator?: (valueA: C, valueB: C) => number) => Iterable<string, any>"}},groupBy:{defaultValue:null,description:"Returns a `Iterable.Keyed` of `Iterable.Keyeds`, grouped by the return\nvalue of the `grouper` function.\n\nNote: This is always an eager operation.",name:"groupBy",required:!0,type:{name:"<G>(grouper: (value?: any, key?: string, iter?: Iterable<string, any>) => G, context?: any) => Keyed<G, Iterable<string, any>>"}},forEach:{defaultValue:null,description:"The `sideEffect` is executed for every entry in the Iterable.\n\nUnlike `Array#forEach`, if any call of `sideEffect` returns\n`false`, the iteration will stop. Returns the number of entries iterated\n(including the last iteration which returned false).",name:"forEach",required:!0,type:{name:"(sideEffect: (value?: any, key?: string, iter?: Iterable<string, any>) => any, context?: any) => number"}},slice:{defaultValue:null,description:"Returns a new Iterable of the same type representing a portion of this\nIterable from start up to but not including end.\n\nIf begin is negative, it is offset from the end of the Iterable. e.g.\n`slice(-2)` returns a Iterable of the last two entries. If it is not\nprovided the new Iterable will begin at the beginning of this Iterable.\n\nIf end is negative, it is offset from the end of the Iterable. e.g.\n`slice(0, -1)` returns an Iterable of everything but the last entry. If\nit is not provided, the new Iterable will continue through the end of\nthis Iterable.\n\nIf the requested slice is equivalent to the current Iterable, then it\nwill return itself.",name:"slice",required:!0,type:{name:"(begin?: number, end?: number) => Iterable<string, any>"}},rest:{defaultValue:null,description:"Returns a new Iterable of the same type containing all entries except\nthe first.",name:"rest",required:!0,type:{name:"() => Iterable<string, any>"}},butLast:{defaultValue:null,description:"Returns a new Iterable of the same type containing all entries except\nthe last.",name:"butLast",required:!0,type:{name:"() => Iterable<string, any>"}},skip:{defaultValue:null,description:"Returns a new Iterable of the same type which excludes the first `amount`\nentries from this Iterable.",name:"skip",required:!0,type:{name:"(amount: number) => Iterable<string, any>"}},skipLast:{defaultValue:null,description:"Returns a new Iterable of the same type which excludes the last `amount`\nentries from this Iterable.",name:"skipLast",required:!0,type:{name:"(amount: number) => Iterable<string, any>"}},skipWhile:{defaultValue:null,description:"Returns a new Iterable of the same type which includes entries starting\nfrom when `predicate` first returns false.\n\n     Seq.of('dog','frog','cat','hat','god')\n       .skipWhile(x => x.match(/g/))\n     // Seq [ 'cat', 'hat', 'god' ]",name:"skipWhile",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => Iterable<string, any>"}},skipUntil:{defaultValue:null,description:"Returns a new Iterable of the same type which includes entries starting\nfrom when `predicate` first returns true.\n\n     Seq.of('dog','frog','cat','hat','god')\n       .skipUntil(x => x.match(/hat/))\n     // Seq [ 'hat', 'god' ]",name:"skipUntil",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => Iterable<string, any>"}},take:{defaultValue:null,description:"Returns a new Iterable of the same type which includes the first `amount`\nentries from this Iterable.",name:"take",required:!0,type:{name:"(amount: number) => Iterable<string, any>"}},takeLast:{defaultValue:null,description:"Returns a new Iterable of the same type which includes the last `amount`\nentries from this Iterable.",name:"takeLast",required:!0,type:{name:"(amount: number) => Iterable<string, any>"}},takeWhile:{defaultValue:null,description:"Returns a new Iterable of the same type which includes entries from this\nIterable as long as the `predicate` returns true.\n\n     Seq.of('dog','frog','cat','hat','god')\n       .takeWhile(x => x.match(/o/))\n     // Seq [ 'dog', 'frog' ]",name:"takeWhile",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => Iterable<string, any>"}},takeUntil:{defaultValue:null,description:"Returns a new Iterable of the same type which includes entries from this\nIterable as long as the `predicate` returns false.\n\n     Seq.of('dog','frog','cat','hat','god').takeUntil(x => x.match(/at/))\n     // ['dog', 'frog']",name:"takeUntil",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => Iterable<string, any>"}},concat:{defaultValue:null,description:"Returns a new Iterable of the same type with other values and\niterable-like concatenated to this one.\n\nFor Seqs, all entries will be present in\nthe resulting iterable, even if they have the same key.",name:"concat",required:!0,type:{name:"(...valuesOrIterables: any[]) => Iterable<string, any>"}},flatten:{defaultValue:null,description:"Flattens nested Iterables.\n\nWill deeply flatten the Iterable by default, returning an Iterable of the\nsame type, but a `depth` can be provided in the form of a number or\nboolean (where true means to shallowly flatten one level). A depth of 0\n(or shallow: false) will deeply flatten.\n\nFlattens only others Iterable, not Arrays or Objects.\n\nNote: `flatten(true)` operates on Iterable<any, Iterable<K, V>> and\nreturns Iterable<K, V>",name:"flatten",required:!0,type:{name:"{ (depth?: number): Iterable<any, any>; (shallow?: boolean): Iterable<any, any>; }"}},flatMap:{defaultValue:null,description:"Flat-maps the Iterable, returning an Iterable of the same type.\n\nSimilar to `iter.map(...).flatten(true)`.",name:"flatMap",required:!0,type:{name:"{ <MK, MV>(mapper: (value?: any, key?: string, iter?: Iterable<string, any>) => Iterable<MK, MV>, context?: any): Iterable<MK, MV>; <MK, MV>(mapper: (value?: any, key?: string, iter?: Iterable<...>) => any, context?: any): Iterable<...>; }"}},reduce:{defaultValue:null,description:"Reduces the Iterable to a value by calling the `reducer` for every entry\nin the Iterable and passing along the reduced value.\n\nIf `initialReduction` is not provided, or is null, the first item in the\nIterable will be used.\n@see `Array#reduce`.",name:"reduce",required:!0,type:{name:"<R>(reducer: (reduction?: R, value?: any, key?: string, iter?: Iterable<string, any>) => R, initialReduction?: R, context?: any) => R"}},reduceRight:{defaultValue:null,description:"Reduces the Iterable in reverse (from the right side).\n\nNote: Similar to this.reverse().reduce(), and provided for parity\nwith `Array#reduceRight`.",name:"reduceRight",required:!0,type:{name:"<R>(reducer: (reduction?: R, value?: any, key?: string, iter?: Iterable<string, any>) => R, initialReduction?: R, context?: any) => R"}},every:{defaultValue:null,description:"True if `predicate` returns true for all entries in the Iterable.",name:"every",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => boolean"}},some:{defaultValue:null,description:"True if `predicate` returns true for any entry in the Iterable.",name:"some",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => boolean"}},join:{defaultValue:null,description:'Joins values together as a string, inserting a separator between each.\nThe default separator is `","`.',name:"join",required:!0,type:{name:"(separator?: string) => string"}},isEmpty:{defaultValue:null,description:"Returns true if this Iterable includes no values.\n\nFor some lazy `Seq`, `isEmpty` might need to iterate to determine\nemptiness. At most one iteration will occur.",name:"isEmpty",required:!0,type:{name:"() => boolean"}},count:{defaultValue:null,description:"Returns the size of this Iterable.\n\nRegardless of if this Iterable can describe its size lazily (some Seqs\ncannot), this method will always return the correct size. E.g. it\nevaluates a lazy `Seq` if necessary.\n\nIf `predicate` is provided, then this returns the count of entries in the\nIterable for which the `predicate` returns true.",name:"count",required:!0,type:{name:"{ (): number; (predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any): number; }"}},countBy:{defaultValue:null,description:"Returns a `Seq.Keyed` of counts, grouped by the return value of\nthe `grouper` function.\n\nNote: This is not a lazy operation.",name:"countBy",required:!0,type:{name:"<G>(grouper: (value?: any, key?: string, iter?: Iterable<string, any>) => G, context?: any) => Map<G, number>"}},find:{defaultValue:null,description:"Returns the value for which the `predicate` returns true.",name:"find",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any, notSetValue?: any) => any"}},findLast:{defaultValue:null,description:"Returns the last value for which the `predicate` returns true.\n\nNote: `predicate` will be called for each entry in reverse.",name:"findLast",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any, notSetValue?: any) => any"}},findEntry:{defaultValue:null,description:"Returns the [key, value] entry for which the `predicate` returns true.",name:"findEntry",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any, notSetValue?: any) => any[]"}},findLastEntry:{defaultValue:null,description:"Returns the last [key, value] entry for which the `predicate`\nreturns true.\n\nNote: `predicate` will be called for each entry in reverse.",name:"findLastEntry",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any, notSetValue?: any) => any[]"}},max:{defaultValue:null,description:"Returns the maximum value in this collection. If any values are\ncomparatively equivalent, the first one found will be returned.\n\nThe `comparator` is used in the same way as `Iterable#sort`. If it is not\nprovided, the default comparator is `>`.\n\nWhen two values are considered equivalent, the first encountered will be\nreturned. Otherwise, `max` will operate independent of the order of input\nas long as the comparator is commutative. The default comparator `>` is\ncommutative *only* when types do not differ.\n\nIf `comparator` returns 0 and either value is NaN, undefined, or null,\nthat value will be returned.",name:"max",required:!0,type:{name:"(comparator?: (valueA: any, valueB: any) => number) => any"}},maxBy:{defaultValue:null,description:"Like `max`, but also accepts a `comparatorValueMapper` which allows for\ncomparing by more sophisticated means:\n\n     hitters.maxBy(hitter => hitter.avgHits);",name:"maxBy",required:!0,type:{name:"<C>(comparatorValueMapper: (value?: any, key?: string, iter?: Iterable<string, any>) => C, comparator?: (valueA: C, valueB: C) => number) => any"}},min:{defaultValue:null,description:"Returns the minimum value in this collection. If any values are\ncomparatively equivalent, the first one found will be returned.\n\nThe `comparator` is used in the same way as `Iterable#sort`. If it is not\nprovided, the default comparator is `<`.\n\nWhen two values are considered equivalent, the first encountered will be\nreturned. Otherwise, `min` will operate independent of the order of input\nas long as the comparator is commutative. The default comparator `<` is\ncommutative *only* when types do not differ.\n\nIf `comparator` returns 0 and either value is NaN, undefined, or null,\nthat value will be returned.",name:"min",required:!0,type:{name:"(comparator?: (valueA: any, valueB: any) => number) => any"}},minBy:{defaultValue:null,description:"Like `min`, but also accepts a `comparatorValueMapper` which allows for\ncomparing by more sophisticated means:\n\n     hitters.minBy(hitter => hitter.avgHits);",name:"minBy",required:!0,type:{name:"<C>(comparatorValueMapper: (value?: any, key?: string, iter?: Iterable<string, any>) => C, comparator?: (valueA: C, valueB: C) => number) => any"}},isSubset:{defaultValue:null,description:"True if `iter` includes every value in this Iterable.",name:"isSubset",required:!0,type:{name:"{ (iter: Iterable<any, any>): boolean; (iter: any[]): boolean; }"}},isSuperset:{defaultValue:null,description:"True if this Iterable includes every value in `iter`.",name:"isSuperset",required:!0,type:{name:"{ (iter: Iterable<any, any>): boolean; (iter: any[]): boolean; }"}},flip:{defaultValue:null,description:"Returns a new Iterable.Keyed of the same type where the keys and values\nhave been flipped.\n\n     Seq({ a: 'z', b: 'y' }).flip() // { z: 'a', y: 'b' }",name:"flip",required:!0,type:{name:"() => Keyed<any, string>"}},mapKeys:{defaultValue:null,description:"Returns a new Iterable.Keyed of the same type with keys passed through\na `mapper` function.\n\n     Seq({ a: 1, b: 2 })\n       .mapKeys(x => x.toUpperCase())\n     // Seq { A: 1, B: 2 }",name:"mapKeys",required:!0,type:{name:"<M>(mapper: (key?: string, value?: any, iter?: Keyed<string, any>) => M, context?: any) => Keyed<M, any>"}},mapEntries:{defaultValue:null,description:"Returns a new Iterable.Keyed of the same type with entries\n([key, value] tuples) passed through a `mapper` function.\n\n     Seq({ a: 1, b: 2 })\n       .mapEntries(([k, v]) => [k.toUpperCase(), v * 2])\n     // Seq { A: 2, B: 4 }",name:"mapEntries",required:!0,type:{name:"<KM, VM>(mapper: (entry?: any[], index?: number, iter?: Keyed<string, any>) => any[], context?: any) => Keyed<KM, VM>"}},keyOf:{defaultValue:null,description:"Returns the key associated with the search value, or undefined.",name:"keyOf",required:!0,type:{name:"(searchValue: any) => string"}},lastKeyOf:{defaultValue:null,description:"Returns the last key associated with the search value, or undefined.",name:"lastKeyOf",required:!0,type:{name:"(searchValue: any) => string"}},findKey:{defaultValue:null,description:"Returns the key for which the `predicate` returns true.",name:"findKey",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Keyed<string, any>) => boolean, context?: any) => string"}},findLastKey:{defaultValue:null,description:"Returns the last key for which the `predicate` returns true.\n\nNote: `predicate` will be called for each entry in reverse.",name:"findLastKey",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Keyed<string, any>) => boolean, context?: any) => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/style.ts#getFontStyleFromEditorState"]={docgenInfo:getFontStyleFromEditorState.__docgenInfo,name:"getFontStyleFromEditorState",path:"src/tools/style.ts#getFontStyleFromEditorState"})}catch(__react_docgen_typescript_loader_error){}},69:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"d",(function(){return createValueFromCellAndEditorState})),__webpack_require__.d(__webpack_exports__,"a",(function(){return createEditorStateFromRichText})),__webpack_require__.d(__webpack_exports__,"b",(function(){return createEditorStateFromText})),__webpack_require__.d(__webpack_exports__,"c",(function(){return createEmptyEditorState}));__webpack_require__(52),__webpack_require__(136),__webpack_require__(87),__webpack_require__(239),__webpack_require__(60),__webpack_require__(77),__webpack_require__(137),__webpack_require__(201),__webpack_require__(53);var draft_js__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__(28),uniqid__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__(111),uniqid__WEBPACK_IMPORTED_MODULE_10___default=__webpack_require__.n(uniqid__WEBPACK_IMPORTED_MODULE_10__),_range__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__(208),_constants_types__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__(12),_regex__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__(97),_style__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__(47),_redux_tools_merge__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__(63),getRangesFromInlineRanges=function getRangesFromInlineRanges(inlineStyleRanges){return inlineStyleRanges.reduce((function(acc,_a){var offset=_a.offset,length=_a.length;return acc.push({start:offset,end:offset+length-1}),acc}),[])},getTextFromRichText=function getTextFromRichText(richText){var text="";return richText.forEach((function(block){for(var blockFragments=block.fragments,i=0;i<blockFragments.length;i+=1)text+=blockFragments[i].text})),text},updateStyleInPlace=function updateStyleInPlace(inlineRange,style){switch(inlineRange.style){case"BOLD":style.fontWeight="bold";break;case"ITALIC":style.fontStyle="italic";break;case"STRIKETHROUGH":style.textDecoration?style.textDecoration+=" line-through":style.textDecoration="line-through";break;case"UNDERLINE":style.textDecoration?style.textDecoration+=" underline":style.textDecoration="underline"}},createValueFromEditorState=function createValueFromEditorState(editorState){var richText=[];Object(draft_js__WEBPACK_IMPORTED_MODULE_9__.convertToRaw)(editorState.getCurrentContent()).blocks.forEach((function(rawBlock){var blockFragments=[],mergedRanges=Object(_range__WEBPACK_IMPORTED_MODULE_11__.a)(getRangesFromInlineRanges(rawBlock.inlineStyleRanges),rawBlock.text.length),inlineStyleRanges=rawBlock.inlineStyleRanges;mergedRanges.forEach((function(mergedRange){for(var start=mergedRange.start,end=mergedRange.end,fragment={key:uniqid__WEBPACK_IMPORTED_MODULE_10___default()(),text:rawBlock.text.substring(start,end+1)},i=0;i<inlineStyleRanges.length;i+=1){var inlineRange=inlineStyleRanges[i],inlineStart=inlineRange.offset,inlineEnd=inlineStart+inlineRange.length-1;inlineStart<=start&&end<=inlineEnd&&(fragment.style||(fragment.style={}),updateStyleInPlace(inlineRange,fragment.style))}blockFragments.push(fragment)})),richText.push({key:uniqid__WEBPACK_IMPORTED_MODULE_10___default()(),fragments:blockFragments})}));var fragmentCount=0;richText.forEach((function(block){fragmentCount+=block.fragments.length}));var cell={},text=getTextFromRichText(richText);if(fragmentCount>1)cell.value=richText,cell.type=_constants_types__WEBPACK_IMPORTED_MODULE_12__.d,cell.style&&(cell.style.font={});else{if(fragmentCount){var fragment=richText[0].fragments[0],font=null;fragment.style?font=fragment.style:fragment.text||(font=Object(_style__WEBPACK_IMPORTED_MODULE_14__.e)(editorState)),font&&(cell.style={font:font})}text.length&&"="===text.charAt(0)?(cell.value=text.substring(1),cell.type=_constants_types__WEBPACK_IMPORTED_MODULE_12__.a):text.match(_regex__WEBPACK_IMPORTED_MODULE_13__.b)?(cell.value=+text,cell.type=_constants_types__WEBPACK_IMPORTED_MODULE_12__.c):(cell.style||text.length)&&(cell.value=text,cell.type=_constants_types__WEBPACK_IMPORTED_MODULE_12__.e)}return void 0===cell.value?void 0:cell},createValueFromCellAndEditorState=function createValueFromCellAndEditorState(data,cell,editorState){var newCell=createValueFromEditorState(editorState);return cell&&(cell.style&&cell.style.block||cell.merged)&&(void 0===newCell&&(newCell={}),void 0===newCell.style&&(newCell.style={}),cell.merged&&(newCell.merged={area:Object(_redux_tools_merge__WEBPACK_IMPORTED_MODULE_15__.a)(data,cell.merged)}),cell.style&&cell.style.block&&(newCell.style.block=cell.style.block)),newCell},getRichTextBlockText=function getRichTextBlockText(block){var text="";return block.fragments.forEach((function(fragment){text+=fragment.text})),text},getRawInlineStyleRangesFromRichTextBlock=function getRawInlineStyleRangesFromRichTextBlock(block){var inlineStyleRanges=[],text="",fragments=block.fragments,data={BOLD:[],ITALIC:[],STRIKETHROUGH:[],UNDERLINE:[]},previousOffset=-1;return fragments.forEach((function(fragment){var start=previousOffset+1,end=start;fragment.text&&(end=(text+=fragment.text).length-1),previousOffset=end;var range={start:start,end:end};if(fragment.style){var _a=fragment.style,fontWeight=_a.fontWeight,fontStyle=_a.fontStyle,textDecoration=_a.textDecoration;"bold"===fontWeight&&data.BOLD.push(range),"italic"===fontStyle&&data.ITALIC.push(range),textDecoration&&(textDecoration.includes("underline")&&data.UNDERLINE.push(range),textDecoration.includes("line-through")&&data.STRIKETHROUGH.push(range))}})),Object.keys(data).forEach((function(style){Object(_range__WEBPACK_IMPORTED_MODULE_11__.b)(data[style]).forEach((function(range){var length=range.end-range.start+1;inlineStyleRanges.push({offset:range.start,length:length,style:style})}))})),{text:text,inlineStyleRanges:inlineStyleRanges}},createRawContentBlockFromRichTextBlock=function createRawContentBlockFromRichTextBlock(block){var _a=getRawInlineStyleRangesFromRichTextBlock(block),inlineStyleRanges=_a.inlineStyleRanges,text=_a.text;return{key:uniqid__WEBPACK_IMPORTED_MODULE_10___default()(),type:"unstyled",text:text,depth:0,entityRanges:[],inlineStyleRanges:inlineStyleRanges}},getRawContentStateFromRichText=function getRawContentStateFromRichText(richText){return{blocks:richText.map((function(block){return createRawContentBlockFromRichTextBlock(block)})),entityMap:{}}},createEditorStateFromRichText=function createEditorStateFromRichText(value){return draft_js__WEBPACK_IMPORTED_MODULE_9__.EditorState.createWithContent(Object(draft_js__WEBPACK_IMPORTED_MODULE_9__.convertFromRaw)(getRawContentStateFromRichText(value)))},createEditorStateFromText=function createEditorStateFromText(value){return draft_js__WEBPACK_IMPORTED_MODULE_9__.EditorState.createWithContent(draft_js__WEBPACK_IMPORTED_MODULE_9__.ContentState.createFromText(value))},createEmptyEditorState=function createEmptyEditorState(){return createEditorStateFromText("")};try{getRangesFromInlineRanges.displayName="getRangesFromInlineRanges",getRangesFromInlineRanges.__docgenInfo={description:"",displayName:"getRangesFromInlineRanges",props:{length:{defaultValue:null,description:"Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.",name:"length",required:!0,type:{name:"number"}},toString:{defaultValue:null,description:"Returns a string representation of an array.",name:"toString",required:!1,type:{name:"() => string"}},toLocaleString:{defaultValue:null,description:"Returns a string representation of an array. The elements are converted to string using their toLocalString methods.",name:"toLocaleString",required:!1,type:{name:"() => string"}},pop:{defaultValue:null,description:"Removes the last element from an array and returns it.",name:"pop",required:!0,type:{name:"() => RawDraftInlineStyleRange"}},push:{defaultValue:null,description:"Appends new elements to an array, and returns the new length of the array.\n@param items New elements of the Array.",name:"push",required:!0,type:{name:"(...items: RawDraftInlineStyleRange[]) => number"}},concat:{defaultValue:null,description:"Combines two or more arrays.\nCombines two or more arrays.\n@param items Additional items to add to the end of array1.\n@param items Additional items to add to the end of array1.",name:"concat",required:!0,type:{name:"{ (...items: ConcatArray<RawDraftInlineStyleRange>[]): RawDraftInlineStyleRange[]; (...items: (RawDraftInlineStyleRange | ConcatArray<...>)[]): RawDraftInlineStyleRange[]; }"}},join:{defaultValue:null,description:"Adds all the elements of an array separated by the specified separator string.\n@param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.",name:"join",required:!0,type:{name:"(separator?: string) => string"}},reverse:{defaultValue:null,description:"Reverses the elements in an Array.",name:"reverse",required:!0,type:{name:"() => RawDraftInlineStyleRange[]"}},shift:{defaultValue:null,description:"Removes the first element from an array and returns it.",name:"shift",required:!0,type:{name:"() => RawDraftInlineStyleRange"}},slice:{defaultValue:null,description:"Returns a section of an array.\n@param start The beginning of the specified portion of the array.\n@param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => RawDraftInlineStyleRange[]"}},sort:{defaultValue:null,description:"Sorts an array.\n@param compareFn Function used to determine the order of the elements. It is expected to return\ra negative value if first argument is less than second argument, zero if they're equal and a positive\rvalue otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\r```ts\r[11,2,22,1].sort((a, b) => a - b)\r```",name:"sort",required:!0,type:{name:"(compareFn?: (a: RawDraftInlineStyleRange, b: RawDraftInlineStyleRange) => number) => RawDraftInlineStyleRange[]"}},splice:{defaultValue:null,description:"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\nRemoves elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\n@param start The zero-based location in the array from which to start removing elements.\n@param deleteCount The number of elements to remove.\n@param start The zero-based location in the array from which to start removing elements.\n@param deleteCount The number of elements to remove.\n@param items Elements to insert into the array in place of the deleted elements.",name:"splice",required:!0,type:{name:"{ (start: number, deleteCount?: number): RawDraftInlineStyleRange[]; (start: number, deleteCount: number, ...items: RawDraftInlineStyleRange[]): RawDraftInlineStyleRange[]; }"}},unshift:{defaultValue:null,description:"Inserts new elements at the start of an array.\n@param items Elements to insert at the start of the Array.",name:"unshift",required:!0,type:{name:"(...items: RawDraftInlineStyleRange[]) => number"}},indexOf:{defaultValue:null,description:"Returns the index of the first occurrence of a value in an array.\n@param searchElement The value to locate in the array.\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.",name:"indexOf",required:!0,type:{name:"(searchElement: RawDraftInlineStyleRange, fromIndex?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the index of the last occurrence of a specified value in an array.\n@param searchElement The value to locate in the array.\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.",name:"lastIndexOf",required:!0,type:{name:"(searchElement: RawDraftInlineStyleRange, fromIndex?: number) => number"}},every:{defaultValue:null,description:"Determines whether all the members of an array satisfy the specified test.\n@param callbackfn A function that accepts up to three arguments. The every method calls\rthe callbackfn function for each element in the array until the callbackfn returns a value\rwhich is coercible to the Boolean value false, or until the end of the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.",name:"every",required:!0,type:{name:"(callbackfn: (value: RawDraftInlineStyleRange, index: number, array: RawDraftInlineStyleRange[]) => unknown, thisArg?: any) => boolean"}},some:{defaultValue:null,description:"Determines whether the specified callback function returns true for any element of an array.\n@param callbackfn A function that accepts up to three arguments. The some method calls\rthe callbackfn function for each element in the array until the callbackfn returns a value\rwhich is coercible to the Boolean value true, or until the end of the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.",name:"some",required:!0,type:{name:"(callbackfn: (value: RawDraftInlineStyleRange, index: number, array: RawDraftInlineStyleRange[]) => unknown, thisArg?: any) => boolean"}},forEach:{defaultValue:null,description:"Performs the specified action for each element in an array.\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"forEach",required:!0,type:{name:"(callbackfn: (value: RawDraftInlineStyleRange, index: number, array: RawDraftInlineStyleRange[]) => void, thisArg?: any) => void"}},map:{defaultValue:null,description:"Calls a defined callback function on each element of an array, and returns an array that contains the results.\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"map",required:!0,type:{name:"<U>(callbackfn: (value: RawDraftInlineStyleRange, index: number, array: RawDraftInlineStyleRange[]) => U, thisArg?: any) => U[]"}},filter:{defaultValue:null,description:"Returns the elements of an array that meet the condition specified in a callback function.\nReturns the elements of an array that meet the condition specified in a callback function.\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"filter",required:!0,type:{name:"{ <S extends RawDraftInlineStyleRange>(callbackfn: (value: RawDraftInlineStyleRange, index: number, array: RawDraftInlineStyleRange[]) => value is S, thisArg?: any): S[]; (callbackfn: (value: RawDraftInlineStyleRange, index: number, array: RawDraftInlineStyleRange[]) => unknown, thisArg?: any): RawDraftInlineStyleRa..."}},reduce:{defaultValue:null,description:"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",name:"reduce",required:!0,type:{name:"{ (callbackfn: (previousValue: RawDraftInlineStyleRange, currentValue: RawDraftInlineStyleRange, currentIndex: number, array: RawDraftInlineStyleRange[]) => RawDraftInlineStyleRange): RawDraftInlineStyleRange; (callbackfn: (previousValue: RawDraftInlineStyleRange, currentValue: RawDraftInlineStyleRange, currentIndex..."}},reduceRight:{defaultValue:null,description:"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",name:"reduceRight",required:!0,type:{name:"{ (callbackfn: (previousValue: RawDraftInlineStyleRange, currentValue: RawDraftInlineStyleRange, currentIndex: number, array: RawDraftInlineStyleRange[]) => RawDraftInlineStyleRange): RawDraftInlineStyleRange; (callbackfn: (previousValue: RawDraftInlineStyleRange, currentValue: RawDraftInlineStyleRange, currentIndex..."}},find:{defaultValue:null,description:"Returns the value of the first element in the array where predicate is true, and undefined\notherwise.\n@param predicate find calls predicate once for each element of the array, in ascending\rorder, until it finds one where predicate returns true. If such an element is found, find\rimmediately returns that element value. Otherwise, find returns undefined.\n@param thisArg If provided, it will be used as the this value for each invocation of\rpredicate. If it is not provided, undefined is used instead.",name:"find",required:!0,type:{name:"{ <S extends RawDraftInlineStyleRange>(predicate: (this: void, value: RawDraftInlineStyleRange, index: number, obj: RawDraftInlineStyleRange[]) => value is S, thisArg?: any): S; (predicate: (value: RawDraftInlineStyleRange, index: number, obj: RawDraftInlineStyleRange[]) => unknown, thisArg?: any): RawDraftInlineSty..."}},findIndex:{defaultValue:null,description:"Returns the index of the first element in the array where predicate is true, and -1\notherwise.\n@param predicate find calls predicate once for each element of the array, in ascending\rorder, until it finds one where predicate returns true. If such an element is found,\rfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\n@param thisArg If provided, it will be used as the this value for each invocation of\rpredicate. If it is not provided, undefined is used instead.",name:"findIndex",required:!0,type:{name:"(predicate: (value: RawDraftInlineStyleRange, index: number, obj: RawDraftInlineStyleRange[]) => unknown, thisArg?: any) => number"}},fill:{defaultValue:null,description:"Returns the this object after filling the section identified by start and end with value\n@param value value to fill array section with\n@param start index to start filling the array at. If start is negative, it is treated as\rlength+start where length is the length of the array.\n@param end index to stop filling the array at. If end is negative, it is treated as\rlength+end.",name:"fill",required:!0,type:{name:"(value: RawDraftInlineStyleRange, start?: number, end?: number) => RawDraftInlineStyleRange[]"}},copyWithin:{defaultValue:null,description:"Returns the this object after copying a section of the array identified by start and end\nto the same array starting at position target\n@param target If target is negative, it is treated as length+target where length is the\rlength of the array.\n@param start If start is negative, it is treated as length+start. If end is negative, it\ris treated as length+end.\n@param end If not specified, length of the this object is used as its default value.",name:"copyWithin",required:!0,type:{name:"(target: number, start: number, end?: number) => RawDraftInlineStyleRange[]"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<RawDraftInlineStyleRange>"}},entries:{defaultValue:null,description:"Returns an iterable of key, value pairs for every entry in the array",name:"entries",required:!0,type:{name:"() => IterableIterator<[number, RawDraftInlineStyleRange]>"}},keys:{defaultValue:null,description:"Returns an iterable of keys in the array",name:"keys",required:!0,type:{name:"() => IterableIterator<number>"}},values:{defaultValue:null,description:"Returns an iterable of values in the array",name:"values",required:!0,type:{name:"() => IterableIterator<RawDraftInlineStyleRange>"}},"__@unscopables":{defaultValue:null,description:"Returns an object whose properties have the value 'true'\nwhen they will be absent when used in a 'with' statement.",name:"__@unscopables",required:!0,type:{name:"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }"}},includes:{defaultValue:null,description:"Determines whether an array includes a certain element, returning true or false as appropriate.\n@param searchElement The element to search for.\n@param fromIndex The position in this array at which to begin searching for searchElement.",name:"includes",required:!0,type:{name:"(searchElement: RawDraftInlineStyleRange, fromIndex?: number) => boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/text.ts#getRangesFromInlineRanges"]={docgenInfo:getRangesFromInlineRanges.__docgenInfo,name:"getRangesFromInlineRanges",path:"src/tools/text.ts#getRangesFromInlineRanges"})}catch(__react_docgen_typescript_loader_error){}try{getTextFromRichText.displayName="getTextFromRichText",getTextFromRichText.__docgenInfo={description:"",displayName:"getTextFromRichText",props:{length:{defaultValue:null,description:"Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.",name:"length",required:!0,type:{name:"number"}},toString:{defaultValue:null,description:"Returns a string representation of an array.",name:"toString",required:!1,type:{name:"() => string"}},toLocaleString:{defaultValue:null,description:"Returns a string representation of an array. The elements are converted to string using their toLocalString methods.",name:"toLocaleString",required:!1,type:{name:"() => string"}},pop:{defaultValue:null,description:"Removes the last element from an array and returns it.",name:"pop",required:!0,type:{name:"() => IRichTextBlock"}},push:{defaultValue:null,description:"Appends new elements to an array, and returns the new length of the array.\n@param items New elements of the Array.",name:"push",required:!0,type:{name:"(...items: IRichTextBlock[]) => number"}},concat:{defaultValue:null,description:"Combines two or more arrays.\nCombines two or more arrays.\n@param items Additional items to add to the end of array1.\n@param items Additional items to add to the end of array1.",name:"concat",required:!0,type:{name:"{ (...items: ConcatArray<IRichTextBlock>[]): IRichTextBlock[]; (...items: (IRichTextBlock | ConcatArray<IRichTextBlock>)[]): IRichTextBlock[]; }"}},join:{defaultValue:null,description:"Adds all the elements of an array separated by the specified separator string.\n@param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.",name:"join",required:!0,type:{name:"(separator?: string) => string"}},reverse:{defaultValue:null,description:"Reverses the elements in an Array.",name:"reverse",required:!0,type:{name:"() => IRichTextBlock[]"}},shift:{defaultValue:null,description:"Removes the first element from an array and returns it.",name:"shift",required:!0,type:{name:"() => IRichTextBlock"}},slice:{defaultValue:null,description:"Returns a section of an array.\n@param start The beginning of the specified portion of the array.\n@param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => IRichTextBlock[]"}},sort:{defaultValue:null,description:"Sorts an array.\n@param compareFn Function used to determine the order of the elements. It is expected to return\ra negative value if first argument is less than second argument, zero if they're equal and a positive\rvalue otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\r```ts\r[11,2,22,1].sort((a, b) => a - b)\r```",name:"sort",required:!0,type:{name:"(compareFn?: (a: IRichTextBlock, b: IRichTextBlock) => number) => IRichTextValue"}},splice:{defaultValue:null,description:"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\nRemoves elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\n@param start The zero-based location in the array from which to start removing elements.\n@param deleteCount The number of elements to remove.\n@param start The zero-based location in the array from which to start removing elements.\n@param deleteCount The number of elements to remove.\n@param items Elements to insert into the array in place of the deleted elements.",name:"splice",required:!0,type:{name:"{ (start: number, deleteCount?: number): IRichTextBlock[]; (start: number, deleteCount: number, ...items: IRichTextBlock[]): IRichTextBlock[]; }"}},unshift:{defaultValue:null,description:"Inserts new elements at the start of an array.\n@param items Elements to insert at the start of the Array.",name:"unshift",required:!0,type:{name:"(...items: IRichTextBlock[]) => number"}},indexOf:{defaultValue:null,description:"Returns the index of the first occurrence of a value in an array.\n@param searchElement The value to locate in the array.\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.",name:"indexOf",required:!0,type:{name:"(searchElement: IRichTextBlock, fromIndex?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the index of the last occurrence of a specified value in an array.\n@param searchElement The value to locate in the array.\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.",name:"lastIndexOf",required:!0,type:{name:"(searchElement: IRichTextBlock, fromIndex?: number) => number"}},every:{defaultValue:null,description:"Determines whether all the members of an array satisfy the specified test.\n@param callbackfn A function that accepts up to three arguments. The every method calls\rthe callbackfn function for each element in the array until the callbackfn returns a value\rwhich is coercible to the Boolean value false, or until the end of the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.",name:"every",required:!0,type:{name:"(callbackfn: (value: IRichTextBlock, index: number, array: IRichTextBlock[]) => unknown, thisArg?: any) => boolean"}},some:{defaultValue:null,description:"Determines whether the specified callback function returns true for any element of an array.\n@param callbackfn A function that accepts up to three arguments. The some method calls\rthe callbackfn function for each element in the array until the callbackfn returns a value\rwhich is coercible to the Boolean value true, or until the end of the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.",name:"some",required:!0,type:{name:"(callbackfn: (value: IRichTextBlock, index: number, array: IRichTextBlock[]) => unknown, thisArg?: any) => boolean"}},forEach:{defaultValue:null,description:"Performs the specified action for each element in an array.\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"forEach",required:!0,type:{name:"(callbackfn: (value: IRichTextBlock, index: number, array: IRichTextBlock[]) => void, thisArg?: any) => void"}},map:{defaultValue:null,description:"Calls a defined callback function on each element of an array, and returns an array that contains the results.\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"map",required:!0,type:{name:"<U>(callbackfn: (value: IRichTextBlock, index: number, array: IRichTextBlock[]) => U, thisArg?: any) => U[]"}},filter:{defaultValue:null,description:"Returns the elements of an array that meet the condition specified in a callback function.\nReturns the elements of an array that meet the condition specified in a callback function.\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"filter",required:!0,type:{name:"{ <S extends IRichTextBlock>(callbackfn: (value: IRichTextBlock, index: number, array: IRichTextBlock[]) => value is S, thisArg?: any): S[]; (callbackfn: (value: IRichTextBlock, index: number, array: IRichTextBlock[]) => unknown, thisArg?: any): IRichTextBlock[]; }"}},reduce:{defaultValue:null,description:"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",name:"reduce",required:!0,type:{name:"{ (callbackfn: (previousValue: IRichTextBlock, currentValue: IRichTextBlock, currentIndex: number, array: IRichTextBlock[]) => IRichTextBlock): IRichTextBlock; (callbackfn: (previousValue: IRichTextBlock, currentValue: IRichTextBlock, currentIndex: number, array: IRichTextBlock[]) => IRichTextBlock, initialValue: IR..."}},reduceRight:{defaultValue:null,description:"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",name:"reduceRight",required:!0,type:{name:"{ (callbackfn: (previousValue: IRichTextBlock, currentValue: IRichTextBlock, currentIndex: number, array: IRichTextBlock[]) => IRichTextBlock): IRichTextBlock; (callbackfn: (previousValue: IRichTextBlock, currentValue: IRichTextBlock, currentIndex: number, array: IRichTextBlock[]) => IRichTextBlock, initialValue: IR..."}},find:{defaultValue:null,description:"Returns the value of the first element in the array where predicate is true, and undefined\notherwise.\n@param predicate find calls predicate once for each element of the array, in ascending\rorder, until it finds one where predicate returns true. If such an element is found, find\rimmediately returns that element value. Otherwise, find returns undefined.\n@param thisArg If provided, it will be used as the this value for each invocation of\rpredicate. If it is not provided, undefined is used instead.",name:"find",required:!0,type:{name:"{ <S extends IRichTextBlock>(predicate: (this: void, value: IRichTextBlock, index: number, obj: IRichTextBlock[]) => value is S, thisArg?: any): S; (predicate: (value: IRichTextBlock, index: number, obj: IRichTextBlock[]) => unknown, thisArg?: any): IRichTextBlock; }"}},findIndex:{defaultValue:null,description:"Returns the index of the first element in the array where predicate is true, and -1\notherwise.\n@param predicate find calls predicate once for each element of the array, in ascending\rorder, until it finds one where predicate returns true. If such an element is found,\rfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\n@param thisArg If provided, it will be used as the this value for each invocation of\rpredicate. If it is not provided, undefined is used instead.",name:"findIndex",required:!0,type:{name:"(predicate: (value: IRichTextBlock, index: number, obj: IRichTextBlock[]) => unknown, thisArg?: any) => number"}},fill:{defaultValue:null,description:"Returns the this object after filling the section identified by start and end with value\n@param value value to fill array section with\n@param start index to start filling the array at. If start is negative, it is treated as\rlength+start where length is the length of the array.\n@param end index to stop filling the array at. If end is negative, it is treated as\rlength+end.",name:"fill",required:!0,type:{name:"(value: IRichTextBlock, start?: number, end?: number) => IRichTextValue"}},copyWithin:{defaultValue:null,description:"Returns the this object after copying a section of the array identified by start and end\nto the same array starting at position target\n@param target If target is negative, it is treated as length+target where length is the\rlength of the array.\n@param start If start is negative, it is treated as length+start. If end is negative, it\ris treated as length+end.\n@param end If not specified, length of the this object is used as its default value.",name:"copyWithin",required:!0,type:{name:"(target: number, start: number, end?: number) => IRichTextValue"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<IRichTextBlock>"}},entries:{defaultValue:null,description:"Returns an iterable of key, value pairs for every entry in the array",name:"entries",required:!0,type:{name:"() => IterableIterator<[number, IRichTextBlock]>"}},keys:{defaultValue:null,description:"Returns an iterable of keys in the array",name:"keys",required:!0,type:{name:"() => IterableIterator<number>"}},values:{defaultValue:null,description:"Returns an iterable of values in the array",name:"values",required:!0,type:{name:"() => IterableIterator<IRichTextBlock>"}},"__@unscopables":{defaultValue:null,description:"Returns an object whose properties have the value 'true'\nwhen they will be absent when used in a 'with' statement.",name:"__@unscopables",required:!0,type:{name:"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }"}},includes:{defaultValue:null,description:"Determines whether an array includes a certain element, returning true or false as appropriate.\n@param searchElement The element to search for.\n@param fromIndex The position in this array at which to begin searching for searchElement.",name:"includes",required:!0,type:{name:"(searchElement: IRichTextBlock, fromIndex?: number) => boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/text.ts#getTextFromRichText"]={docgenInfo:getTextFromRichText.__docgenInfo,name:"getTextFromRichText",path:"src/tools/text.ts#getTextFromRichText"})}catch(__react_docgen_typescript_loader_error){}try{createValueFromEditorState.displayName="createValueFromEditorState",createValueFromEditorState.__docgenInfo={description:"",displayName:"createValueFromEditorState",props:{toJS:{defaultValue:null,description:"Deeply converts this Iterable to equivalent JS.\n\n`Iterable.Indexeds`, and `Iterable.Sets` become Arrays, while\n`Iterable.Keyeds` become Objects.",name:"toJS",required:!0,type:{name:"() => Object"}},getAllowUndo:{defaultValue:null,description:"",name:"getAllowUndo",required:!0,type:{name:"() => boolean"}},getCurrentContent:{defaultValue:null,description:"",name:"getCurrentContent",required:!0,type:{name:"() => ContentState"}},getUndoStack:{defaultValue:null,description:"",name:"getUndoStack",required:!0,type:{name:"() => Stack<ContentState>"}},getRedoStack:{defaultValue:null,description:"",name:"getRedoStack",required:!0,type:{name:"() => Stack<ContentState>"}},getSelection:{defaultValue:null,description:"",name:"getSelection",required:!0,type:{name:"() => SelectionState"}},getDecorator:{defaultValue:null,description:"",name:"getDecorator",required:!0,type:{name:"() => DraftDecoratorType"}},isInCompositionMode:{defaultValue:null,description:"",name:"isInCompositionMode",required:!0,type:{name:"() => boolean"}},mustForceSelection:{defaultValue:null,description:"",name:"mustForceSelection",required:!0,type:{name:"() => boolean"}},getNativelyRenderedContent:{defaultValue:null,description:"",name:"getNativelyRenderedContent",required:!0,type:{name:"() => ContentState"}},getLastChangeType:{defaultValue:null,description:"",name:"getLastChangeType",required:!0,type:{name:"() => EditorChangeType"}},getInlineStyleOverride:{defaultValue:null,description:'While editing, the user may apply inline style commands with a collapsed\ncursor, intending to type text that adopts the specified style. In this\ncase, we track the specified style as an "override" that takes precedence\nover the inline style of the text adjacent to the cursor.\n\nIf null, there is no override in place.',name:"getInlineStyleOverride",required:!0,type:{name:"() => DraftInlineStyle"}},getCurrentInlineStyle:{defaultValue:null,description:"Get the appropriate inline style for the editor state. If an\noverride is in place, use it. Otherwise, the current style is\nbased on the location of the selection state.",name:"getCurrentInlineStyle",required:!0,type:{name:"() => DraftInlineStyle"}},getBlockTree:{defaultValue:null,description:"",name:"getBlockTree",required:!0,type:{name:"(blockKey: string) => List<any>"}},isSelectionAtStartOfContent:{defaultValue:null,description:"",name:"isSelectionAtStartOfContent",required:!0,type:{name:"() => boolean"}},isSelectionAtEndOfContent:{defaultValue:null,description:"",name:"isSelectionAtEndOfContent",required:!0,type:{name:"() => boolean"}},getDirectionMap:{defaultValue:null,description:"",name:"getDirectionMap",required:!0,type:{name:"() => OrderedMap<any, any>"}},set:{defaultValue:null,description:"Returns a new Map also containing the new key, value pair. If an equivalent\nkey already exists in this Map, it will be replaced.",name:"set",required:!0,type:{name:"(key: string, value: any) => Map<string, any>"}},delete:{defaultValue:null,description:"Returns a new Map which excludes this `key`.\n\nNote: `delete` cannot be safely used in IE8, but is provided to mirror\nthe ES6 collection API.\n@alias remove",name:"delete",required:!0,type:{name:"(key: string) => Map<string, any>"}},remove:{defaultValue:null,description:"",name:"remove",required:!0,type:{name:"(key: string) => Map<string, any>"}},clear:{defaultValue:null,description:"Returns a new Map containing no keys or values.",name:"clear",required:!0,type:{name:"() => Map<string, any>"}},update:{defaultValue:null,description:"Returns a new Map having updated the value at this `key` with the return\nvalue of calling `updater` with the existing value, or `notSetValue` if\nthe key was not set. If called with only a single argument, `updater` is\ncalled with the Map itself.\n\nEquivalent to: `map.set(key, updater(map.get(key, notSetValue)))`.",name:"update",required:!0,type:{name:"{ (updater: (value: Map<string, any>) => Map<string, any>): Map<string, any>; (key: string, updater: (value: any) => any): Map<string, any>; (key: string, notSetValue: any, updater: (value: any) => any): Map<...>; }"}},merge:{defaultValue:null,description:"Returns a new Map resulting from merging the provided Iterables\n(or JS objects) into this Map. In other words, this takes each entry of\neach iterable and sets it on this Map.\n\nIf any of the values provided to `merge` are not Iterable (would return\nfalse for `Immutable.Iterable.isIterable`) then they are deeply converted\nvia `Immutable.fromJS` before being merged. However, if the value is an\nIterable but includes non-iterable JS objects or arrays, those nested\nvalues will be preserved.\n\n     var x = Immutable.Map({a: 10, b: 20, c: 30});\n     var y = Immutable.Map({b: 40, a: 50, d: 60});\n     x.merge(y) // { a: 50, b: 40, c: 30, d: 60 }\n     y.merge(x) // { b: 20, a: 10, d: 60, c: 30 }",name:"merge",required:!0,type:{name:"{ (...iterables: Iterable<string, any>[]): Map<string, any>; (...iterables: { [key: string]: any; }[]): Map<string, any>; }"}},mergeWith:{defaultValue:null,description:"Like `merge()`, `mergeWith()` returns a new Map resulting from merging\nthe provided Iterables (or JS objects) into this Map, but uses the\n`merger` function for dealing with conflicts.\n\n     var x = Immutable.Map({a: 10, b: 20, c: 30});\n     var y = Immutable.Map({b: 40, a: 50, d: 60});\n     x.mergeWith((prev, next) => prev / next, y) // { a: 0.2, b: 0.5, c: 30, d: 60 }\n     y.mergeWith((prev, next) => prev / next, x) // { b: 2, a: 5, d: 60, c: 30 }",name:"mergeWith",required:!0,type:{name:"{ (merger: (previous?: any, next?: any, key?: string) => any, ...iterables: Iterable<string, any>[]): Map<string, any>; (merger: (previous?: any, next?: any, key?: string) => any, ...iterables: { ...; }[]): Map<...>; }"}},mergeDeep:{defaultValue:null,description:"Like `merge()`, but when two Iterables conflict, it merges them as well,\nrecursing deeply through the nested data.\n\n     var x = Immutable.fromJS({a: { x: 10, y: 10 }, b: { x: 20, y: 50 } });\n     var y = Immutable.fromJS({a: { x: 2 }, b: { y: 5 }, c: { z: 3 } });\n     x.mergeDeep(y) // {a: { x: 2, y: 10 }, b: { x: 20, y: 5 }, c: { z: 3 } }",name:"mergeDeep",required:!0,type:{name:"{ (...iterables: Iterable<string, any>[]): Map<string, any>; (...iterables: { [key: string]: any; }[]): Map<string, any>; }"}},mergeDeepWith:{defaultValue:null,description:"Like `mergeDeep()`, but when two non-Iterables conflict, it uses the\n`merger` function to determine the resulting value.\n\n     var x = Immutable.fromJS({a: { x: 10, y: 10 }, b: { x: 20, y: 50 } });\n     var y = Immutable.fromJS({a: { x: 2 }, b: { y: 5 }, c: { z: 3 } });\n     x.mergeDeepWith((prev, next) => prev / next, y)\n     // {a: { x: 5, y: 10 }, b: { x: 20, y: 10 }, c: { z: 3 } }",name:"mergeDeepWith",required:!0,type:{name:"{ (merger: (previous?: any, next?: any, key?: string) => any, ...iterables: Iterable<string, any>[]): Map<string, any>; (merger: (previous?: any, next?: any, key?: string) => any, ...iterables: { ...; }[]): Map<...>; }"}},setIn:{defaultValue:null,description:"Returns a new Map having set `value` at this `keyPath`. If any keys in\n`keyPath` do not exist, a new immutable Map will be created at that key.",name:"setIn",required:!0,type:{name:"{ (keyPath: any[], value: any): Map<string, any>; (KeyPath: Iterable<any, any>, value: any): Map<string, any>; }"}},deleteIn:{defaultValue:null,description:"Returns a new Map having removed the value at this `keyPath`. If any keys\nin `keyPath` do not exist, no change will occur.\n@alias removeIn",name:"deleteIn",required:!0,type:{name:"{ (keyPath: any[]): Map<string, any>; (keyPath: Iterable<any, any>): Map<string, any>; }"}},removeIn:{defaultValue:null,description:"",name:"removeIn",required:!0,type:{name:"{ (keyPath: any[]): Map<string, any>; (keyPath: Iterable<any, any>): Map<string, any>; }"}},updateIn:{defaultValue:null,description:"Returns a new Map having applied the `updater` to the entry found at the\nkeyPath.\n\nIf any keys in `keyPath` do not exist, new Immutable `Map`s will\nbe created at those keys. If the `keyPath` does not already contain a\nvalue, the `updater` function will be called with `notSetValue`, if\nprovided, otherwise `undefined`.\n\n     var data = Immutable.fromJS({ a: { b: { c: 10 } } });\n     data = data.updateIn(['a', 'b', 'c'], val => val * 2);\n     // { a: { b: { c: 20 } } }\n\nIf the `updater` function returns the same value it was called with, then\nno change will occur. This is still true if `notSetValue` is provided.\n\n     var data1 = Immutable.fromJS({ a: { b: { c: 10 } } });\n     data2 = data1.updateIn(['x', 'y', 'z'], 100, val => val);\n     assert(data2 === data1);",name:"updateIn",required:!0,type:{name:"{ (keyPath: any[], updater: (value: any) => any): Map<string, any>; (keyPath: any[], notSetValue: any, updater: (value: any) => any): Map<string, any>; (keyPath: Iterable<any, any>, updater: (value: any) => any): Map<...>; (keyPath: Iterable<...>, notSetValue: any, updater: (value: any) => any): Map<...>; }"}},mergeIn:{defaultValue:null,description:"A combination of `updateIn` and `merge`, returning a new Map, but\nperforming the merge at a point arrived at by following the keyPath.\nIn other words, these two lines are equivalent:\n\n     x.updateIn(['a', 'b', 'c'], abc => abc.merge(y));\n     x.mergeIn(['a', 'b', 'c'], y);",name:"mergeIn",required:!0,type:{name:"{ (keyPath: Iterable<any, any>, ...iterables: Iterable<string, any>[]): Map<string, any>; (keyPath: any[], ...iterables: Iterable<string, any>[]): Map<...>; (keyPath: any[], ...iterables: { ...; }[]): Map<...>; }"}},mergeDeepIn:{defaultValue:null,description:"A combination of `updateIn` and `mergeDeep`, returning a new Map, but\nperforming the deep merge at a point arrived at by following the keyPath.\nIn other words, these two lines are equivalent:\n\n     x.updateIn(['a', 'b', 'c'], abc => abc.mergeDeep(y));\n     x.mergeDeepIn(['a', 'b', 'c'], y);",name:"mergeDeepIn",required:!0,type:{name:"{ (keyPath: Iterable<any, any>, ...iterables: Iterable<string, any>[]): Map<string, any>; (keyPath: any[], ...iterables: Iterable<string, any>[]): Map<...>; (keyPath: any[], ...iterables: { ...; }[]): Map<...>; }"}},withMutations:{defaultValue:null,description:"Every time you call one of the above functions, a new immutable Map is\ncreated. If a pure function calls a number of these to produce a final\nreturn value, then a penalty on performance and memory has been paid by\ncreating all of the intermediate immutable Maps.\n\nIf you need to apply a series of mutations to produce a new immutable\nMap, `withMutations()` creates a temporary mutable copy of the Map which\ncan apply mutations in a highly performant manner. In fact, this is\nexactly how complex mutations like `merge` are done.\n\nAs an example, this results in the creation of 2, not 4, new Maps:\n\n     var map1 = Immutable.Map();\n     var map2 = map1.withMutations(map => {\n       map.set('a', 1).set('b', 2).set('c', 3);\n     });\n     assert(map1.size === 0);\n     assert(map2.size === 3);\n\nNote: Not all methods can be used on a mutable collection or within\n`withMutations`! Only `set` and `merge` may be used mutatively.",name:"withMutations",required:!0,type:{name:"(mutator: (mutable: Map<string, any>) => any) => Map<string, any>"}},asMutable:{defaultValue:null,description:"Another way to avoid creation of intermediate Immutable maps is to create\na mutable copy of this collection. Mutable copies *always* return `this`,\nand thus shouldn't be used for equality. Your function should never return\na mutable copy of a collection, only use it internally to create a new\ncollection. If possible, use `withMutations` as it provides an easier to\nuse API.\n\nNote: if the collection is already mutable, `asMutable` returns itself.\n\nNote: Not all methods can be used on a mutable collection or within\n`withMutations`! Only `set` and `merge` may be used mutatively.",name:"asMutable",required:!0,type:{name:"() => Map<string, any>"}},asImmutable:{defaultValue:null,description:"The yin to `asMutable`'s yang. Because it applies to mutable collections,\nthis operation is *mutable* and returns itself. Once performed, the mutable\ncopy has become immutable and can be safely returned from a function.",name:"asImmutable",required:!0,type:{name:"() => Map<string, any>"}},toSeq:{defaultValue:null,description:"Returns Seq.Keyed.\n@override",name:"toSeq",required:!0,type:{name:"() => Keyed<string, any>"}},size:{defaultValue:null,description:"All collections maintain their current `size` as an integer.",name:"size",required:!0,type:{name:"number"}},equals:{defaultValue:null,description:"True if this and the other Iterable have value equality, as defined\nby `Immutable.is()`.\n\nNote: This is equivalent to `Immutable.is(this, other)`, but provided to\nallow for chained expressions.",name:"equals",required:!0,type:{name:"(other: Iterable<string, any>) => boolean"}},hashCode:{defaultValue:null,description:"Computes and returns the hashed identity for this Iterable.\n\nThe `hashCode` of an Iterable is used to determine potential equality,\nand is used when adding this to a `Set` or as a key in a `Map`, enabling\nlookup via a different instance.\n\n     var a = List.of(1, 2, 3);\n     var b = List.of(1, 2, 3);\n     assert(a !== b); // different instances\n     var set = Set.of(a);\n     assert(set.has(b) === true);\n\nIf two values have the same `hashCode`, they are [not guaranteed\nto be equal][Hash Collision]. If two values have different `hashCode`s,\nthey must not be equal.\n\n[Hash Collision]: http://en.wikipedia.org/wiki/Collision_(computer_science)",name:"hashCode",required:!0,type:{name:"() => number"}},get:{defaultValue:null,description:"Returns the value associated with the provided key, or notSetValue if\nthe Iterable does not contain this key.\n\nNote: it is possible a key may be associated with an `undefined` value,\nso if `notSetValue` is not provided and this method returns `undefined`,\nthat does not guarantee the key was not found.",name:"get",required:!0,type:{name:"(key: string, notSetValue?: any) => any"}},has:{defaultValue:null,description:"True if a key exists within this `Iterable`.",name:"has",required:!0,type:{name:"(key: string) => boolean"}},includes:{defaultValue:null,description:"True if a value exists within this `Iterable`.\n@alias contains",name:"includes",required:!0,type:{name:"(value: any) => boolean"}},contains:{defaultValue:null,description:"",name:"contains",required:!0,type:{name:"(value: any) => boolean"}},first:{defaultValue:null,description:"The first value in the Iterable.",name:"first",required:!0,type:{name:"() => any"}},last:{defaultValue:null,description:"The last value in the Iterable.",name:"last",required:!0,type:{name:"() => any"}},getIn:{defaultValue:null,description:"Returns the value found by following a path of keys or indices through\nnested Iterables.",name:"getIn",required:!0,type:{name:"{ (searchKeyPath: any[], notSetValue?: any): any; (searchKeyPath: Iterable<any, any>, notSetValue?: any): any; }"}},hasIn:{defaultValue:null,description:"True if the result of following a path of keys or indices through nested\nIterables results in a set value.",name:"hasIn",required:!0,type:{name:"{ (searchKeyPath: any[]): boolean; (searchKeyPath: Iterable<any, any>): boolean; }"}},toArray:{defaultValue:null,description:"Shallowly converts this iterable to an Array, discarding keys.",name:"toArray",required:!0,type:{name:"() => any[]"}},toObject:{defaultValue:null,description:"Shallowly converts this Iterable to an Object.\n\nThrows if keys are not strings.",name:"toObject",required:!0,type:{name:"() => { [key: string]: any; }"}},toMap:{defaultValue:null,description:"Converts this Iterable to a Map, Throws if keys are not hashable.\n\nNote: This is equivalent to `Map(this.toKeyedSeq())`, but provided\nfor convenience and to allow for chained expressions.",name:"toMap",required:!0,type:{name:"() => Map<string, any>"}},toOrderedMap:{defaultValue:null,description:"Converts this Iterable to a Map, maintaining the order of iteration.\n\nNote: This is equivalent to `OrderedMap(this.toKeyedSeq())`, but\nprovided for convenience and to allow for chained expressions.",name:"toOrderedMap",required:!0,type:{name:"() => Map<string, any>"}},toSet:{defaultValue:null,description:"Converts this Iterable to a Set, discarding keys. Throws if values\nare not hashable.\n\nNote: This is equivalent to `Set(this)`, but provided to allow for\nchained expressions.",name:"toSet",required:!0,type:{name:"() => Set<any>"}},toOrderedSet:{defaultValue:null,description:"Converts this Iterable to a Set, maintaining the order of iteration and\ndiscarding keys.\n\nNote: This is equivalent to `OrderedSet(this.valueSeq())`, but provided\nfor convenience and to allow for chained expressions.",name:"toOrderedSet",required:!0,type:{name:"() => Set<any>"}},toList:{defaultValue:null,description:"Converts this Iterable to a List, discarding keys.\n\nNote: This is equivalent to `List(this)`, but provided to allow\nfor chained expressions.",name:"toList",required:!0,type:{name:"() => List<any>"}},toStack:{defaultValue:null,description:"Converts this Iterable to a Stack, discarding keys. Throws if values\nare not hashable.\n\nNote: This is equivalent to `Stack(this)`, but provided to allow for\nchained expressions.",name:"toStack",required:!0,type:{name:"() => Stack<any>"}},toKeyedSeq:{defaultValue:null,description:"Returns a Seq.Keyed from this Iterable where indices are treated as keys.\n\nThis is useful if you want to operate on an\nIterable.Indexed and preserve the [index, value] pairs.\n\nThe returned Seq will have identical iteration order as\nthis Iterable.\n\nExample:\n\n     var indexedSeq = Immutable.Seq.of('A', 'B', 'C');\n     indexedSeq.filter(v => v === 'B').toString() // Seq [ 'B' ]\n     var keyedSeq = indexedSeq.toKeyedSeq();\n     keyedSeq.filter(v => v === 'B').toString() // Seq { 1: 'B' }",name:"toKeyedSeq",required:!0,type:{name:"() => Keyed<string, any>"}},toIndexedSeq:{defaultValue:null,description:"Returns an Seq.Indexed of the values of this Iterable, discarding keys.",name:"toIndexedSeq",required:!0,type:{name:"() => Indexed<any>"}},toSetSeq:{defaultValue:null,description:"Returns a Seq.Set of the values of this Iterable, discarding keys.",name:"toSetSeq",required:!0,type:{name:"() => Set<any>"}},keys:{defaultValue:null,description:"An iterator of this `Iterable`'s keys.",name:"keys",required:!0,type:{name:"() => Iterator<string>"}},values:{defaultValue:null,description:"An iterator of this `Iterable`'s values.",name:"values",required:!0,type:{name:"() => Iterator<any>"}},entries:{defaultValue:null,description:"An iterator of this `Iterable`'s entries as `[key, value]` tuples.",name:"entries",required:!0,type:{name:"() => Iterator<any[]>"}},keySeq:{defaultValue:null,description:"Returns a new Seq.Indexed of the keys of this Iterable,\ndiscarding values.",name:"keySeq",required:!0,type:{name:"() => Indexed<string>"}},valueSeq:{defaultValue:null,description:"Returns an Seq.Indexed of the values of this Iterable, discarding keys.",name:"valueSeq",required:!0,type:{name:"() => Indexed<any>"}},entrySeq:{defaultValue:null,description:"Returns a new Seq.Indexed of [key, value] tuples.",name:"entrySeq",required:!0,type:{name:"() => Indexed<any[]>"}},map:{defaultValue:null,description:"Returns a new Iterable of the same type with values passed through a\n`mapper` function.\n\n     Seq({ a: 1, b: 2 }).map(x => 10 * x)\n     // Seq { a: 10, b: 20 }",name:"map",required:!0,type:{name:"<M>(mapper: (value?: any, key?: string, iter?: Iterable<string, any>) => M, context?: any) => Iterable<string, M>"}},filter:{defaultValue:null,description:"Returns a new Iterable of the same type with only the entries for which\nthe `predicate` function returns true.\n\n     Seq({a:1,b:2,c:3,d:4}).filter(x => x % 2 === 0)\n     // Seq { b: 2, d: 4 }",name:"filter",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => Iterable<string, any>"}},filterNot:{defaultValue:null,description:"Returns a new Iterable of the same type with only the entries for which\nthe `predicate` function returns false.\n\n     Seq({a:1,b:2,c:3,d:4}).filterNot(x => x % 2 === 0)\n     // Seq { a: 1, c: 3 }",name:"filterNot",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => Iterable<string, any>"}},reverse:{defaultValue:null,description:"Returns a new Iterable of the same type in reverse order.",name:"reverse",required:!0,type:{name:"() => Iterable<string, any>"}},sort:{defaultValue:null,description:"Returns a new Iterable of the same type which includes the same entries,\nstably sorted by using a `comparator`.\n\nIf a `comparator` is not provided, a default comparator uses `<` and `>`.\n\n`comparator(valueA, valueB)`:\n\n   * Returns `0` if the elements should not be swapped.\n   * Returns `-1` (or any negative number) if `valueA` comes before `valueB`\n   * Returns `1` (or any positive number) if `valueA` comes after `valueB`\n   * Is pure, i.e. it must always return the same value for the same pair\n     of values.\n\nWhen sorting collections which have no defined order, their ordered\nequivalents will be returned. e.g. `map.sort()` returns OrderedMap.",name:"sort",required:!0,type:{name:"(comparator?: (valueA: any, valueB: any) => number) => Iterable<string, any>"}},sortBy:{defaultValue:null,description:"Like `sort`, but also accepts a `comparatorValueMapper` which allows for\nsorting by more sophisticated means:\n\n     hitters.sortBy(hitter => hitter.avgHits);",name:"sortBy",required:!0,type:{name:"<C>(comparatorValueMapper: (value?: any, key?: string, iter?: Iterable<string, any>) => C, comparator?: (valueA: C, valueB: C) => number) => Iterable<string, any>"}},groupBy:{defaultValue:null,description:"Returns a `Iterable.Keyed` of `Iterable.Keyeds`, grouped by the return\nvalue of the `grouper` function.\n\nNote: This is always an eager operation.",name:"groupBy",required:!0,type:{name:"<G>(grouper: (value?: any, key?: string, iter?: Iterable<string, any>) => G, context?: any) => Keyed<G, Iterable<string, any>>"}},forEach:{defaultValue:null,description:"The `sideEffect` is executed for every entry in the Iterable.\n\nUnlike `Array#forEach`, if any call of `sideEffect` returns\n`false`, the iteration will stop. Returns the number of entries iterated\n(including the last iteration which returned false).",name:"forEach",required:!0,type:{name:"(sideEffect: (value?: any, key?: string, iter?: Iterable<string, any>) => any, context?: any) => number"}},slice:{defaultValue:null,description:"Returns a new Iterable of the same type representing a portion of this\nIterable from start up to but not including end.\n\nIf begin is negative, it is offset from the end of the Iterable. e.g.\n`slice(-2)` returns a Iterable of the last two entries. If it is not\nprovided the new Iterable will begin at the beginning of this Iterable.\n\nIf end is negative, it is offset from the end of the Iterable. e.g.\n`slice(0, -1)` returns an Iterable of everything but the last entry. If\nit is not provided, the new Iterable will continue through the end of\nthis Iterable.\n\nIf the requested slice is equivalent to the current Iterable, then it\nwill return itself.",name:"slice",required:!0,type:{name:"(begin?: number, end?: number) => Iterable<string, any>"}},rest:{defaultValue:null,description:"Returns a new Iterable of the same type containing all entries except\nthe first.",name:"rest",required:!0,type:{name:"() => Iterable<string, any>"}},butLast:{defaultValue:null,description:"Returns a new Iterable of the same type containing all entries except\nthe last.",name:"butLast",required:!0,type:{name:"() => Iterable<string, any>"}},skip:{defaultValue:null,description:"Returns a new Iterable of the same type which excludes the first `amount`\nentries from this Iterable.",name:"skip",required:!0,type:{name:"(amount: number) => Iterable<string, any>"}},skipLast:{defaultValue:null,description:"Returns a new Iterable of the same type which excludes the last `amount`\nentries from this Iterable.",name:"skipLast",required:!0,type:{name:"(amount: number) => Iterable<string, any>"}},skipWhile:{defaultValue:null,description:"Returns a new Iterable of the same type which includes entries starting\nfrom when `predicate` first returns false.\n\n     Seq.of('dog','frog','cat','hat','god')\n       .skipWhile(x => x.match(/g/))\n     // Seq [ 'cat', 'hat', 'god' ]",name:"skipWhile",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => Iterable<string, any>"}},skipUntil:{defaultValue:null,description:"Returns a new Iterable of the same type which includes entries starting\nfrom when `predicate` first returns true.\n\n     Seq.of('dog','frog','cat','hat','god')\n       .skipUntil(x => x.match(/hat/))\n     // Seq [ 'hat', 'god' ]",name:"skipUntil",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => Iterable<string, any>"}},take:{defaultValue:null,description:"Returns a new Iterable of the same type which includes the first `amount`\nentries from this Iterable.",name:"take",required:!0,type:{name:"(amount: number) => Iterable<string, any>"}},takeLast:{defaultValue:null,description:"Returns a new Iterable of the same type which includes the last `amount`\nentries from this Iterable.",name:"takeLast",required:!0,type:{name:"(amount: number) => Iterable<string, any>"}},takeWhile:{defaultValue:null,description:"Returns a new Iterable of the same type which includes entries from this\nIterable as long as the `predicate` returns true.\n\n     Seq.of('dog','frog','cat','hat','god')\n       .takeWhile(x => x.match(/o/))\n     // Seq [ 'dog', 'frog' ]",name:"takeWhile",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => Iterable<string, any>"}},takeUntil:{defaultValue:null,description:"Returns a new Iterable of the same type which includes entries from this\nIterable as long as the `predicate` returns false.\n\n     Seq.of('dog','frog','cat','hat','god').takeUntil(x => x.match(/at/))\n     // ['dog', 'frog']",name:"takeUntil",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => Iterable<string, any>"}},concat:{defaultValue:null,description:"Returns a new Iterable of the same type with other values and\niterable-like concatenated to this one.\n\nFor Seqs, all entries will be present in\nthe resulting iterable, even if they have the same key.",name:"concat",required:!0,type:{name:"(...valuesOrIterables: any[]) => Iterable<string, any>"}},flatten:{defaultValue:null,description:"Flattens nested Iterables.\n\nWill deeply flatten the Iterable by default, returning an Iterable of the\nsame type, but a `depth` can be provided in the form of a number or\nboolean (where true means to shallowly flatten one level). A depth of 0\n(or shallow: false) will deeply flatten.\n\nFlattens only others Iterable, not Arrays or Objects.\n\nNote: `flatten(true)` operates on Iterable<any, Iterable<K, V>> and\nreturns Iterable<K, V>",name:"flatten",required:!0,type:{name:"{ (depth?: number): Iterable<any, any>; (shallow?: boolean): Iterable<any, any>; }"}},flatMap:{defaultValue:null,description:"Flat-maps the Iterable, returning an Iterable of the same type.\n\nSimilar to `iter.map(...).flatten(true)`.",name:"flatMap",required:!0,type:{name:"{ <MK, MV>(mapper: (value?: any, key?: string, iter?: Iterable<string, any>) => Iterable<MK, MV>, context?: any): Iterable<MK, MV>; <MK, MV>(mapper: (value?: any, key?: string, iter?: Iterable<...>) => any, context?: any): Iterable<...>; }"}},reduce:{defaultValue:null,description:"Reduces the Iterable to a value by calling the `reducer` for every entry\nin the Iterable and passing along the reduced value.\n\nIf `initialReduction` is not provided, or is null, the first item in the\nIterable will be used.\n@see `Array#reduce`.",name:"reduce",required:!0,type:{name:"<R>(reducer: (reduction?: R, value?: any, key?: string, iter?: Iterable<string, any>) => R, initialReduction?: R, context?: any) => R"}},reduceRight:{defaultValue:null,description:"Reduces the Iterable in reverse (from the right side).\n\nNote: Similar to this.reverse().reduce(), and provided for parity\nwith `Array#reduceRight`.",name:"reduceRight",required:!0,type:{name:"<R>(reducer: (reduction?: R, value?: any, key?: string, iter?: Iterable<string, any>) => R, initialReduction?: R, context?: any) => R"}},every:{defaultValue:null,description:"True if `predicate` returns true for all entries in the Iterable.",name:"every",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => boolean"}},some:{defaultValue:null,description:"True if `predicate` returns true for any entry in the Iterable.",name:"some",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any) => boolean"}},join:{defaultValue:null,description:'Joins values together as a string, inserting a separator between each.\nThe default separator is `","`.',name:"join",required:!0,type:{name:"(separator?: string) => string"}},isEmpty:{defaultValue:null,description:"Returns true if this Iterable includes no values.\n\nFor some lazy `Seq`, `isEmpty` might need to iterate to determine\nemptiness. At most one iteration will occur.",name:"isEmpty",required:!0,type:{name:"() => boolean"}},count:{defaultValue:null,description:"Returns the size of this Iterable.\n\nRegardless of if this Iterable can describe its size lazily (some Seqs\ncannot), this method will always return the correct size. E.g. it\nevaluates a lazy `Seq` if necessary.\n\nIf `predicate` is provided, then this returns the count of entries in the\nIterable for which the `predicate` returns true.",name:"count",required:!0,type:{name:"{ (): number; (predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any): number; }"}},countBy:{defaultValue:null,description:"Returns a `Seq.Keyed` of counts, grouped by the return value of\nthe `grouper` function.\n\nNote: This is not a lazy operation.",name:"countBy",required:!0,type:{name:"<G>(grouper: (value?: any, key?: string, iter?: Iterable<string, any>) => G, context?: any) => Map<G, number>"}},find:{defaultValue:null,description:"Returns the value for which the `predicate` returns true.",name:"find",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any, notSetValue?: any) => any"}},findLast:{defaultValue:null,description:"Returns the last value for which the `predicate` returns true.\n\nNote: `predicate` will be called for each entry in reverse.",name:"findLast",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any, notSetValue?: any) => any"}},findEntry:{defaultValue:null,description:"Returns the [key, value] entry for which the `predicate` returns true.",name:"findEntry",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any, notSetValue?: any) => any[]"}},findLastEntry:{defaultValue:null,description:"Returns the last [key, value] entry for which the `predicate`\nreturns true.\n\nNote: `predicate` will be called for each entry in reverse.",name:"findLastEntry",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Iterable<string, any>) => boolean, context?: any, notSetValue?: any) => any[]"}},max:{defaultValue:null,description:"Returns the maximum value in this collection. If any values are\ncomparatively equivalent, the first one found will be returned.\n\nThe `comparator` is used in the same way as `Iterable#sort`. If it is not\nprovided, the default comparator is `>`.\n\nWhen two values are considered equivalent, the first encountered will be\nreturned. Otherwise, `max` will operate independent of the order of input\nas long as the comparator is commutative. The default comparator `>` is\ncommutative *only* when types do not differ.\n\nIf `comparator` returns 0 and either value is NaN, undefined, or null,\nthat value will be returned.",name:"max",required:!0,type:{name:"(comparator?: (valueA: any, valueB: any) => number) => any"}},maxBy:{defaultValue:null,description:"Like `max`, but also accepts a `comparatorValueMapper` which allows for\ncomparing by more sophisticated means:\n\n     hitters.maxBy(hitter => hitter.avgHits);",name:"maxBy",required:!0,type:{name:"<C>(comparatorValueMapper: (value?: any, key?: string, iter?: Iterable<string, any>) => C, comparator?: (valueA: C, valueB: C) => number) => any"}},min:{defaultValue:null,description:"Returns the minimum value in this collection. If any values are\ncomparatively equivalent, the first one found will be returned.\n\nThe `comparator` is used in the same way as `Iterable#sort`. If it is not\nprovided, the default comparator is `<`.\n\nWhen two values are considered equivalent, the first encountered will be\nreturned. Otherwise, `min` will operate independent of the order of input\nas long as the comparator is commutative. The default comparator `<` is\ncommutative *only* when types do not differ.\n\nIf `comparator` returns 0 and either value is NaN, undefined, or null,\nthat value will be returned.",name:"min",required:!0,type:{name:"(comparator?: (valueA: any, valueB: any) => number) => any"}},minBy:{defaultValue:null,description:"Like `min`, but also accepts a `comparatorValueMapper` which allows for\ncomparing by more sophisticated means:\n\n     hitters.minBy(hitter => hitter.avgHits);",name:"minBy",required:!0,type:{name:"<C>(comparatorValueMapper: (value?: any, key?: string, iter?: Iterable<string, any>) => C, comparator?: (valueA: C, valueB: C) => number) => any"}},isSubset:{defaultValue:null,description:"True if `iter` includes every value in this Iterable.",name:"isSubset",required:!0,type:{name:"{ (iter: Iterable<any, any>): boolean; (iter: any[]): boolean; }"}},isSuperset:{defaultValue:null,description:"True if this Iterable includes every value in `iter`.",name:"isSuperset",required:!0,type:{name:"{ (iter: Iterable<any, any>): boolean; (iter: any[]): boolean; }"}},flip:{defaultValue:null,description:"Returns a new Iterable.Keyed of the same type where the keys and values\nhave been flipped.\n\n     Seq({ a: 'z', b: 'y' }).flip() // { z: 'a', y: 'b' }",name:"flip",required:!0,type:{name:"() => Keyed<any, string>"}},mapKeys:{defaultValue:null,description:"Returns a new Iterable.Keyed of the same type with keys passed through\na `mapper` function.\n\n     Seq({ a: 1, b: 2 })\n       .mapKeys(x => x.toUpperCase())\n     // Seq { A: 1, B: 2 }",name:"mapKeys",required:!0,type:{name:"<M>(mapper: (key?: string, value?: any, iter?: Keyed<string, any>) => M, context?: any) => Keyed<M, any>"}},mapEntries:{defaultValue:null,description:"Returns a new Iterable.Keyed of the same type with entries\n([key, value] tuples) passed through a `mapper` function.\n\n     Seq({ a: 1, b: 2 })\n       .mapEntries(([k, v]) => [k.toUpperCase(), v * 2])\n     // Seq { A: 2, B: 4 }",name:"mapEntries",required:!0,type:{name:"<KM, VM>(mapper: (entry?: any[], index?: number, iter?: Keyed<string, any>) => any[], context?: any) => Keyed<KM, VM>"}},keyOf:{defaultValue:null,description:"Returns the key associated with the search value, or undefined.",name:"keyOf",required:!0,type:{name:"(searchValue: any) => string"}},lastKeyOf:{defaultValue:null,description:"Returns the last key associated with the search value, or undefined.",name:"lastKeyOf",required:!0,type:{name:"(searchValue: any) => string"}},findKey:{defaultValue:null,description:"Returns the key for which the `predicate` returns true.",name:"findKey",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Keyed<string, any>) => boolean, context?: any) => string"}},findLastKey:{defaultValue:null,description:"Returns the last key for which the `predicate` returns true.\n\nNote: `predicate` will be called for each entry in reverse.",name:"findLastKey",required:!0,type:{name:"(predicate: (value?: any, key?: string, iter?: Keyed<string, any>) => boolean, context?: any) => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/text.ts#createValueFromEditorState"]={docgenInfo:createValueFromEditorState.__docgenInfo,name:"createValueFromEditorState",path:"src/tools/text.ts#createValueFromEditorState"})}catch(__react_docgen_typescript_loader_error){}try{getRichTextBlockText.displayName="getRichTextBlockText",getRichTextBlockText.__docgenInfo={description:"",displayName:"getRichTextBlockText",props:{key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"string"}},fragments:{defaultValue:null,description:"",name:"fragments",required:!0,type:{name:"IFragment[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/text.ts#getRichTextBlockText"]={docgenInfo:getRichTextBlockText.__docgenInfo,name:"getRichTextBlockText",path:"src/tools/text.ts#getRichTextBlockText"})}catch(__react_docgen_typescript_loader_error){}try{getRawInlineStyleRangesFromRichTextBlock.displayName="getRawInlineStyleRangesFromRichTextBlock",getRawInlineStyleRangesFromRichTextBlock.__docgenInfo={description:"",displayName:"getRawInlineStyleRangesFromRichTextBlock",props:{key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"string"}},fragments:{defaultValue:null,description:"",name:"fragments",required:!0,type:{name:"IFragment[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/text.ts#getRawInlineStyleRangesFromRichTextBlock"]={docgenInfo:getRawInlineStyleRangesFromRichTextBlock.__docgenInfo,name:"getRawInlineStyleRangesFromRichTextBlock",path:"src/tools/text.ts#getRawInlineStyleRangesFromRichTextBlock"})}catch(__react_docgen_typescript_loader_error){}try{createRawContentBlockFromRichTextBlock.displayName="createRawContentBlockFromRichTextBlock",createRawContentBlockFromRichTextBlock.__docgenInfo={description:"",displayName:"createRawContentBlockFromRichTextBlock",props:{key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"string"}},fragments:{defaultValue:null,description:"",name:"fragments",required:!0,type:{name:"IFragment[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/text.ts#createRawContentBlockFromRichTextBlock"]={docgenInfo:createRawContentBlockFromRichTextBlock.__docgenInfo,name:"createRawContentBlockFromRichTextBlock",path:"src/tools/text.ts#createRawContentBlockFromRichTextBlock"})}catch(__react_docgen_typescript_loader_error){}try{getRawContentStateFromRichText.displayName="getRawContentStateFromRichText",getRawContentStateFromRichText.__docgenInfo={description:"",displayName:"getRawContentStateFromRichText",props:{length:{defaultValue:null,description:"Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.",name:"length",required:!0,type:{name:"number"}},toString:{defaultValue:null,description:"Returns a string representation of an array.",name:"toString",required:!1,type:{name:"() => string"}},toLocaleString:{defaultValue:null,description:"Returns a string representation of an array. The elements are converted to string using their toLocalString methods.",name:"toLocaleString",required:!1,type:{name:"() => string"}},pop:{defaultValue:null,description:"Removes the last element from an array and returns it.",name:"pop",required:!0,type:{name:"() => IRichTextBlock"}},push:{defaultValue:null,description:"Appends new elements to an array, and returns the new length of the array.\n@param items New elements of the Array.",name:"push",required:!0,type:{name:"(...items: IRichTextBlock[]) => number"}},concat:{defaultValue:null,description:"Combines two or more arrays.\nCombines two or more arrays.\n@param items Additional items to add to the end of array1.\n@param items Additional items to add to the end of array1.",name:"concat",required:!0,type:{name:"{ (...items: ConcatArray<IRichTextBlock>[]): IRichTextBlock[]; (...items: (IRichTextBlock | ConcatArray<IRichTextBlock>)[]): IRichTextBlock[]; }"}},join:{defaultValue:null,description:"Adds all the elements of an array separated by the specified separator string.\n@param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.",name:"join",required:!0,type:{name:"(separator?: string) => string"}},reverse:{defaultValue:null,description:"Reverses the elements in an Array.",name:"reverse",required:!0,type:{name:"() => IRichTextBlock[]"}},shift:{defaultValue:null,description:"Removes the first element from an array and returns it.",name:"shift",required:!0,type:{name:"() => IRichTextBlock"}},slice:{defaultValue:null,description:"Returns a section of an array.\n@param start The beginning of the specified portion of the array.\n@param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => IRichTextBlock[]"}},sort:{defaultValue:null,description:"Sorts an array.\n@param compareFn Function used to determine the order of the elements. It is expected to return\ra negative value if first argument is less than second argument, zero if they're equal and a positive\rvalue otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\r```ts\r[11,2,22,1].sort((a, b) => a - b)\r```",name:"sort",required:!0,type:{name:"(compareFn?: (a: IRichTextBlock, b: IRichTextBlock) => number) => IRichTextValue"}},splice:{defaultValue:null,description:"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\nRemoves elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\n@param start The zero-based location in the array from which to start removing elements.\n@param deleteCount The number of elements to remove.\n@param start The zero-based location in the array from which to start removing elements.\n@param deleteCount The number of elements to remove.\n@param items Elements to insert into the array in place of the deleted elements.",name:"splice",required:!0,type:{name:"{ (start: number, deleteCount?: number): IRichTextBlock[]; (start: number, deleteCount: number, ...items: IRichTextBlock[]): IRichTextBlock[]; }"}},unshift:{defaultValue:null,description:"Inserts new elements at the start of an array.\n@param items Elements to insert at the start of the Array.",name:"unshift",required:!0,type:{name:"(...items: IRichTextBlock[]) => number"}},indexOf:{defaultValue:null,description:"Returns the index of the first occurrence of a value in an array.\n@param searchElement The value to locate in the array.\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.",name:"indexOf",required:!0,type:{name:"(searchElement: IRichTextBlock, fromIndex?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the index of the last occurrence of a specified value in an array.\n@param searchElement The value to locate in the array.\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.",name:"lastIndexOf",required:!0,type:{name:"(searchElement: IRichTextBlock, fromIndex?: number) => number"}},every:{defaultValue:null,description:"Determines whether all the members of an array satisfy the specified test.\n@param callbackfn A function that accepts up to three arguments. The every method calls\rthe callbackfn function for each element in the array until the callbackfn returns a value\rwhich is coercible to the Boolean value false, or until the end of the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.",name:"every",required:!0,type:{name:"(callbackfn: (value: IRichTextBlock, index: number, array: IRichTextBlock[]) => unknown, thisArg?: any) => boolean"}},some:{defaultValue:null,description:"Determines whether the specified callback function returns true for any element of an array.\n@param callbackfn A function that accepts up to three arguments. The some method calls\rthe callbackfn function for each element in the array until the callbackfn returns a value\rwhich is coercible to the Boolean value true, or until the end of the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.",name:"some",required:!0,type:{name:"(callbackfn: (value: IRichTextBlock, index: number, array: IRichTextBlock[]) => unknown, thisArg?: any) => boolean"}},forEach:{defaultValue:null,description:"Performs the specified action for each element in an array.\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"forEach",required:!0,type:{name:"(callbackfn: (value: IRichTextBlock, index: number, array: IRichTextBlock[]) => void, thisArg?: any) => void"}},map:{defaultValue:null,description:"Calls a defined callback function on each element of an array, and returns an array that contains the results.\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"map",required:!0,type:{name:"<U>(callbackfn: (value: IRichTextBlock, index: number, array: IRichTextBlock[]) => U, thisArg?: any) => U[]"}},filter:{defaultValue:null,description:"Returns the elements of an array that meet the condition specified in a callback function.\nReturns the elements of an array that meet the condition specified in a callback function.\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"filter",required:!0,type:{name:"{ <S extends IRichTextBlock>(callbackfn: (value: IRichTextBlock, index: number, array: IRichTextBlock[]) => value is S, thisArg?: any): S[]; (callbackfn: (value: IRichTextBlock, index: number, array: IRichTextBlock[]) => unknown, thisArg?: any): IRichTextBlock[]; }"}},reduce:{defaultValue:null,description:"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",name:"reduce",required:!0,type:{name:"{ (callbackfn: (previousValue: IRichTextBlock, currentValue: IRichTextBlock, currentIndex: number, array: IRichTextBlock[]) => IRichTextBlock): IRichTextBlock; (callbackfn: (previousValue: IRichTextBlock, currentValue: IRichTextBlock, currentIndex: number, array: IRichTextBlock[]) => IRichTextBlock, initialValue: IR..."}},reduceRight:{defaultValue:null,description:"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",name:"reduceRight",required:!0,type:{name:"{ (callbackfn: (previousValue: IRichTextBlock, currentValue: IRichTextBlock, currentIndex: number, array: IRichTextBlock[]) => IRichTextBlock): IRichTextBlock; (callbackfn: (previousValue: IRichTextBlock, currentValue: IRichTextBlock, currentIndex: number, array: IRichTextBlock[]) => IRichTextBlock, initialValue: IR..."}},find:{defaultValue:null,description:"Returns the value of the first element in the array where predicate is true, and undefined\notherwise.\n@param predicate find calls predicate once for each element of the array, in ascending\rorder, until it finds one where predicate returns true. If such an element is found, find\rimmediately returns that element value. Otherwise, find returns undefined.\n@param thisArg If provided, it will be used as the this value for each invocation of\rpredicate. If it is not provided, undefined is used instead.",name:"find",required:!0,type:{name:"{ <S extends IRichTextBlock>(predicate: (this: void, value: IRichTextBlock, index: number, obj: IRichTextBlock[]) => value is S, thisArg?: any): S; (predicate: (value: IRichTextBlock, index: number, obj: IRichTextBlock[]) => unknown, thisArg?: any): IRichTextBlock; }"}},findIndex:{defaultValue:null,description:"Returns the index of the first element in the array where predicate is true, and -1\notherwise.\n@param predicate find calls predicate once for each element of the array, in ascending\rorder, until it finds one where predicate returns true. If such an element is found,\rfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\n@param thisArg If provided, it will be used as the this value for each invocation of\rpredicate. If it is not provided, undefined is used instead.",name:"findIndex",required:!0,type:{name:"(predicate: (value: IRichTextBlock, index: number, obj: IRichTextBlock[]) => unknown, thisArg?: any) => number"}},fill:{defaultValue:null,description:"Returns the this object after filling the section identified by start and end with value\n@param value value to fill array section with\n@param start index to start filling the array at. If start is negative, it is treated as\rlength+start where length is the length of the array.\n@param end index to stop filling the array at. If end is negative, it is treated as\rlength+end.",name:"fill",required:!0,type:{name:"(value: IRichTextBlock, start?: number, end?: number) => IRichTextValue"}},copyWithin:{defaultValue:null,description:"Returns the this object after copying a section of the array identified by start and end\nto the same array starting at position target\n@param target If target is negative, it is treated as length+target where length is the\rlength of the array.\n@param start If start is negative, it is treated as length+start. If end is negative, it\ris treated as length+end.\n@param end If not specified, length of the this object is used as its default value.",name:"copyWithin",required:!0,type:{name:"(target: number, start: number, end?: number) => IRichTextValue"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<IRichTextBlock>"}},entries:{defaultValue:null,description:"Returns an iterable of key, value pairs for every entry in the array",name:"entries",required:!0,type:{name:"() => IterableIterator<[number, IRichTextBlock]>"}},keys:{defaultValue:null,description:"Returns an iterable of keys in the array",name:"keys",required:!0,type:{name:"() => IterableIterator<number>"}},values:{defaultValue:null,description:"Returns an iterable of values in the array",name:"values",required:!0,type:{name:"() => IterableIterator<IRichTextBlock>"}},"__@unscopables":{defaultValue:null,description:"Returns an object whose properties have the value 'true'\nwhen they will be absent when used in a 'with' statement.",name:"__@unscopables",required:!0,type:{name:"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }"}},includes:{defaultValue:null,description:"Determines whether an array includes a certain element, returning true or false as appropriate.\n@param searchElement The element to search for.\n@param fromIndex The position in this array at which to begin searching for searchElement.",name:"includes",required:!0,type:{name:"(searchElement: IRichTextBlock, fromIndex?: number) => boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/text.ts#getRawContentStateFromRichText"]={docgenInfo:getRawContentStateFromRichText.__docgenInfo,name:"getRawContentStateFromRichText",path:"src/tools/text.ts#getRawContentStateFromRichText"})}catch(__react_docgen_typescript_loader_error){}try{createEditorStateFromRichText.displayName="createEditorStateFromRichText",createEditorStateFromRichText.__docgenInfo={description:"",displayName:"createEditorStateFromRichText",props:{length:{defaultValue:null,description:"Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.",name:"length",required:!0,type:{name:"number"}},toString:{defaultValue:null,description:"Returns a string representation of an array.",name:"toString",required:!1,type:{name:"() => string"}},toLocaleString:{defaultValue:null,description:"Returns a string representation of an array. The elements are converted to string using their toLocalString methods.",name:"toLocaleString",required:!1,type:{name:"() => string"}},pop:{defaultValue:null,description:"Removes the last element from an array and returns it.",name:"pop",required:!0,type:{name:"() => IRichTextBlock"}},push:{defaultValue:null,description:"Appends new elements to an array, and returns the new length of the array.\n@param items New elements of the Array.",name:"push",required:!0,type:{name:"(...items: IRichTextBlock[]) => number"}},concat:{defaultValue:null,description:"Combines two or more arrays.\nCombines two or more arrays.\n@param items Additional items to add to the end of array1.\n@param items Additional items to add to the end of array1.",name:"concat",required:!0,type:{name:"{ (...items: ConcatArray<IRichTextBlock>[]): IRichTextBlock[]; (...items: (IRichTextBlock | ConcatArray<IRichTextBlock>)[]): IRichTextBlock[]; }"}},join:{defaultValue:null,description:"Adds all the elements of an array separated by the specified separator string.\n@param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.",name:"join",required:!0,type:{name:"(separator?: string) => string"}},reverse:{defaultValue:null,description:"Reverses the elements in an Array.",name:"reverse",required:!0,type:{name:"() => IRichTextBlock[]"}},shift:{defaultValue:null,description:"Removes the first element from an array and returns it.",name:"shift",required:!0,type:{name:"() => IRichTextBlock"}},slice:{defaultValue:null,description:"Returns a section of an array.\n@param start The beginning of the specified portion of the array.\n@param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => IRichTextBlock[]"}},sort:{defaultValue:null,description:"Sorts an array.\n@param compareFn Function used to determine the order of the elements. It is expected to return\ra negative value if first argument is less than second argument, zero if they're equal and a positive\rvalue otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\r```ts\r[11,2,22,1].sort((a, b) => a - b)\r```",name:"sort",required:!0,type:{name:"(compareFn?: (a: IRichTextBlock, b: IRichTextBlock) => number) => IRichTextValue"}},splice:{defaultValue:null,description:"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\nRemoves elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\n@param start The zero-based location in the array from which to start removing elements.\n@param deleteCount The number of elements to remove.\n@param start The zero-based location in the array from which to start removing elements.\n@param deleteCount The number of elements to remove.\n@param items Elements to insert into the array in place of the deleted elements.",name:"splice",required:!0,type:{name:"{ (start: number, deleteCount?: number): IRichTextBlock[]; (start: number, deleteCount: number, ...items: IRichTextBlock[]): IRichTextBlock[]; }"}},unshift:{defaultValue:null,description:"Inserts new elements at the start of an array.\n@param items Elements to insert at the start of the Array.",name:"unshift",required:!0,type:{name:"(...items: IRichTextBlock[]) => number"}},indexOf:{defaultValue:null,description:"Returns the index of the first occurrence of a value in an array.\n@param searchElement The value to locate in the array.\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.",name:"indexOf",required:!0,type:{name:"(searchElement: IRichTextBlock, fromIndex?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the index of the last occurrence of a specified value in an array.\n@param searchElement The value to locate in the array.\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.",name:"lastIndexOf",required:!0,type:{name:"(searchElement: IRichTextBlock, fromIndex?: number) => number"}},every:{defaultValue:null,description:"Determines whether all the members of an array satisfy the specified test.\n@param callbackfn A function that accepts up to three arguments. The every method calls\rthe callbackfn function for each element in the array until the callbackfn returns a value\rwhich is coercible to the Boolean value false, or until the end of the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.",name:"every",required:!0,type:{name:"(callbackfn: (value: IRichTextBlock, index: number, array: IRichTextBlock[]) => unknown, thisArg?: any) => boolean"}},some:{defaultValue:null,description:"Determines whether the specified callback function returns true for any element of an array.\n@param callbackfn A function that accepts up to three arguments. The some method calls\rthe callbackfn function for each element in the array until the callbackfn returns a value\rwhich is coercible to the Boolean value true, or until the end of the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.",name:"some",required:!0,type:{name:"(callbackfn: (value: IRichTextBlock, index: number, array: IRichTextBlock[]) => unknown, thisArg?: any) => boolean"}},forEach:{defaultValue:null,description:"Performs the specified action for each element in an array.\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"forEach",required:!0,type:{name:"(callbackfn: (value: IRichTextBlock, index: number, array: IRichTextBlock[]) => void, thisArg?: any) => void"}},map:{defaultValue:null,description:"Calls a defined callback function on each element of an array, and returns an array that contains the results.\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"map",required:!0,type:{name:"<U>(callbackfn: (value: IRichTextBlock, index: number, array: IRichTextBlock[]) => U, thisArg?: any) => U[]"}},filter:{defaultValue:null,description:"Returns the elements of an array that meet the condition specified in a callback function.\nReturns the elements of an array that meet the condition specified in a callback function.\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.",name:"filter",required:!0,type:{name:"{ <S extends IRichTextBlock>(callbackfn: (value: IRichTextBlock, index: number, array: IRichTextBlock[]) => value is S, thisArg?: any): S[]; (callbackfn: (value: IRichTextBlock, index: number, array: IRichTextBlock[]) => unknown, thisArg?: any): IRichTextBlock[]; }"}},reduce:{defaultValue:null,description:"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",name:"reduce",required:!0,type:{name:"{ (callbackfn: (previousValue: IRichTextBlock, currentValue: IRichTextBlock, currentIndex: number, array: IRichTextBlock[]) => IRichTextBlock): IRichTextBlock; (callbackfn: (previousValue: IRichTextBlock, currentValue: IRichTextBlock, currentIndex: number, array: IRichTextBlock[]) => IRichTextBlock, initialValue: IR..."}},reduceRight:{defaultValue:null,description:"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\nCalls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",name:"reduceRight",required:!0,type:{name:"{ (callbackfn: (previousValue: IRichTextBlock, currentValue: IRichTextBlock, currentIndex: number, array: IRichTextBlock[]) => IRichTextBlock): IRichTextBlock; (callbackfn: (previousValue: IRichTextBlock, currentValue: IRichTextBlock, currentIndex: number, array: IRichTextBlock[]) => IRichTextBlock, initialValue: IR..."}},find:{defaultValue:null,description:"Returns the value of the first element in the array where predicate is true, and undefined\notherwise.\n@param predicate find calls predicate once for each element of the array, in ascending\rorder, until it finds one where predicate returns true. If such an element is found, find\rimmediately returns that element value. Otherwise, find returns undefined.\n@param thisArg If provided, it will be used as the this value for each invocation of\rpredicate. If it is not provided, undefined is used instead.",name:"find",required:!0,type:{name:"{ <S extends IRichTextBlock>(predicate: (this: void, value: IRichTextBlock, index: number, obj: IRichTextBlock[]) => value is S, thisArg?: any): S; (predicate: (value: IRichTextBlock, index: number, obj: IRichTextBlock[]) => unknown, thisArg?: any): IRichTextBlock; }"}},findIndex:{defaultValue:null,description:"Returns the index of the first element in the array where predicate is true, and -1\notherwise.\n@param predicate find calls predicate once for each element of the array, in ascending\rorder, until it finds one where predicate returns true. If such an element is found,\rfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\n@param thisArg If provided, it will be used as the this value for each invocation of\rpredicate. If it is not provided, undefined is used instead.",name:"findIndex",required:!0,type:{name:"(predicate: (value: IRichTextBlock, index: number, obj: IRichTextBlock[]) => unknown, thisArg?: any) => number"}},fill:{defaultValue:null,description:"Returns the this object after filling the section identified by start and end with value\n@param value value to fill array section with\n@param start index to start filling the array at. If start is negative, it is treated as\rlength+start where length is the length of the array.\n@param end index to stop filling the array at. If end is negative, it is treated as\rlength+end.",name:"fill",required:!0,type:{name:"(value: IRichTextBlock, start?: number, end?: number) => IRichTextValue"}},copyWithin:{defaultValue:null,description:"Returns the this object after copying a section of the array identified by start and end\nto the same array starting at position target\n@param target If target is negative, it is treated as length+target where length is the\rlength of the array.\n@param start If start is negative, it is treated as length+start. If end is negative, it\ris treated as length+end.\n@param end If not specified, length of the this object is used as its default value.",name:"copyWithin",required:!0,type:{name:"(target: number, start: number, end?: number) => IRichTextValue"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<IRichTextBlock>"}},entries:{defaultValue:null,description:"Returns an iterable of key, value pairs for every entry in the array",name:"entries",required:!0,type:{name:"() => IterableIterator<[number, IRichTextBlock]>"}},keys:{defaultValue:null,description:"Returns an iterable of keys in the array",name:"keys",required:!0,type:{name:"() => IterableIterator<number>"}},values:{defaultValue:null,description:"Returns an iterable of values in the array",name:"values",required:!0,type:{name:"() => IterableIterator<IRichTextBlock>"}},"__@unscopables":{defaultValue:null,description:"Returns an object whose properties have the value 'true'\nwhen they will be absent when used in a 'with' statement.",name:"__@unscopables",required:!0,type:{name:"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }"}},includes:{defaultValue:null,description:"Determines whether an array includes a certain element, returning true or false as appropriate.\n@param searchElement The element to search for.\n@param fromIndex The position in this array at which to begin searching for searchElement.",name:"includes",required:!0,type:{name:"(searchElement: IRichTextBlock, fromIndex?: number) => boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/text.ts#createEditorStateFromRichText"]={docgenInfo:createEditorStateFromRichText.__docgenInfo,name:"createEditorStateFromRichText",path:"src/tools/text.ts#createEditorStateFromRichText"})}catch(__react_docgen_typescript_loader_error){}try{createEditorStateFromText.displayName="createEditorStateFromText",createEditorStateFromText.__docgenInfo={description:"",displayName:"createEditorStateFromText",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string or an object that supports being matched against, and returns an array\ncontaining the results of that search, or null if no matches are found.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { ...; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substring: string, ...args: any[]) => string): string; }"}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"(locales?: string | string[]) => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"(locales?: string | string[]) => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/text.ts#createEditorStateFromText"]={docgenInfo:createEditorStateFromText.__docgenInfo,name:"createEditorStateFromText",path:"src/tools/text.ts#createEditorStateFromText"})}catch(__react_docgen_typescript_loader_error){}},894:function(module,exports,__webpack_require__){var map={"./Formula.stories.tsx":357,"./NonRoute.stories.tsx":358,"./index.stories.tsx":1095};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=894},90:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"c",(function(){return formula_updateActiveCellRef})),__webpack_require__.d(__webpack_exports__,"b",(function(){return formula_deleteSheetRef})),__webpack_require__.d(__webpack_exports__,"a",(function(){return formula_deletePositions})),__webpack_require__.d(__webpack_exports__,"d",(function(){return formula_updateWorkbookReference}));__webpack_require__(52),__webpack_require__(136),__webpack_require__(68),__webpack_require__(60),__webpack_require__(48),__webpack_require__(77),__webpack_require__(199),__webpack_require__(1019),__webpack_require__(137),__webpack_require__(78),__webpack_require__(201),__webpack_require__(247),__webpack_require__(447),__webpack_require__(53),__webpack_require__(79);var uniqid=__webpack_require__(111),uniqid_default=__webpack_require__.n(uniqid),createDependentRowAddressReferences=(__webpack_require__(83),function createDependentRowAddressReferences(dependentSheets,dependentSheetName){var sheet=dependentSheets[dependentSheetName],addressReferences=[];return sheet&&Object.keys(sheet).forEach((function(rowIndex){addressReferences=addressReferences.concat(function createDependentColumnAddressReferences(sheet,dependentSheetName,rowIndex){var addressReferences=[],column=sheet[rowIndex];return column&&Object.keys(column).forEach((function(columnIndex){addressReferences.push({position:{x:+columnIndex,y:+rowIndex},sheetName:dependentSheetName})})),addressReferences}(sheet,dependentSheetName,+rowIndex))})),addressReferences}),createIndependentRowAddressReferences=function createIndependentRowAddressReferences(sheetIndependents,independentDependents,rowIndex){var row=sheetIndependents[rowIndex],addressReferences=[];return row&&Object.keys(row).forEach((function(columnIndex){addressReferences=addressReferences.concat(function createDependentAddressReferences(row,independentDependents,columnIndex){var addressReferences=[],dependentSheets=independentDependents[row[columnIndex]];return dependentSheets&&Object.keys(dependentSheets).forEach((function(dependentSheetName){addressReferences=addressReferences.concat(createDependentRowAddressReferences(dependentSheets,dependentSheetName))})),addressReferences}(row,independentDependents,+columnIndex))})),addressReferences},createSheetAddressReferences=function createSheetAddressReferences(independents,independentDependents,sheetName){var sheetIndependents=independents[sheetName],addressReferences=[];return sheetIndependents&&Object.keys(sheetIndependents).forEach((function(rowIndex){addressReferences=addressReferences.concat(createIndependentRowAddressReferences(sheetIndependents,independentDependents,+rowIndex))})),addressReferences},LinkedListNode=function(){function LinkedListNode(item){void 0===item&&(item=null),this._item=item,this._previous=null,this._next=null}return Object.defineProperty(LinkedListNode.prototype,"item",{get:function get(){return this._item},set:function set(item){this._item=item},enumerable:!1,configurable:!0}),Object.defineProperty(LinkedListNode.prototype,"previous",{get:function get(){return this._previous},set:function set(previous){this._previous=previous},enumerable:!1,configurable:!0}),Object.defineProperty(LinkedListNode.prototype,"next",{get:function get(){return this._next},set:function set(next){this._next=next},enumerable:!1,configurable:!0}),LinkedListNode}(),queue_Queue=function(){function Queue(){this._length=0,this._head=null,this._tail=null}return Queue.prototype.enqueue=function(ref){var node=new LinkedListNode(ref);null===this._head?(this._head=node,this._tail=node):(this._tail.next=node,node.previous=this._tail,this._tail=node),this._length+=1},Queue.prototype.dequeue=function(){if(this.isEmpty())throw new Error("Cannot dequeue an empty Queue");var item=this._head.item;return this._head=this._head.next,this._head&&(this._head.previous=null),this._length-=1,this.isEmpty()&&(this._tail=null),item},Queue.prototype.isEmpty=function(){return!this._length},Queue}(),fast_formula_parser=__webpack_require__(552),fast_formula_parser_default=__webpack_require__.n(fast_formula_parser),types=__webpack_require__(12),parser_createFormulaParser=function createFormulaParser(sheetsMap){return new fast_formula_parser_default.a({onCell:function onCell(_a){var sheet=_a.sheet,rowIndex=_a.row,columnIndex=_a.col,value=null;if(sheetsMap[sheet]&&sheetsMap[sheet].data){var results=window.results,sheetContent=sheetsMap[sheet].data;if(sheetContent[rowIndex]&&sheetContent[rowIndex][columnIndex]){var cell=sheetContent[rowIndex][columnIndex];switch(cell.type){case types.a:results[sheet]&&void 0!==results[sheet][rowIndex]&&(value=results[sheet][rowIndex][columnIndex]);break;case types.c:case types.e:value=cell.value}}}return value},onRange:function onRange(_a){var from=_a.from,to=_a.to,sheet=_a.sheet,rangeData=[];if(sheetsMap[sheet]&&sheetsMap[sheet].data)for(var results=window.results,sheetContent=sheetsMap[sheet].data,rowIndex=from.row;rowIndex<=to.row;rowIndex+=1){var row=sheetContent[rowIndex],rowArray=[];if(row)for(var columnIndex=from.col;columnIndex<=to.col;columnIndex+=1){var cell=row[columnIndex],value=null;if(cell)switch(cell.type){case types.a:results[sheet]&&void 0!==results[sheet][rowIndex]&&(value=results[sheet][rowIndex][columnIndex]);break;case types.c:case types.e:value=cell.value}rowArray.push(value)}rangeData.push(rowArray)}return rangeData}})};try{parser_createFormulaParser.displayName="createFormulaParser",parser_createFormulaParser.__docgenInfo={description:"",displayName:"createFormulaParser",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/formula/parser.ts#createFormulaParser"]={docgenInfo:parser_createFormulaParser.__docgenInfo,name:"createFormulaParser",path:"src/tools/formula/parser.ts#createFormulaParser"})}catch(__react_docgen_typescript_loader_error){}var regex=__webpack_require__(97),conversion=__webpack_require__(99),formula_assignSheetIndependents=function assignSheetIndependents(independents,independentDependents,sheetToIndependentDependentMap,sheetName,dependentSheetName,position,dependentPosition){var x=position.x,y=position.y;independents[sheetName]||(independents[sheetName]={}),independents[sheetName][y]||(independents[sheetName][y]={}),independents[sheetName][y][x]||(independents[sheetName][y][x]=uniqid_default()());var independentDependentId=independents[sheetName][y][x];independentDependents[independentDependentId]||(independentDependents[independentDependentId]={}),independentDependents[independentDependentId][dependentSheetName]||(independentDependents[independentDependentId][dependentSheetName]={}),independentDependents[independentDependentId][dependentSheetName][dependentPosition.y]||(independentDependents[independentDependentId][dependentSheetName][dependentPosition.y]={}),independentDependents[independentDependentId][dependentSheetName][dependentPosition.y][dependentPosition.x]||(independentDependents[independentDependentId][dependentSheetName][dependentPosition.y][dependentPosition.x]=!0),sheetToIndependentDependentMap[dependentSheetName]||(sheetToIndependentDependentMap[dependentSheetName]={}),sheetToIndependentDependentMap[dependentSheetName][independents[sheetName][y][x]]=!0},formula_computeFormulas=function computeFormulas(sheetsMap,independents,independentDependent,results,addressReferences){window.results=results;var visited={},queue=new queue_Queue,parser=parser_createFormulaParser(sheetsMap);addressReferences.forEach((function(addressReference){return queue.enqueue(addressReference)}));for(var _loop_1=function _loop_1(){var _a=queue.dequeue(),poppedSheetName=_a.sheetName,poppedPosition=_a.position;if(visited[poppedSheetName]&&visited[poppedSheetName][poppedPosition.y]&&visited[poppedSheetName][poppedPosition.y].has(+poppedPosition.x)||(visited[poppedSheetName]||(visited[poppedSheetName]={}),visited[poppedSheetName][poppedPosition.y]||(visited[poppedSheetName][poppedPosition.y]=new Set),visited[poppedSheetName][poppedPosition.y].add(poppedPosition.x),function computeResult(parser,sheetsMap,sheetName,position){try{var cell=sheetsMap[sheetName].data[position.y][position.x];if(cell.type===types.a){var results=window.results;results[sheetName]||(results[sheetName]={}),results[sheetName][position.y]||(results[sheetName][position.y]={}),results[sheetName][position.y][position.x]=parser.parse(cell.value,{sheet:sheetName,row:position.y,col:position.x})}}catch(error){console.error("Error at [ sheet name: "+sheetName+" | position:  "+JSON.stringify(position)+" ] - "+error)}}(parser,sheetsMap,poppedSheetName,poppedPosition)),independents[poppedSheetName]&&independents[poppedSheetName][poppedPosition.y]&&independents[poppedSheetName][poppedPosition.y][poppedPosition.x]){var sheetDependentsId=independents[poppedSheetName][poppedPosition.y][poppedPosition.x],sheetDependents_1=independentDependent[sheetDependentsId];Object.keys(sheetDependents_1).forEach((function(dependentSheetName){var sheetDependent=sheetDependents_1[dependentSheetName];visited[dependentSheetName]||(visited[dependentSheetName]={}),Object.keys(sheetDependent).forEach((function(rowIndex){var rowDependents=sheetDependent[rowIndex];visited[dependentSheetName][rowIndex]||(visited[dependentSheetName][rowIndex]=new Set),Object.keys(rowDependents).forEach((function(columnIndex){visited[dependentSheetName][rowIndex].has(+columnIndex)||queue.enqueue({position:{x:+columnIndex,y:+rowIndex},sheetName:dependentSheetName})}))}))}))}};!queue.isEmpty();)_loop_1();delete window.results},formula_assignDependentsAndIndependents=function assignDependentsAndIndependents(independents,independentDependents,sheetToIndependentDependentMap,dependents,dependentsIndependents,position,cell,sheetName){var x=position.x,y=position.y,formulaReferences=function createCellRefMap(formula,sheetName){var cellRefMap={},addresses=formula.match(regex.d);return addresses&&addresses.forEach((function(address){var adrSheetName=sheetName,adrRef=address;if(address.includes("!")){var _a=address.split("!"),refSheetName=_a[0];adrRef=_a[1],adrSheetName=refSheetName.startsWith("'")&&refSheetName.endsWith("'")?refSheetName.substring(1,refSheetName.length-1):refSheetName}cellRefMap[adrSheetName]||(cellRefMap[adrSheetName]={positions:[],areaRanges:[]}),adrRef.includes(":")?cellRefMap[adrSheetName].areaRanges.push(Object(conversion.b)(adrRef)):cellRefMap[adrSheetName].positions.push(Object(conversion.c)(adrRef))})),cellRefMap}(cell.value,sheetName);dependents[sheetName]||(dependents[sheetName]={}),dependents[sheetName][y]||(dependents[sheetName][y]={}),dependents[sheetName][y][x]||(dependents[sheetName][y][x]=uniqid_default()());var formulaIndependentsId=dependents[sheetName][y][x];dependentsIndependents[formulaIndependentsId]||(dependentsIndependents[formulaIndependentsId]={}),Object.keys(formulaReferences).forEach((function(refSheetName){var sheetFormulaDependents=formulaReferences[refSheetName],areaRanges=sheetFormulaDependents.areaRanges,refPositions=sheetFormulaDependents.positions;dependentsIndependents[formulaIndependentsId][refSheetName]||(dependentsIndependents[formulaIndependentsId][refSheetName]={}),areaRanges&&(dependentsIndependents[formulaIndependentsId][refSheetName].areaRanges=areaRanges),refPositions&&(dependentsIndependents[formulaIndependentsId][refSheetName].positions=refPositions),refPositions.forEach((function(refPosition){formula_assignSheetIndependents(independents,independentDependents,sheetToIndependentDependentMap,refSheetName,sheetName,refPosition,position)})),areaRanges.forEach((function(areaRange){for(var xRange=areaRange.xRange,yRange=areaRange.yRange,rowIndex=yRange.start;rowIndex<=yRange.end;rowIndex+=1)for(var columnIndex=xRange.start;columnIndex<=xRange.end;columnIndex+=1)formula_assignSheetIndependents(independents,independentDependents,sheetToIndependentDependentMap,refSheetName,sheetName,{x:columnIndex,y:rowIndex},position)}))}))},formula_updateActiveCellRef=function updateActiveCellRef(sheetName,position,sheetsMap,dependents,dependentIndependent,independents,independentDependent,sheetToIndependentDependentMap,results){var addressReferences=[],x=position.x,y=position.y,cell=sheetsMap[sheetName].data[y]&&sheetsMap[sheetName].data[y][x]?sheetsMap[sheetName].data[y][x]:void 0;if(dependents[sheetName]&&dependents[sheetName][y]&&dependents[sheetName][y][x]){var positionDependents=dependentIndependent[dependents[sheetName][y][x]];positionDependents&&Object.keys(positionDependents).forEach((function(independentSheetName){var rows=independentDependent[independentSheetName];rows&&Object.keys(rows).forEach((function(rowIndex){var columns=rows[rowIndex];columns&&Object.keys(columns).forEach((function(columnIndex){delete independentDependent[independents[independentSheetName][rowIndex][columnIndex]][sheetName][y][x]}))}))}))}if(cell&&cell.type===types.a&&(addressReferences.push({position:position,sheetName:sheetName}),formula_assignDependentsAndIndependents(independents,independentDependent,sheetToIndependentDependentMap,dependents,dependentIndependent,position,cell,sheetName)),results[sheetName]&&results[sheetName][position.y]&&results[sheetName][position.y][position.x]&&delete results[sheetName][position.y][position.x],independents[sheetName]&&independents[sheetName][position.y]&&independents[sheetName][position.y][position.x]){var independentDependentId_1=independents[sheetName][position.y][position.x];independentDependent[independentDependentId_1]&&Object.keys(independentDependent[independentDependentId_1]).forEach((function(dependentSheetName){var dependentSheet=independentDependent[independentDependentId_1][dependentSheetName];dependentSheet&&Object.keys(dependentSheet).forEach((function(rowIndex){var row=dependentSheet[rowIndex];row&&Object.keys(row).forEach((function(columnIndex){addressReferences.push({sheetName:dependentSheetName,position:{y:+rowIndex,x:+columnIndex}})}))}))}))}formula_computeFormulas(sheetsMap,independents,independentDependent,results,addressReferences)},formula_deleteSheetRef=function deleteSheetRef(sheetName,sheetsMap,dependents,independents,independentDependent,sheetToIndependentDependentMap,results){var sheetDependents=sheetToIndependentDependentMap[sheetName];sheetDependents&&Object.keys(sheetDependents).forEach((function(id){delete independentDependent[id][sheetName]})),delete dependents[sheetName],delete results[sheetName];var addressReferences=createSheetAddressReferences(independents,independentDependent,sheetName);formula_computeFormulas(sheetsMap,independents,independentDependent,results,addressReferences)},formula_deletePositions=function deletePositions(sheetName,positions,sheetsMap,dependents,dependentIndependent,independents,independentDependent,sheetToIndependentDependentMap,results){var sheetIndependents=independents[sheetName],addressReferences=[];positions.forEach((function(position){var x=position.x,y=position.y;if(dependents[sheetName]&&dependents[sheetName][y]&&dependents[sheetName][y][x]){var dependentIndependentId=dependents[sheetName][y][x],positionDependents=dependentIndependent[dependentIndependentId];positionDependents&&Object.keys(positionDependents).forEach((function(independentSheetName){var rows=independentDependent[independentSheetName];rows&&Object.keys(rows).forEach((function(rowIndex){var columns=rows[rowIndex];columns&&Object.keys(columns).forEach((function(columnIndex){delete independentDependent[independents[independentSheetName][rowIndex][columnIndex]][sheetName][y][x]}))}))}))}results[sheetName]&&results[sheetName][y]&&results[sheetName][y][x]&&delete results[sheetName][y][x],dependents[sheetName]&&dependents[sheetName][y]&&dependents[sheetName][y][x]&&delete dependents[sheetName][y][x]})),positions.forEach((function(position){var x=position.x,y=position.y,cell=sheetsMap[sheetName].data[y]&&sheetsMap[sheetName].data[y][x]?sheetsMap[sheetName].data[y][x]:void 0;if(sheetIndependents&&sheetIndependents[y]&&sheetIndependents[y][x]){var independentDependentId_2=sheetIndependents[y][x];independentDependent[independentDependentId_2]&&Object.keys(independentDependent[independentDependentId_2]).forEach((function(dependentSheetName){var dependentSheet=independentDependent[independentDependentId_2][dependentSheetName];dependentSheet&&Object.keys(dependentSheet).forEach((function(rowIndex){var row=dependentSheet[rowIndex];row&&Object.keys(row).forEach((function(columnIndex){addressReferences.push({sheetName:dependentSheetName,position:{y:+rowIndex,x:+columnIndex}})}))}))}))}cell&&cell.type===types.a&&(addressReferences.push({position:position,sheetName:sheetName}),formula_assignDependentsAndIndependents(independents,independentDependent,sheetToIndependentDependentMap,dependents,dependentIndependent,position,cell,sheetName))})),formula_computeFormulas(sheetsMap,independents,independentDependent,results,addressReferences)},formula_updateWorkbookReference=function updateWorkbookReference(state){var addressReferences=[];return Object.keys(state.sheetsMap).forEach((function(sheetName){var sheet=state.sheetsMap[sheetName].data;Object.keys(sheet).forEach((function(rowIndex){var row=sheet[+rowIndex];Object.keys(row).forEach((function(columnIndex){var cell=row[+columnIndex];if(cell.type===types.a){var position={x:+columnIndex,y:+rowIndex};formula_assignDependentsAndIndependents(state.independentReferences,state.independentDependentReferences,state.sheetToIndependentDependentMap,state.dependentReferences,state.dependentIndependentReferences,position,cell,sheetName),addressReferences.push({sheetName:sheetName,position:position})}}))}))})),formula_computeFormulas(state.sheetsMap,state.independentReferences,state.independentDependentReferences,state.results,addressReferences),state};try{formula_updateWorkbookReference.displayName="updateWorkbookReference",formula_updateWorkbookReference.__docgenInfo={description:"",displayName:"updateWorkbookReference",props:{title:{defaultValue:null,description:"",name:"title",required:!0,type:{name:"string"}},activeSheetName:{defaultValue:null,description:"",name:"activeSheetName",required:!0,type:{name:"string"}},sheetNames:{defaultValue:null,description:"",name:"sheetNames",required:!0,type:{name:"ISheetNames"}},sheetsMap:{defaultValue:null,description:"",name:"sheetsMap",required:!0,type:{name:"ISheetsMap"}},error:{defaultValue:null,description:"",name:"error",required:!0,type:{name:"IError"}},isEditMode:{defaultValue:null,description:"",name:"isEditMode",required:!0,type:{name:"boolean"}},isSheetNavigationOpen:{defaultValue:null,description:"",name:"isSheetNavigationOpen",required:!0,type:{name:"boolean"}},isSheetNameEdit:{defaultValue:null,description:"",name:"isSheetNameEdit",required:!0,type:{name:"boolean"}},isSelectionMode:{defaultValue:null,description:"",name:"isSelectionMode",required:!0,type:{name:"boolean"}},cellEditorState:{defaultValue:null,description:"",name:"cellEditorState",required:!0,type:{name:"EditorState"}},titleEditorState:{defaultValue:null,description:"",name:"titleEditorState",required:!0,type:{name:"EditorState"}},selectionAreaIndex:{defaultValue:null,description:"",name:"selectionAreaIndex",required:!0,type:{name:"number"}},selectionArea:{defaultValue:null,description:"",name:"selectionArea",required:!1,type:{name:"IArea"}},activeCellPosition:{defaultValue:null,description:"",name:"activeCellPosition",required:!0,type:{name:"IPosition"}},inactiveSelectionAreas:{defaultValue:null,description:"",name:"inactiveSelectionAreas",required:!0,type:{name:"IInactiveSelectionAreas"}},results:{defaultValue:null,description:"",name:"results",required:!0,type:{name:"IResults"}},sheetNameText:{defaultValue:null,description:"",name:"sheetNameText",required:!0,type:{name:"string"}},scrollOffset:{defaultValue:null,description:"",name:"scrollOffset",required:!0,type:{name:"IPosition"}},isRowDrag:{defaultValue:null,description:"",name:"isRowDrag",required:!0,type:{name:"boolean"}},dragRowOffset:{defaultValue:null,description:"",name:"dragRowOffset",required:!1,type:{name:"number"}},dragRowIndex:{defaultValue:null,description:"",name:"dragRowIndex",required:!1,type:{name:"number"}},isColumnDrag:{defaultValue:null,description:"",name:"isColumnDrag",required:!0,type:{name:"boolean"}},dragColumnOffset:{defaultValue:null,description:"",name:"dragColumnOffset",required:!1,type:{name:"number"}},dragColumnIndex:{defaultValue:null,description:"",name:"dragColumnIndex",required:!1,type:{name:"number"}},lastVisitedCell:{defaultValue:null,description:"",name:"lastVisitedCell",required:!0,type:{name:"IPosition"}},dependentReferences:{defaultValue:null,description:"",name:"dependentReferences",required:!0,type:{name:"IDependentReferences"}},dependentIndependentReferences:{defaultValue:null,description:"",name:"dependentIndependentReferences",required:!0,type:{name:"IDependentIndependentReferenceMap"}},independentReferences:{defaultValue:null,description:"",name:"independentReferences",required:!0,type:{name:"IIndependentReferences"}},independentDependentReferences:{defaultValue:null,description:"",name:"independentDependentReferences",required:!0,type:{name:"IIndependentDependentReferenceMap"}},sheetToIndependentDependentMap:{defaultValue:null,description:"",name:"sheetToIndependentDependentMap",required:!0,type:{name:"ISheetToIndependentDependentMap"}},scrollHorizontal:{defaultValue:null,description:"",name:"scrollHorizontal",required:!0,type:{name:"IHorizontalOffsetType"}},scrollVertical:{defaultValue:null,description:"",name:"scrollVertical",required:!0,type:{name:"IVerticalOffsetType"}},topLeftPosition:{defaultValue:null,description:"",name:"topLeftPosition",required:!0,type:{name:"IPosition"}},cellEditorOffset:{defaultValue:null,description:"",name:"cellEditorOffset",required:!1,type:{name:"IPosition"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/formula/formula.ts#updateWorkbookReference"]={docgenInfo:formula_updateWorkbookReference.__docgenInfo,name:"updateWorkbookReference",path:"src/tools/formula/formula.ts#updateWorkbookReference"})}catch(__react_docgen_typescript_loader_error){}},97:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"c",(function(){return numberRegex})),__webpack_require__.d(__webpack_exports__,"b",(function(){return exactNumberRegex})),__webpack_require__.d(__webpack_exports__,"a",(function(){return columnNameRegex})),__webpack_require__.d(__webpack_exports__,"d",(function(){return sheetNameAdressRegex})),__webpack_require__.d(__webpack_exports__,"e",(function(){return sheetNameRegex}));var numberRegex=/[0-9]/,exactNumberRegex=/^[0-9]+$/,columnNameRegex=/^[A-Z]+$/,sheetNameAdressRegex=/((('([a-zA-Z0-9]|[-!$%^&@()_+|~=`{}:";<>,.])+')|(([a-zA-Z0-9])+))!)?(([A-Z]+[1-9][0-9]*):([A-Z]+[1-9][0-9]*)|([A-Z]+[1-9][0-9]*))/g,sheetNameRegex=/^Sheet(\d+)$/},99:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return columnNumberToName})),__webpack_require__.d(__webpack_exports__,"c",(function(){return convertStringPositionToPosition})),__webpack_require__.d(__webpack_exports__,"b",(function(){return convertAddressRangeToRange}));__webpack_require__(77),__webpack_require__(248),__webpack_require__(247);var _regex__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(97),_validation__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(264),_area__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(42),columnNameToNumber=function columnNameToNumber(name){if(void 0===name||"string"!=typeof name||!_regex__WEBPACK_IMPORTED_MODULE_3__.a.test(name))return null;name=name.toUpperCase();for(var sum=0,i=0;i<name.length;i+=1)sum*=26,sum+=name[i].charCodeAt(0)-"A".charCodeAt(0)+1;return sum},columnNumberToName=function columnNumberToName(number){if(number<1||Object(_validation__WEBPACK_IMPORTED_MODULE_4__.a)(number))return null;for(var dividend=number,name="",modulo=0;dividend>0;)modulo=(dividend-1)%26,name=String.fromCharCode("A".charCodeAt(0)+modulo)+name,dividend=Math.floor((dividend-modulo)/26);return name},getColumnNumberFromColumnName=function getColumnNumberFromColumnName(name){for(var sum=0,i=0;i<name.length;i+=1)sum*=26,sum+=name.charCodeAt(i)-("A".charCodeAt(0)-1);return sum},convertStringPositionToPosition=function convertStringPositionToPosition(stringPosition){var rowStartIndex=stringPosition.search(_regex__WEBPACK_IMPORTED_MODULE_3__.c),columnLetter=stringPosition.substring(0,rowStartIndex);return{x:getColumnNumberFromColumnName(columnLetter),y:+stringPosition.substring(rowStartIndex,stringPosition.length)}},convertAddressRangeToRange=function convertAddressRangeToRange(range){var _a=range.split(":"),topLeftAdr=_a[0],bottomRightAdr=_a[1];return Object(_area__WEBPACK_IMPORTED_MODULE_5__.f)({start:convertStringPositionToPosition(topLeftAdr),end:convertStringPositionToPosition(bottomRightAdr)})};try{columnNameToNumber.displayName="columnNameToNumber",columnNameToNumber.__docgenInfo={description:"Convert a column name to a number.\n! Taken from xlsx-populate/lib/addressConverter",displayName:"columnNameToNumber",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string or an object that supports being matched against, and returns an array\ncontaining the results of that search, or null if no matches are found.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { ...; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substring: string, ...args: any[]) => string): string; }"}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"(locales?: string | string[]) => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"(locales?: string | string[]) => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/conversion.ts#columnNameToNumber"]={docgenInfo:columnNameToNumber.__docgenInfo,name:"columnNameToNumber",path:"src/tools/conversion.ts#columnNameToNumber"})}catch(__react_docgen_typescript_loader_error){}try{columnNumberToName.displayName="columnNumberToName",columnNumberToName.__docgenInfo={description:"Convert a column number to a name.\n! Taken from xlsx-populate/lib/addressConverter",displayName:"columnNumberToName",props:{toString:{defaultValue:null,description:"Returns a string representation of an object.\n@param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.",name:"toString",required:!1,type:{name:"(radix?: number) => string"}},toFixed:{defaultValue:null,description:"Returns a string representing a number in fixed-point notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toFixed",required:!0,type:{name:"(fractionDigits?: number) => string"}},toExponential:{defaultValue:null,description:"Returns a string containing a number represented in exponential notation.\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.",name:"toExponential",required:!0,type:{name:"(fractionDigits?: number) => string"}},toPrecision:{defaultValue:null,description:"Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.\n@param precision Number of significant digits. Must be in the range 1 - 21, inclusive.",name:"toPrecision",required:!0,type:{name:"(precision?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => number"}},toLocaleString:{defaultValue:null,description:"Converts a number to a string by using the current or specified locale.\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n@param options An object that contains one or more properties that specify comparison options.",name:"toLocaleString",required:!1,type:{name:"(locales?: string | string[], options?: NumberFormatOptions) => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/conversion.ts#columnNumberToName"]={docgenInfo:columnNumberToName.__docgenInfo,name:"columnNumberToName",path:"src/tools/conversion.ts#columnNumberToName"})}catch(__react_docgen_typescript_loader_error){}try{getColumnNumberFromColumnName.displayName="getColumnNumberFromColumnName",getColumnNumberFromColumnName.__docgenInfo={description:"",displayName:"getColumnNumberFromColumnName",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string or an object that supports being matched against, and returns an array\ncontaining the results of that search, or null if no matches are found.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { ...; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substring: string, ...args: any[]) => string): string; }"}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"(locales?: string | string[]) => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"(locales?: string | string[]) => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/conversion.ts#getColumnNumberFromColumnName"]={docgenInfo:getColumnNumberFromColumnName.__docgenInfo,name:"getColumnNumberFromColumnName",path:"src/tools/conversion.ts#getColumnNumberFromColumnName"})}catch(__react_docgen_typescript_loader_error){}try{convertStringPositionToPosition.displayName="convertStringPositionToPosition",convertStringPositionToPosition.__docgenInfo={description:"",displayName:"convertStringPositionToPosition",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string or an object that supports being matched against, and returns an array\ncontaining the results of that search, or null if no matches are found.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { ...; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substring: string, ...args: any[]) => string): string; }"}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"(locales?: string | string[]) => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"(locales?: string | string[]) => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/conversion.ts#convertStringPositionToPosition"]={docgenInfo:convertStringPositionToPosition.__docgenInfo,name:"convertStringPositionToPosition",path:"src/tools/conversion.ts#convertStringPositionToPosition"})}catch(__react_docgen_typescript_loader_error){}try{convertAddressRangeToRange.displayName="convertAddressRangeToRange",convertAddressRangeToRange.__docgenInfo={description:"",displayName:"convertAddressRangeToRange",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string or an object that supports being matched against, and returns an array\ncontaining the results of that search, or null if no matches are found.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { ...; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substring: string, ...args: any[]) => string): string; }"}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"(locales?: string | string[]) => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"(locales?: string | string[]) => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tools/conversion.ts#convertAddressRangeToRange"]={docgenInfo:convertAddressRangeToRange.__docgenInfo,name:"convertAddressRangeToRange",path:"src/tools/conversion.ts#convertAddressRangeToRange"})}catch(__react_docgen_typescript_loader_error){}}}]);
//# sourceMappingURL=main~b8f0d581.e1e2a5d55a05dc4b96e2.bundle.js.map